//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.1
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2022.10.17 at 01:30:31 PM EDT
//

package curam.ca.gc.bdm.rest.bdmcorrespondenceapi.jaxb.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * A data type for a representation of an identity.
 *
 * <p>
 * Java class for IdentificationType complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="IdentificationType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://release.niem.gov/niem/structures/5.0/}ObjectType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}IdentificationID" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}IdentificationCategoryText" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}IdentificationCategoryDescriptionText" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}IdentificationEffectiveDate" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}IdentificationExpirationDate" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}IdentificationSourceText" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://release.niem.gov/niem/niem-core/5.0/}IdentificationStatus" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;anyAttribute processContents='lax' namespace='urn:us:gov:ic:ntk urn:us:gov:ic:ism'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "IdentificationType",
  namespace = "http://release.niem.gov/niem/niem-core/5.0/",
  propOrder = {"identificationID", "identificationCategoryText",
    "identificationCategoryDescriptionText", "identificationEffectiveDate",
    "identificationExpirationDate", "identificationSourceText",
    "identificationStatus" })
public class IdentificationType extends ObjectType {

  @XmlElement(name = "IdentificationID", nillable = true)
  protected List<String> identificationID;

  @XmlElement(name = "IdentificationCategoryText", nillable = true)
  protected List<TextType> identificationCategoryText;

  @XmlElement(name = "IdentificationCategoryDescriptionText", nillable = true)
  protected List<TextType> identificationCategoryDescriptionText;

  @XmlElement(name = "IdentificationEffectiveDate", nillable = true)
  protected List<DateType> identificationEffectiveDate;

  @XmlElement(name = "IdentificationExpirationDate", nillable = true)
  protected List<DateType> identificationExpirationDate;

  @XmlElement(name = "IdentificationSourceText", nillable = true)
  protected List<TextType> identificationSourceText;

  @XmlElement(name = "IdentificationStatus", nillable = true)
  protected List<StatusType> identificationStatus;

  /**
   * Gets the value of the identificationID property.
   *
   * <p>
   * This accessor method returns a reference to the live list,
   * not a snapshot. Therefore any modification you make to the
   * returned list will be present inside the Jakarta XML Binding object.
   * This is why there is not a <CODE>set</CODE> method for the identificationID
   * property.
   *
   * <p>
   * For example, to add a new item, do as follows:
   *
   * <pre>
   * getIdentificationID().add(newItem);
   * </pre>
   *
   *
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link String }
   *
   *
   */
  public List<String> getIdentificationID() {

    if (identificationID == null) {
      identificationID = new ArrayList<String>();
    }
    return this.identificationID;
  }

  /**
   * Gets the value of the identificationCategoryText property.
   *
   * <p>
   * This accessor method returns a reference to the live list,
   * not a snapshot. Therefore any modification you make to the
   * returned list will be present inside the Jakarta XML Binding object.
   * This is why there is not a <CODE>set</CODE> method for the
   * identificationCategoryText property.
   *
   * <p>
   * For example, to add a new item, do as follows:
   *
   * <pre>
   * getIdentificationCategoryText().add(newItem);
   * </pre>
   *
   *
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link TextType }
   *
   *
   */
  public List<TextType> getIdentificationCategoryText() {

    if (identificationCategoryText == null) {
      identificationCategoryText = new ArrayList<TextType>();
    }
    return this.identificationCategoryText;
  }

  /**
   * Gets the value of the identificationCategoryDescriptionText property.
   *
   * <p>
   * This accessor method returns a reference to the live list,
   * not a snapshot. Therefore any modification you make to the
   * returned list will be present inside the Jakarta XML Binding object.
   * This is why there is not a <CODE>set</CODE> method for the
   * identificationCategoryDescriptionText property.
   *
   * <p>
   * For example, to add a new item, do as follows:
   *
   * <pre>
   * getIdentificationCategoryDescriptionText().add(newItem);
   * </pre>
   *
   *
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link TextType }
   *
   *
   */
  public List<TextType> getIdentificationCategoryDescriptionText() {

    if (identificationCategoryDescriptionText == null) {
      identificationCategoryDescriptionText = new ArrayList<TextType>();
    }
    return this.identificationCategoryDescriptionText;
  }

  /**
   * Gets the value of the identificationEffectiveDate property.
   *
   * <p>
   * This accessor method returns a reference to the live list,
   * not a snapshot. Therefore any modification you make to the
   * returned list will be present inside the Jakarta XML Binding object.
   * This is why there is not a <CODE>set</CODE> method for the
   * identificationEffectiveDate property.
   *
   * <p>
   * For example, to add a new item, do as follows:
   *
   * <pre>
   * getIdentificationEffectiveDate().add(newItem);
   * </pre>
   *
   *
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link DateType }
   *
   *
   */
  public List<DateType> getIdentificationEffectiveDate() {

    if (identificationEffectiveDate == null) {
      identificationEffectiveDate = new ArrayList<DateType>();
    }
    return this.identificationEffectiveDate;
  }

  /**
   * Gets the value of the identificationExpirationDate property.
   *
   * <p>
   * This accessor method returns a reference to the live list,
   * not a snapshot. Therefore any modification you make to the
   * returned list will be present inside the Jakarta XML Binding object.
   * This is why there is not a <CODE>set</CODE> method for the
   * identificationExpirationDate property.
   *
   * <p>
   * For example, to add a new item, do as follows:
   *
   * <pre>
   * getIdentificationExpirationDate().add(newItem);
   * </pre>
   *
   *
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link DateType }
   *
   *
   */
  public List<DateType> getIdentificationExpirationDate() {

    if (identificationExpirationDate == null) {
      identificationExpirationDate = new ArrayList<DateType>();
    }
    return this.identificationExpirationDate;
  }

  /**
   * Gets the value of the identificationSourceText property.
   *
   * <p>
   * This accessor method returns a reference to the live list,
   * not a snapshot. Therefore any modification you make to the
   * returned list will be present inside the Jakarta XML Binding object.
   * This is why there is not a <CODE>set</CODE> method for the
   * identificationSourceText property.
   *
   * <p>
   * For example, to add a new item, do as follows:
   *
   * <pre>
   * getIdentificationSourceText().add(newItem);
   * </pre>
   *
   *
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link TextType }
   *
   *
   */
  public List<TextType> getIdentificationSourceText() {

    if (identificationSourceText == null) {
      identificationSourceText = new ArrayList<TextType>();
    }
    return this.identificationSourceText;
  }

  /**
   * Gets the value of the identificationStatus property.
   *
   * <p>
   * This accessor method returns a reference to the live list,
   * not a snapshot. Therefore any modification you make to the
   * returned list will be present inside the Jakarta XML Binding object.
   * This is why there is not a <CODE>set</CODE> method for the
   * identificationStatus property.
   *
   * <p>
   * For example, to add a new item, do as follows:
   *
   * <pre>
   * getIdentificationStatus().add(newItem);
   * </pre>
   *
   *
   * <p>
   * Objects of the following type(s) are allowed in the list
   * {@link StatusType }
   *
   *
   */
  public List<StatusType> getIdentificationStatus() {

    if (identificationStatus == null) {
      identificationStatus = new ArrayList<StatusType>();
    }
    return this.identificationStatus;
  }

}
