<?xml version="1.0" encoding="UTF-8"?>

<root>
  <!--SQLJ Declarations-->
  <sqljentries>
    <sqlj name="CREOLERuleAttributeValue" operation="removeForRuleSetStructureChanges" plainsql="DELETE FROM CREOLERuleAttributeValue   WHERE  CREOLERuleAttributeValue.creoleAttributeAvailabilityID IN (  	SELECT CREOLEAttributeAvailability.creoleAttributeAvailabilityID   	FROM   CREOLEAttributeAvailability   	WHERE  CREOLEAttributeAvailability.migrationAction = :migrationAction   )">
      <parameter name="curam.creole.database.struct.MigrationActionKey">
        <attribute name="migrationAction" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
    </sqlj>
    <sqlj name="CREOLERuleAttributeValue" operation="searchByChangedAttributeDerivation" plainsql="SELECT CREOLERuleAttributeValue.creoleRuleAttributeValueID,          CREOLERuleAttributeValue.creoleRuleObjectID,          CREOLERuleAttributeValue.creoleAttributeAvailabilityID,          CREOLERuleAttributeValue.value,          CREOLERuleAttributeValue.hashcode,          CREOLERuleAttributeValue.state,          CREOLERuleAttributeValue.overflowID,          CREOLERuleAttributeValue.versionNo   INTO   :creoleRuleAttributeValueID,         :creoleRuleObjectID,          :creoleAttributeAvailabilityID,          :value,          :hashcode,         :state,         :overflowID,         :versionNo   FROM   CREOLERuleAttributeValue   WHERE  CREOLERuleAttributeValue.creoleAttributeAvailabilityID IN    (  	SELECT CREOLEAttributeAvailability.creoleAttributeAvailabilityID   	FROM   CREOLEAttributeAvailability   	       INNER JOIN CREOLERuleAttribute   		 ON CREOLERuleAttribute.creoleRuleAttributeID =   		    CREOLEAttributeAvailability.availableRuleAttributeID   	WHERE  CREOLERuleAttribute.migrationAction = :migrationAction   )">
      <parameter name="curam.creole.database.struct.MigrationActionKey">
        <attribute name="migrationAction" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.creole.database.struct.CREOLERuleAttributeValueDtls">
        <attribute name="creoleRuleAttributeValueID" ddltype="SVR_INT64"/>
        <attribute name="creoleRuleObjectID" ddltype="SVR_INT64"/>
        <attribute name="creoleAttributeAvailabilityID" ddltype="SVR_INT64"/>
        <attribute name="value" ddltype="SVR_STRING&lt;3900&gt;"/>
        <attribute name="hashcode" ddltype="SVR_INT64"/>
        <attribute name="state" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="overflowID" ddltype="SVR_INT64"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleAttributeValue" operation="identifyAttributeValuesToCreateForNewAvailableAttributes" plainsql="SELECT CREOLERuleObject.creoleRuleObjectID,          CREOLEAttributeAvailability.creoleAttributeAvailabilityID   INTO   :creoleRuleObjectID,         :creoleAttributeAvailabilityID   FROM   CREOLERuleObject          INNER JOIN CREOLEAttributeAvailability            ON CREOLERuleObject.creoleRuleClassID =               CREOLEAttributeAvailability.creoleRuleClassID   WHERE  CREOLEAttributeAvailability.migrationAction = :migrationAction ">
      <parameter name="curam.creole.database.struct.MigrationActionKey">
        <attribute name="migrationAction" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.creole.database.struct.CREOLERuleAttributeValueDtls">
        <attribute name="creoleRuleAttributeValueID" ddltype="SVR_INT64"/>
        <attribute name="creoleRuleObjectID" ddltype="SVR_INT64"/>
        <attribute name="creoleAttributeAvailabilityID" ddltype="SVR_INT64"/>
        <attribute name="value" ddltype="SVR_STRING&lt;3900&gt;"/>
        <attribute name="hashcode" ddltype="SVR_INT64"/>
        <attribute name="state" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="overflowID" ddltype="SVR_INT64"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleAttributeValue" operation="searchForInitialCalculation" plainsql="SELECT CREOLERuleAttributeValue.creoleRuleAttributeValueID,          CREOLERuleAttributeValue.creoleRuleObjectID,          CREOLERuleAttributeValue.creoleAttributeAvailabilityID,          CREOLERuleAttributeValue.value,          CREOLERuleAttributeValue.hashcode,          CREOLERuleAttributeValue.state,          CREOLERuleAttributeValue.overflowID,          CREOLERuleAttributeValue.versionNo   INTO   :creoleRuleAttributeValueID,         :creoleRuleObjectID,          :creoleAttributeAvailabilityID,          :value,         :hashcode,          :state,          :overflowID,          :versionNo   FROM   CREOLERuleAttributeValue          INNER JOIN CREOLEAttributeInheritance            ON CREOLERuleAttributeValue.creoleAttributeAvailabilityID =               CREOLEAttributeInheritance.descendantAttrAvailabilityID          INNER JOIN CREOLEAttributeAvailability AncestorAttrAvty            ON CREOLEAttributeInheritance.ancestorAttrAvailabilityID =               AncestorAttrAvty.creoleAttributeAvailabilityID   WHERE  AncestorAttrAvty.migrationAction = :migrationAction          AND CREOLERuleAttributeValue.state &lt;&gt; :state ">
      <parameter name="curam.creole.database.struct.InitialCalculationSearchKey">
        <attribute name="migrationAction" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="state" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.creole.database.struct.CREOLERuleAttributeValueDtls">
        <attribute name="creoleRuleAttributeValueID" ddltype="SVR_INT64"/>
        <attribute name="creoleRuleObjectID" ddltype="SVR_INT64"/>
        <attribute name="creoleAttributeAvailabilityID" ddltype="SVR_INT64"/>
        <attribute name="value" ddltype="SVR_STRING&lt;3900&gt;"/>
        <attribute name="hashcode" ddltype="SVR_INT64"/>
        <attribute name="state" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="overflowID" ddltype="SVR_INT64"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleObject" operation="searchByAncestorRuleClass" plainsql="SELECT    CREOLERuleObject.creoleRuleObjectID,    CREOLERuleObject.creoleRuleClassID  INTO    :creoleRuleObjectID,    :creoleRuleClassID  FROM CREOLERuleObject  INNER JOIN CREOLERuleClassInheritance ON CREOLERuleObject.creoleRuleClassID = CREOLERuleClassInheritance.descendantClassID  WHERE CREOLERuleClassInheritance.ancestorClassID = :creoleRuleClassID  ORDER BY CREOLERuleObject.creoleRuleObjectID  ">
      <parameter name="curam.creole.database.struct.CREOLERuleClassKey">
        <attribute name="creoleRuleClassID" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.creole.database.struct.CREOLERuleObjectDtls">
        <attribute name="creoleRuleObjectID" ddltype="SVR_INT64"/>
        <attribute name="creoleRuleClassID" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleObject" operation="countAll" plainsql="SELECT COUNT(*) INTO :count FROM CREOLERuleObject">
      <returntype name="curam.creole.database.struct.RecordCount">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleObject" operation="removeForRuleSetStructureChanges" plainsql="DELETE FROM CREOLERuleObject   WHERE  CREOLERuleObject.creoleRuleClassID IN (  	SELECT CREOLERuleClass.creoleRuleClassID   	FROM   CREOLERuleClass   	WHERE  CREOLERuleClass.migrationAction = :migrationAction                ) ">
      <parameter name="curam.creole.database.struct.MigrationActionKey">
        <attribute name="migrationAction" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
    </sqlj>
    <sqlj name="CREOLERuleObject" operation="searchByAncestorRuleClassMatchingAttributeValue" plainsql="SELECT CREOLERuleAttributeValue.creoleRuleAttributeValueID,         CREOLERuleAttributeValue.creoleRuleObjectID,         CREOLERuleAttributeValue.creoleAttributeAvailabilityID,         CREOLERuleAttributeValue.value,         CREOLERuleAttributeValue.hashcode,         CREOLERuleAttributeValue.state,         CREOLERuleAttributeValue.overflowID,         CREOLERuleAttributeValue.versionNo,         CREOLERuleObject.creoleRuleClassID   INTO   :creoleRuleAttributeValueID,         :creoleRuleObjectID,         :creoleAttributeAvailabilityID,         :value,         :hashcode,         :state,         :overflowID,         :versionNo,         :creoleRuleClassID    FROM   CREOLERuleObject   INNER JOIN CREOLERuleAttributeValue ON CREOLERuleAttributeValue.creoleRuleObjectID = CREOLERuleObject.creoleRuleObjectID   INNER JOIN CREOLEAttributeInheritance ON CREOLEAttributeInheritance.descendantAttrAvailabilityID = CREOLERuleAttributeValue.creoleAttributeAvailabilityID   WHERE  CREOLEAttributeInheritance.ancestorAttrAvailabilityID = :creoleAttributeAvailabilityID   AND    CREOLERuleAttributeValue.hashcode = :hashcode   ORDER  BY CREOLERuleObject.creoleRuleObjectID ">
      <parameter name="curam.creole.database.struct.SearchExternalByAncestorRuleClassMatchingAttributeValueHashKey">
        <attribute name="hashcode" ddltype="SVR_INT64"/>
        <attribute name="creoleAttributeAvailabilityID" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.creole.database.struct.MatchedAttributeValueDetails">
        <attribute name="creoleRuleAttributeValueID" ddltype="SVR_INT64"/>
        <attribute name="creoleRuleObjectID" ddltype="SVR_INT64"/>
        <attribute name="creoleAttributeAvailabilityID" ddltype="SVR_INT64"/>
        <attribute name="value" ddltype="SVR_STRING&lt;3900&gt;"/>
        <attribute name="hashcode" ddltype="SVR_INT64"/>
        <attribute name="state" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="overflowID" ddltype="SVR_INT64"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
        <attribute name="creoleRuleClassID" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleSetEditAction" operation="searchByRuleSetID" plainsql="SELECT    CREOLERuleSetEditAction.creoleRuleSetEditActionID,    CREOLERuleSetEditAction.creoleRuleSetSnapshotID,    CREOLERuleSetEditAction.actionType,    CREOLERuleSetEditAction.userName,    CREOLERuleSetEditAction.actionDateTime,    CREOLERuleSetEditAction.ruleSetDefinition,    CREOLERuleSetEditAction.pendingPublicationInd,    CREOLERuleSetEditAction.versionNo  INTO    :creoleRuleSetEditActionID,    :creoleRuleSetSnapshotID,    :actionType,    :userName,    :actionDateTime,    :ruleSetDefinition,    :pendingPublicationInd,    :versionNo  FROM    CREOLERuleSetEditAction INNER JOIN    CREOLERuleSetSnapshot ON CREOLERuleSetEditAction.creoleRuleSetSnapshotID = CREOLERuleSetSnapshot.creoleRuleSetSnapshotID  WHERE    CREOLERuleSetSnapshot.creoleRuleSetID = :creoleRuleSetID">
      <parameter name="curam.creole.database.struct.SearchByRuleSetIDKey">
        <attribute name="creoleRuleSetID" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.creole.database.struct.CREOLERuleSetEditActionDtls">
        <attribute name="creoleRuleSetEditActionID" ddltype="SVR_INT64"/>
        <attribute name="creoleRuleSetSnapshotID" ddltype="SVR_INT64"/>
        <attribute name="actionType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="userName" ddltype="SVR_STRING&lt;64&gt;"/>
        <attribute name="actionDateTime" ddltype="SVR_DATETIME"/>
        <attribute name="ruleSetDefinition" ddltype="SVR_BLOB&lt;1000000000&gt;"/>
        <attribute name="pendingPublicationInd" ddltype="SVR_BOOLEAN"/>
        <attribute name="descriptionID" ddltype="SVR_INT64"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleSetGroup" operation="searchByRuleSet" plainsql="SELECT distinct groupID  into :groupID  from CREOLERuleSetGroup  where ruleSetName = :name">
      <parameter name="curam.creole.database.struct.CREOLERuleSetIDAndName">
        <attribute name="creoleRuleSetID" ddltype="SVR_INT64"/>
        <attribute name="name" ddltype="SVR_STRING&lt;255&gt;"/>
      </parameter>
      <returntype name="curam.creole.database.struct.CREOLERuleSetGroupID">
        <attribute name="groupID" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleSet" operation="searchByNonNullRuleSetVersion" plainsql="SELECT    creoleRuleSetID,    name,    ruleSetDefinition,    ruleSetVersion,    versionNo  INTO    :creoleRuleSetID,    :name,    :ruleSetDefinition,    :ruleSetVersion,    :versionNo  FROM CREOLERuleSet  WHERE ruleSetVersion IS NOT NULL">
      <returntype name="curam.creole.database.struct.CREOLERuleSetDtls">
        <attribute name="creoleRuleSetID" ddltype="SVR_INT64"/>
        <attribute name="name" ddltype="SVR_STRING&lt;255&gt;"/>
        <attribute name="ruleSetDefinition" ddltype="SVR_BLOB&lt;1000000000&gt;"/>
        <attribute name="ruleSetVersion" ddltype="SVR_INT32"/>
        <attribute name="migrationAction" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="descriptionID" ddltype="SVR_INT64"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleSet" operation="searchByNullDefinition" plainsql="SELECT    creoleRuleSetID,    name,    ruleSetDefinition,    ruleSetVersion,    versionNo  INTO    :creoleRuleSetID,    :name,    :ruleSetDefinition,    :ruleSetVersion,    :versionNo  FROM CREOLERuleSet  WHERE ruleSetDefinition IS NULL">
      <returntype name="curam.creole.database.struct.CREOLERuleSetDtls">
        <attribute name="creoleRuleSetID" ddltype="SVR_INT64"/>
        <attribute name="name" ddltype="SVR_STRING&lt;255&gt;"/>
        <attribute name="ruleSetDefinition" ddltype="SVR_BLOB&lt;1000000000&gt;"/>
        <attribute name="ruleSetVersion" ddltype="SVR_INT32"/>
        <attribute name="migrationAction" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="descriptionID" ddltype="SVR_INT64"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleSet" operation="countByName" plainsql="SELECT COUNT(*)  INTO :count  FROM CREOLERuleSet  WHERE name = :name">
      <parameter name="curam.creole.database.struct.RuleSetNameKey">
        <attribute name="name" ddltype="SVR_STRING&lt;255&gt;"/>
      </parameter>
      <returntype name="curam.creole.database.struct.RecordCount">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleSet" operation="narrowReadAll" plainsql="SELECT    creoleRuleSetID,    descriptionID,    migrationAction,    ruleSetVersion,    name,    versionNo  INTO    :creoleRuleSetID,    :descriptionID,    :migrationAction,    :ruleSetVersion,    :name,    :versionNo  FROM CREOLERuleSet">
      <returntype name="curam.creole.database.struct.CREOLERuleSetNarrowDtls">
        <attribute name="creoleRuleSetID" ddltype="SVR_INT64"/>
        <attribute name="ruleSetVersion" ddltype="SVR_INT32"/>
        <attribute name="name" ddltype="SVR_STRING&lt;255&gt;"/>
        <attribute name="migrationAction" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="descriptionID" ddltype="SVR_INT64"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleSet" operation="readAllRuleSetsForDisplay" plainsql="select   	rs.creoleRuleSetID,  	rs.ruleSetVersion,  	rs.name,  	rs.descriptionID,  	rsn.creoleRuleSetSnapShotID,  	rsn.snapshotDateTime,  	rea.creoleRuleSetEditActionID,  	rsn.actionType,  	rsn.userName  into  	:creoleRuleSetID,  	:ruleSetVersion,  	:name,  	:descriptionID,  	:creoleRuleSetSnapshotID,  	:actionDateTimeStamp,  	:creoleRuleSetEditActionID,  	:actionType,  	:userName  from   	CREOLERULESET rs   LEFT JOIN   	CREOLERULESETSNAPSHOT rsn  ON   	rsn.creoleRuleSetID = rs.creoleRuleSetID and   	rsn.ruleSetVersion = rs.ruleSetVersion  LEFT JOIN   	CREOLERULESETEDITACTION rea ON  	rsn.CREOLERULESETSNAPSHOTID = rea.CREOLERULESETSNAPSHOTID  WHERE rea.CREOLERULESETSNAPSHOTID IS NULL  union   select   	rs.creoleRuleSetID,  	rs.ruleSetVersion,  	rs.name,  	rs.descriptionID,  	rsn.creoleRuleSetSnapShotID,  	rea.actionDateTime,  	rea.creoleRuleSetEditActionID,  	rea.actionType,  	rea.userName  FROM   	CREOLERULESETEDITACTION rea  INNER JOIN   	CREOLERULESETSNAPSHOT rsn	  ON   	rea.CREOLERULESETSNAPSHOTID = rsn.CREOLERULESETSNAPSHOTID    LEFT JOIN   	CREOLERULESET rs  ON   	rsn.creoleRuleSetID = rs.creoleRuleSetID and   	rsn.ruleSetVersion = rs.ruleSetVersion">
      <returntype name="curam.creole.database.struct.RuleSetForDisplayDetails">
        <attribute name="descriptionID" ddltype="SVR_INT64"/>
        <attribute name="name" ddltype="SVR_STRING&lt;255&gt;"/>
        <attribute name="ruleSetVersion" ddltype="SVR_INT32"/>
        <attribute name="creoleRuleSetID" ddltype="SVR_INT64"/>
        <attribute name="creoleRuleSetSnapshotID" ddltype="SVR_INT64"/>
        <attribute name="actionDateTimeStamp" ddltype="SVR_DATETIME"/>
        <attribute name="creoleRuleSetEditActionID" ddltype="SVR_INT64"/>
        <attribute name="actionType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="userName" ddltype="SVR_STRING&lt;64&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleSetSnapshot" operation="getHighestRuleSetVersionByRuleSetID" plainsql="SELECT MAX(ruleSetVersion)   INTO   :ruleSetVersion   FROM   CREOLERuleSetSnapshot   WHERE  creoleRuleSetID = :creoleRuleSetID">
      <parameter name="curam.creole.database.struct.CREOLERuleSetKey">
        <attribute name="creoleRuleSetID" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.creole.database.struct.RuleSetVersion">
        <attribute name="ruleSetVersion" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLERuleSetSnapshot" operation="countSnapshotsForRuleSet" plainsql="SELECT COUNT(creoleRuleSetID)   INTO   :ruleSetVersion   FROM   CREOLERuleSetSnapshot  WHERE  creoleRuleSetID = :creoleRuleSetID">
      <parameter name="curam.creole.database.struct.CREOLERuleSetKey">
        <attribute name="creoleRuleSetID" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.creole.database.struct.RuleSetVersion">
        <attribute name="ruleSetVersion" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLEValueOverflow" operation="searchByRemoveRAMatchDependencyForRuleSetStructureChanges" plainsql="SELECT CREOLEValueOverflow.creoleValueOverflowID,          CREOLEValueOverflow.VALUE,          CREOLEValueOverflow.moreOverflowID   INTO   :creoleValueOverflowID,          :value,         :moreOverflowID   FROM  CREOLEValueOverflow   WHERE  1=2 ">
      <parameter name="curam.creole.database.struct.MigrationActionKey">
        <attribute name="migrationAction" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.creole.database.struct.CREOLEValueOverflowDtls">
        <attribute name="creoleValueOverflowID" ddltype="SVR_INT64"/>
        <attribute name="value" ddltype="SVR_STRING&lt;3900&gt;"/>
        <attribute name="moreOverflowID" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CREOLEValueOverflow" operation="searchByRemoveAttributeValueForRuleSetStructureChanges" plainsql="SELECT CREOLEValueOverflow.creoleValueOverflowID,          CREOLEValueOverflow.VALUE,          CREOLEValueOverflow.moreOverflowID   INTO   :creoleValueOverflowID,         :value,         :moreOverflowID   FROM   CREOLEValueOverflow          INNER JOIN CREOLERuleAttributeValue            ON CREOLEValueOverflow.creoleValueOverflowID =               CREOLERuleAttributeValue.overflowID   WHERE  CREOLERuleAttributeValue.creoleAttributeAvailabilityID IN (  	SELECT CREOLEAttributeAvailability.creoleAttributeAvailabilityID   	FROM   CREOLEAttributeAvailability   	WHERE  CREOLEAttributeAvailability.migrationAction = :migrationAction  )">
      <parameter name="curam.creole.database.struct.MigrationActionKey">
        <attribute name="migrationAction" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.creole.database.struct.CREOLEValueOverflowDtls">
        <attribute name="creoleValueOverflowID" ddltype="SVR_INT64"/>
        <attribute name="value" ddltype="SVR_STRING&lt;3900&gt;"/>
        <attribute name="moreOverflowID" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctDependentsByPrecedentChangeSetDependentType" plainsql="SELECT DISTINCT Dependency.dependentType,                   Dependency.dependentID   INTO   :dependentType, :dependentID   FROM   Dependency          INNER JOIN PrecedentChangeItem            ON Dependency.precedentType = PrecedentChangeItem. precedentType               AND Dependency.precedentID = PrecedentChangeItem.precedentID   WHERE  PrecedentChangeItem.precedentChangeSetID = :precedentChangeSetID          AND ( :dependentType IS NULL                 OR Dependency.dependentType = :dependentType )   ORDER  BY dependentType,             dependentID   ">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentTypeKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentKey">
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctDependentsByPrecedentAndDependentType" plainsql="SELECT DISTINCT dependentType,                   dependentID   INTO   :dependentType, :dependentID   FROM   Dependency   WHERE  precedentType = :precedentType          AND precedentID = :precedentID          AND ( :dependentType IS NULL                 OR dependentType = :dependentType )   ORDER  BY dependentType,             dependentID ">
      <parameter name="curam.dependency.struct.PrecedentAndDependentTypeKey">
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentKey">
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctPrecedentsByDependentAndPrecedentType" plainsql="SELECT DISTINCT precedentType,                   precedentID   INTO   :precedentType, :precedentID   FROM   Dependency   WHERE  dependentType = :dependentType          AND dependentID = :dependentID          AND ( :precedentType IS NULL                 OR precedentType = :precedentType )   ORDER  BY precedentType,             precedentID ">
      <parameter name="curam.dependency.struct.DependentAndPrecedentTypeKey">
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.PrecedentKey">
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctPrecedentsByDependentAndPrecedentChangeSet" plainsql="SELECT DISTINCT Dependency.precedentType,                   Dependency.precedentID   INTO   :precedentType, :precedentID   FROM   Dependency          INNER JOIN PrecedentChangeItem            ON PrecedentChangeItem.precedentType = Dependency.precedentType               AND PrecedentChangeItem.precedentID = Dependency.precedentID   WHERE  Dependency.dependentType = :dependentType          AND Dependency.dependentID = :dependentID          AND PrecedentChangeItem.precedentChangeSetID = :precedentChangeSetID   ORDER  BY precedentType,             precedentID ">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.PrecedentKey">
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctDependentsByPrecedentChangeSetDependentTypeIsNull" plainsql="SELECT DISTINCT Dependency.dependentType, Dependency.dependentID INTO :dependentType, :dependentID FROM Dependency INNER JOIN PrecedentChangeItem ON Dependency.precedentType=PrecedentChangeItem.precedentType AND Dependency.precedentID=PrecedentChangeItem.precedentID WHERE PrecedentChangeItem.precedentChangeSetID=:precedentChangeSetID ORDER BY dependentType, dependentID">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentTypeKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentKey">
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctDependentsByPrecedentChangeSetDependentTypeIsNotNull" plainsql="SELECT DISTINCT Dependency.dependentID INTO :dependentID  FROM Dependency, PrecedentChangeItem, PrecedentChangeSet WHERE Dependency.precedentType= PrecedentChangeItem.precedentType AND Dependency.precedentID= PrecedentChangeItem.precedentID AND PrecedentChangeItem.precedentChangeSetID = PrecedentChangeSet.precedentChangeSetID AND PrecedentChangeItem.precedentChangeSetID= :precedentChangeSetID AND Dependency.dependentType= :dependentType  ORDER BY dependentID;">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentTypeKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentKey">
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="countDistinctDependentsByPrecedentChangeSetDependentTypeIsNull" plainsql="SELECT COUNT (DISTINCT Dependency.dependentID) INTO :count FROM Dependency INNER JOIN PrecedentChangeItem ON Dependency.precedentType=PrecedentChangeItem.precedentType AND Dependency.precedentID=PrecedentChangeItem.precedentID WHERE PrecedentChangeItem.precedentChangeSetID=:precedentChangeSetID">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentTypeKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentCount">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="countDistinctDependentsByPrecedentChangeSetDependentTypeIsNotNull" plainsql="SELECT COUNT (DISTINCT Dependency.dependentID) INTO :count FROM Dependency,PrecedentChangeItem,PrecedentChangeSet WHERE Dependency.precedentType=PrecedentChangeItem.precedentType AND Dependency.precedentID=PrecedentChangeItem.precedentID AND PrecedentChangeItem.precedentChangeSetID=PrecedentChangeSet.precedentChangeSetID AND PrecedentChangeItem.precedentChangeSetID=:precedentChangeSetID AND Dependency.dependentType=:dependentType">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentTypeKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentCount">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctDependentsByPrecedentAndDependentTypeIsNull" plainsql="SELECT DISTINCT dependentType,dependentID INTO :dependentType,:dependentID FROM Dependency WHERE precedentType=:precedentType AND precedentID=:precedentID ORDER BY dependentType, dependentID">
      <parameter name="curam.dependency.struct.PrecedentAndDependentTypeKey">
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentKey">
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctDependentsByPrecedentAndDependentTypeIsNotNull" plainsql="SELECT dependentID INTO :dependentID FROM Dependency WHERE precedentType=:precedentType AND precedentID=:precedentID AND dependentType=:dependentType ORDER BY dependentID">
      <parameter name="curam.dependency.struct.PrecedentAndDependentTypeKey">
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentKey">
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctPrecedentsByDependentAndPrecedentTypeIsNull" plainsql="SELECT DISTINCT precedentType,precedentID INTO :precedentType,:precedentID FROM DEPENDENCY WHERE dependentType=:dependentType AND dependentID=:dependentID ORDER BY precedentType, precedentID">
      <parameter name="curam.dependency.struct.DependentAndPrecedentTypeKey">
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.PrecedentKey">
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctPrecedentsByDependentAndPrecedentTypeIsNotNull" plainsql="SELECT precedentID INTO :precedentID FROM DEPENDENCY WHERE dependentType=:dependentType AND dependentID=:dependentID AND precedentType=:precedentType ORDER BY precedentID">
      <parameter name="curam.dependency.struct.DependentAndPrecedentTypeKey">
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.PrecedentKey">
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="countDistinctDependentsByPrecedentChangeSetDependentTypeIsNotNullWithHash" plainsql="SELECT COUNT (DISTINCT Dependency.dependentID) INTO :count FROM Dependency,PrecedentChangeItem,PrecedentChangeSet WHERE Dependency.precedentType=PrecedentChangeItem.precedentType AND Dependency.precedentIDHash=PrecedentChangeItem.precedentIDHash AND Dependency.precedentID=PrecedentChangeItem.precedentID   AND PrecedentChangeItem.precedentChangeSetID=PrecedentChangeSet.precedentChangeSetID AND PrecedentChangeItem.precedentChangeSetID=:precedentChangeSetID AND Dependency.dependentType=:dependentType">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentTypeKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentCount">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="countDistinctDependentsByPrecedentChangeSetDependentTypeIsNullWithHash" plainsql="SELECT COUNT (DISTINCT Dependency.dependentID) INTO :count FROM Dependency INNER JOIN PrecedentChangeItem ON Dependency.precedentType=PrecedentChangeItem.precedentType AND Dependency.precedentIDHash=PrecedentChangeItem.precedentIDHash AND Dependency.precedentID=PrecedentChangeItem.precedentID WHERE PrecedentChangeItem.precedentChangeSetID=:precedentChangeSetID">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentTypeKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentCount">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctDependentsByPrecedentAndDependentTypeIsNotNullWithHash" plainsql="SELECT dependentID INTO :dependentID FROM Dependency WHERE precedentType=:precedentType AND precedentIDHash=:precedentIDHash AND precedentID=:precedentID AND dependentType=:dependentType ORDER BY dependentID">
      <parameter name="curam.dependency.struct.PrecedentAndDependentTypeWithHashKey">
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="precedentIDHash" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentKey">
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctDependentsByPrecedentAndDependentTypeIsNullWithHash" plainsql="SELECT DISTINCT dependentType,dependentID INTO :dependentType,:dependentID FROM Dependency WHERE precedentType=:precedentType AND precedentIDHash=:precedentIDHash AND precedentID=:precedentID ORDER BY dependentType, dependentID">
      <parameter name="curam.dependency.struct.PrecedentAndDependentTypeWithHashKey">
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="precedentIDHash" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentKey">
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctDependentsByPrecedentChangeSetDependentTypeIsNotNullWithHash" plainsql="SELECT DISTINCT Dependency.dependentID INTO :dependentID  FROM Dependency, PrecedentChangeItem, PrecedentChangeSet WHERE Dependency.precedentType= PrecedentChangeItem.precedentType AND Dependency.precedentIDHash= PrecedentChangeItem.precedentIDHash AND Dependency.precedentID= PrecedentChangeItem.precedentID AND PrecedentChangeItem.precedentChangeSetID = PrecedentChangeSet.precedentChangeSetID AND PrecedentChangeItem.precedentChangeSetID= :precedentChangeSetID AND Dependency.dependentType= :dependentType ORDER BY dependentID;">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentTypeKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentKey">
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctDependentsByPrecedentChangeSetDependentTypeIsNullWithHash" plainsql="SELECT DISTINCT Dependency.dependentType, Dependency.dependentID INTO :dependentType, :dependentID FROM Dependency INNER JOIN PrecedentChangeItem ON Dependency.precedentType=PrecedentChangeItem.precedentType AND Dependency.precedentIDHash= PrecedentChangeItem.precedentIDHash AND Dependency.precedentID=PrecedentChangeItem.precedentID WHERE PrecedentChangeItem.precedentChangeSetID=:precedentChangeSetID ORDER BY dependentType, dependentID">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentTypeKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependentKey">
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctPrecedentsByDependentAndPrecedentChangeSetWithHash" plainsql="SELECT DISTINCT Dependency.precedentType,                   Dependency.precedentID   INTO   :precedentType, :precedentID   FROM   Dependency          INNER JOIN PrecedentChangeItem            ON PrecedentChangeItem.precedentType = Dependency.precedentType AND PrecedentChangeItem.precedentIDHash = Dependency.precedentIDHash               AND PrecedentChangeItem.precedentID = Dependency.precedentID   WHERE  Dependency.dependentType = :dependentType          AND Dependency.dependentIDHash = :dependentIDHash          AND Dependency.dependentID = :dependentID          AND PrecedentChangeItem.precedentChangeSetID = :precedentChangeSetID   ORDER  BY precedentType,             precedentID ">
      <parameter name="curam.dependency.struct.PrecedentChangeSetAndDependentWithHashKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="dependentIDHash" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.dependency.struct.PrecedentKey">
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctPrecedentsByDependentAndPrecedentTypeIsNotNullWithHash" plainsql="SELECT precedentID INTO :precedentID FROM DEPENDENCY WHERE dependentType=:dependentType AND dependentIDHash=:dependentIDHash AND dependentID=:dependentID AND precedentType=:precedentType ORDER BY precedentID">
      <parameter name="curam.dependency.struct.DependentAndPrecedentTypeWithHashKey">
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="dependentIDHash" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.dependency.struct.PrecedentKey">
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchDistinctPrecedentsByDependentAndPrecedentTypeIsNullWithHash" plainsql="SELECT DISTINCT precedentType,precedentID INTO :precedentType,:precedentID FROM DEPENDENCY WHERE dependentType=:dependentType AND dependentIDHash=:dependentIDHash AND dependentID=:dependentID ORDER BY precedentType, precedentID">
      <parameter name="curam.dependency.struct.DependentAndPrecedentTypeWithHashKey">
        <attribute name="dependentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="dependentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="dependentIDHash" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.dependency.struct.PrecedentKey">
        <attribute name="precedentID" ddltype="SVR_STRING&lt;1000&gt;"/>
        <attribute name="precedentType" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchForBlankHashCodes" plainsql="SELECT dependencyID    INTO :dependencyID    FROM Dependency    WHERE        dependentIDHash = 0    OR dependentIDHash IS NULL    OR precedentIDHash = 0    OR precedentIDHash IS NULL;  ">
      <returntype name="curam.dependency.struct.DependencyKey">
        <attribute name="dependencyID" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchForBlankHashCodesInRange" plainsql="SELECT dependencyID    INTO :dependencyID    FROM Dependency    WHERE     dependencyID &gt;= :lowerLimit AND dependencyID &lt;= :upperLimit AND (       dependentIDHash = :zeroField    OR dependentIDHash IS NULL    OR precedentIDHash = :zeroField    OR precedentIDHash IS NULL);  ">
      <parameter name="curam.dependency.struct.DependencyRangeAndStatusStruct">
        <attribute name="lowerLimit" ddltype="SVR_INT64"/>
        <attribute name="upperLimit" ddltype="SVR_INT64"/>
        <attribute name="status" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="zeroField" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependencyKey">
        <attribute name="dependencyID" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="Dependency" operation="searchForBlankHashCodes2" plainsql="SELECT dependencyID    INTO :dependencyID    FROM Dependency    WHERE        dependentIDHash = :zeroField    OR dependentIDHash IS NULL    OR precedentIDHash = :zeroField    OR precedentIDHash IS NULL;  ">
      <parameter name="curam.dependency.struct.DependencyRangeAndStatusStruct">
        <attribute name="lowerLimit" ddltype="SVR_INT64"/>
        <attribute name="upperLimit" ddltype="SVR_INT64"/>
        <attribute name="status" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="zeroField" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependencyKey">
        <attribute name="dependencyID" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="DependencyTrace" operation="getLastAssessDateForCase" plainsql="SELECT MAX(timeStamp1) INTO :timestamp1 FROM DependencyTrace WHERE traceType = 'REASSESS' AND caseID = :caseID; ">
      <parameter name="curam.dependency.struct.DependencyTraceCaseIDTimestamp">
        <attribute name="caseID" ddltype="SVR_INT64"/>
        <attribute name="timestamp1" ddltype="SVR_DATETIME"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependencyTraceTimestampStruct">
        <attribute name="timestamp1" ddltype="SVR_DATETIME"/>
        <attribute name="traceType" ddltype="SVR_STRING&lt;1&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="DependencyTrace" operation="getLastTraceForCaseByTraceTypes" plainsql="SELECT MAX(timeStamp1), traceType   INTO :timestamp1, :traceType   FROM DependencyTrace   WHERE caseID = :caseID     AND (traceType = :traceType1 OR traceType = :traceType2)     GROUP BY traceType     ORDER BY 1 DESC;   ">
      <parameter name="curam.dependency.struct.DependencyTraceTypes">
        <attribute name="traceType1" ddltype="SVR_STRING&lt;1&gt;"/>
        <attribute name="traceType2" ddltype="SVR_STRING&lt;1&gt;"/>
        <attribute name="caseID" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.dependency.struct.DependencyTraceTimestampStruct">
        <attribute name="timestamp1" ddltype="SVR_DATETIME"/>
        <attribute name="traceType" ddltype="SVR_STRING&lt;1&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="DependencyTrace" operation="getReassessmentCountForCase" plainsql="SELECT count(*) INTO :count FROM DependencyTrace WHERE traceType = 'REASSESS' AND caseID = :caseID; ">
      <parameter name="curam.dependency.struct.DependencyTraceCaseIDTimestamp">
        <attribute name="caseID" ddltype="SVR_INT64"/>
        <attribute name="timestamp1" ddltype="SVR_DATETIME"/>
      </parameter>
      <returntype name="curam.creole.database.struct.RecordCount">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="PrecedentChangeItem" operation="countByPrecedentChangeSetID" plainsql="SELECT COUNT(*)   INTO   :count   FROM   PrecedentChangeItem   WHERE  precedentChangeSetID = :precedentChangeSetID ">
      <parameter name="curam.dependency.struct.SearchByPrecedentChangeSetIDKey">
        <attribute name="precedentChangeSetID" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.creole.database.struct.RecordCount">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="PrecedentChangeItem" operation="searchForBlankHashCodesByStatus" plainsql="SELECT precedentChangeItemID    INTO :precedentChangeItemID    FROM PrecedentChangeItem pci    JOIN PrecedentChangeSet pcs      ON pci.precedentChangeSetID = pcs.precedentChangeSetID    WHERE pcs.status = :status    AND (pci.precedentIDHash = :zeroField OR pci.precedentIDHash IS NULL);  ">
      <parameter name="curam.dependency.struct.DependencyRangeAndStatusStruct">
        <attribute name="lowerLimit" ddltype="SVR_INT64"/>
        <attribute name="upperLimit" ddltype="SVR_INT64"/>
        <attribute name="status" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="zeroField" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.dependency.struct.PrecedentChangeItemKey">
        <attribute name="precedentChangeItemID" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="PrecedentChangeItem" operation="searchForBlankHashCodesByStatusInRange" plainsql="SELECT precedentChangeItemID    INTO :precedentChangeItemID    FROM PrecedentChangeItem pci    JOIN PrecedentChangeSet pcs      ON pci.precedentChangeSetID = pcs.precedentChangeSetID    WHERE pcs.status = :status    AND pci.precedentChangeItemID &gt;= :lowerLimit    AND pci.precedentChangeItemID &lt;= :upperLimit    AND (pci.precedentIDHash = :zeroField OR pci.precedentIDHash IS NULL);  ">
      <parameter name="curam.dependency.struct.DependencyRangeAndStatusStruct">
        <attribute name="lowerLimit" ddltype="SVR_INT64"/>
        <attribute name="upperLimit" ddltype="SVR_INT64"/>
        <attribute name="status" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="zeroField" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.dependency.struct.PrecedentChangeItemKey">
        <attribute name="precedentChangeItemID" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
  </sqljentries>
</root>
