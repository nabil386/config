<?xml version="1.0" encoding="UTF-8"?>
<!--

  This is the ant build file for Curam projects.
  This project extends the SDEJ build scripts to enhance a number of targets.

-->
<project name="CuramServerBuild">

  <property environment="sysenv."/>

  <import file="${sysenv.CURAMSDEJ}/bin/build.xml"/>

  <import file="${sysenv.CURAM_DIR}/Tools/Generators/EGTools/build.xml" optional="true"/>
  <property file="${sysenv.CURAM_DIR}/Tools/Generators/EGTools/egtools.properties"/>

  <import file="${sysenv.SERVER_DIR}/components/CREOLEInfrastructure/script/CREOLE_build.xml" optional="true"/>
  <import file="${sysenv.SERVER_DIR}/components/Workflow/script/workflow_build.xml" optional="true"/>
  <import file="${sysenv.CURAM_DIR}/BIApp/CuramBIRTViewer/buildscripts/app_BIbuildEAR.xml" optional="true"/>
  <import file="${sysenv.CURAM_DIR}/SpellChecker/buildscripts/app_buildSpellCheckEAR.xml" optional="true"/>
  <import file="${sysenv.SERVER_DIR}/components/Rest/script/rest_build.xml" optional="true"/>
  <import file="${sysenv.SERVER_DIR}/deprecationreport.xml" optional="true"/>
  <import file="${sysenv.SERVER_DIR}/components/IntelligentEvidenceGathering/script/app_ieg.xml" optional="true"/>
  <import file="${sysenv.SERVER_DIR}/components/IntelligentEvidenceGathering/tools/script/detect_duplicate_domains.xml" optional="true"/>
  <import file="${sysenv.SERVER_DIR}/components/core/script/caseOverviewConfigurationUpload.xml" optional="true"/>
  <import file="${sysenv.SERVER_DIR}/components/core/script/caseOverviewConfigurationDownload.xml" optional="true"/>

  <!--  ****************************  -->
  <!--  ***  Overridden Targets  ***  -->
  <!--  ****************************  -->

  <!--
    Override clean to clean up evidence generated artefacts
  -->
  <target name="clean" depends="serverbuild.clean">
    <antcall target="egtools.server.clean"/>
  </target>


  <target name="model" depends="pre.model, serverbuild.model">
    <antcall target="evidence.post.modelgen"/>
  </target>

  <target name="pre.model">
    <antcall target="evidence.server.generated"/>
  </target>

  <!--
    Run generators to create code in impl packages (in build/svr/gen).
    (This is to support developers who compile in an IDE rather than at the command line.)
  -->
  <target name="generated" depends="serverbuild.generated">

    <antcall target="creole.generate.test.classes"/>
    <antcall target="creole.copyresourceto.cls"/>

  </target>

  <target name="implemented" depends="serverbuild.implemented">
    <antcall target="creole.compile.test.classes"/>
  </target>

  <!--
    This target is overridden to ensure that the additional files
    are copied as part of the release target
    -->
  <target name="release" depends="serverbuild.release">
    <antcall target="release.creole"/>
    <antcall target="biapp.release"/>
    <antcall target="release.workflow"/>

    <!-- Copy swtag files -->
    <copy todir="${dir.release}" >
      <fileset dir="${sysenv.CURAM_DIR}" >
        <include name="properties/version/**" />
      </fileset>
    </copy>
    
	  <!-- Zip up the contents of the release folder if -Dcreate.zip=true -->
	<antcall target="zip.release.directory"/> 

  </target>
  
  <!--  ****************************************************  -->
  <!--  ***  Zips up the contents of the release folder  ***  -->
  <!--  ****************************************************  -->
  <target 
    name="zip.release.directory"
    if="${create.zip}">
	  <zip destfile="${dir.release}/release.zip" >
      <zipfileset dir="${dir.release}" />
    </zip>

  </target>

  <target
    name="websphereWebServices"
    description="Create a Websphere WebServices EAR File">
    <antcall target="workflowbuild.generateWebservices"/>
    <antcall target="serverbuild.websphereWebServices"/>
  </target>

  <target
    name="libertyWebServices"
    description="Create a Liberty WebServices EAR File">
    <antcall target="workflowbuild.generateWebservices"/>
    <antcall target="serverbuild.libertyWebServices"/>
  </target>
  
  <target
    name="weblogicWebServices"
    description="Create a WebLogic WebServices EAR File">
    <antcall target="workflowbuild.generateWebservices"/>
    <antcall target="serverbuild.weblogicWebServices"/>
  </target>

  <!-- Amending to build the Curam BIRT Viewer deployable EAR file -->
  <target name="websphereEAR" depends="serverbuild.websphereEAR">

    <!-- build BIRT EARs-->
    <antcall target="biapp.BIRTViewerEARs"/>

    <!-- call the specific targets for spell checking software. -->
    <antcall target="spellcheck.buildEARs"/>

    <!-- Build the REST toolkit EAR file -->
    <antcall target="RESTToolkit.restEAR"/>

  </target>
  
  <target name="libertyEAR" depends="serverbuild.libertyEAR">

    <!-- build BIRT EARs-->
    <antcall target="biapp.BIRTViewerEARs"/>

    <!-- call the specific targets for spell checking software. -->
    <antcall target="spellcheck.buildEARs"/>

    <!-- Build the REST toolkit EAR file -->
    <antcall target="RESTToolkit.restEAR"/>

  </target>

  <target name="weblogicEAR" depends="serverbuild.weblogicEAR">

    <!-- build BIRT EARs-->
    <antcall target="biapp.BIRTViewerEARs"/>

    <!-- call the specific targets for spell checking software. -->
    <antcall target="spellcheck.buildEARs"/>

    <!-- Build the REST toolkit EAR file -->
    <antcall target="RESTToolkit.restEAR"/>

  </target>

  <!--
    Override databasesql target to consolidate the CREOLE rule sets
  -->
  <target name="databasesql" depends="pre.databasesql, app_database.databasesql"/>
  <target name="pre.databasesql">
    <antcall target="creole.consolidate.rulesets"/>
  </target>

  <!--
  Override insertlobdata target to allow post-insert processing
  -->
  <target name="insertlobdata">
    <antcall target="app_database.insertlobdata"/>
    <antcall target="post.insertlobdata"/>
  </target>

  <target name="post.insertlobdata">
    <antcall target="workflowbuild.importProcessDefinitions"/>
    <antcall target="creole.post.insertlobdata"/>
  </target>


  <target
    description="Javadoc target to produce application javadoc which is Curam entity-aware"
    name="javadoc"
  >
    <!-- Create javadoc documentation for Application -->
    <antcall inheritAll="false" target="dispmsg">
      <param name="prm.msg" value="Creating JavaDoc"/>
    </antcall>

    <property name="javadoc.maxmemory" value="2g"/>
    <delete dir="${dir.bld}/javadoc"/>
    <mkdir dir="${dir.bld}/javadoc"/>
    <javadoc
      author="false"
      breakiterator="true"
      classpathref="j.cp"
      destdir="${dir.bld}/javadoc"
      windowtitle="${SERVER_MODEL_NAME}"
      doctitle="${SERVER_MODEL_NAME}"
      header="&lt;b&gt;${SERVER_MODEL_NAME}&lt;/b&gt;"
      maxmemory="${javadoc.maxmemory}"
      packagenames="**.impl.*,**.intf.*,**.struct.*"
      sourcepathref="compile.path"
      splitindex="yes"
      useexternalfile="true"
      version="false">
    </javadoc>

    <echo>The ${SERVER_MODEL_NAME} JavaDoc has been created in ${dir.bld}/javadoc</echo>
  </target>

</project>
