<?xml version="1.0" encoding="UTF-8"?>

<!-- Ant targets for builds on servers and data retention -->
<project name="BDMBuild" default="bdm.build">

  <property environment="sysenv."/>

  <import file="${sysenv.SERVER_DIR}/build.xml"/>

  <property name="bdm.server.build.xml" value="${sysenv.SERVER_DIR}/build.xml"/>
  <property name="bdm.client.build.xml" value="${sysenv.CLIENT_DIR}/build.xml"/>
  <property name="bdm.client.build.dir" value="${sysenv.CLIENT_DIR}/build"/>
  <property name="bdm.xml.server.dir" value="${sysenv.CURAMSDEJ}/xmlserver"/>
  
  <property name="testclass.not.empty" value="true"/>
  <property name="bdmoas.exists" value="true"/>

  <import file="${sysenv.CURAMSDEJ}/bin/app_test.xml" />
  <import file="${sysenv.SERVER_DIR}/components/BDM/script/BDMDataRetention.xml" optional="true"/>
  <import file="${sysenv.SERVER_DIR}/components/BDM/script/BDMRelease.xml" optional="true"/>

  <!--  ***********************  -->
  <!--  ***  R E L E A S E  ***  -->
  <!--  ***********************  -->
  <target name="bdm.release" depends="serverbuild.release">
    <antcall target="release.creole"/>
    <antcall target="biapp.release"/>
    <antcall target="release.workflow"/>
    <antcall target="bdm.dbscripts.release"/>
	  <antcall target="bdm.deployxml.release"/>

    <!-- Copy swtag files -->
    <copy todir="${dir.release}" >
      <fileset dir="${sysenv.CURAM_DIR}" >
        <include name="properties/version/**" />
		<include name="EnvironmentVariables.xml" />
      </fileset>
    </copy>
    
	  <!-- Zip up the contents of the release folder if -Dcreate.zip=true -->
	<antcall target="zip.release.directory"/> 

  </target>

		

	<!-- junit with jacoco code coverage -->

	<property name="jacoco.output.dir" value="${sysenv.SERVER_DIR}/build/testresults/jacoco" />
	<property name="jacoco.output.data" value="${jacoco.output.dir}/jacoco.exec" />
	<property name="jacoco.report.output.dir" value="${jacoco.output.dir}/report" />	
	<property name="test.class.dir" value="${sysenv.SERVER_DIR}/build/svr/tests/cls/" />	

	<target name="filecheck">
	<script language="javascript">
	<![CDATA[
	    tests = new java.io.File(project.getProperty("test.class.dir"));
    	if (tests.list().length == 0) {
        	java.lang.System.out.println(tests +'is empty: skip.test=true');
        	project.setProperty("testclass.not.empty", false);
    	}

		if (tests.list().length == 1) {
        	fileList = tests.listFiles();
			if(fileList[0].getName() == ".gitkeep"){
				project.setProperty("testclass.not.empty", false);
			}
    	}

		echo = BDMBuild.createTask("echo");
        echo.setMessage("Test classes present = "+project.getProperty("testclass.not.empty"));
        echo.perform();
	]]>

	</script>
	</target>
	

	<target name="bdm.test">

		<delete dir="${dir.test.results}" />
		<mkdir dir="${dir.test.results}" />

		<delete dir="${jacoco.output.dir}" />
		<mkdir dir="${jacoco.output.dir}" />

		<antcall inheritall="true" target="bdm.xmlserver.test" />

	</target>

	<target name="bdm.xmlserver.test" depends="filecheck" if="${testclass.not.empty}" >
		<echo message="Starting XMLServer" />
		<parallel>
			<antcall inheritall="false" target="startXMLServer" />
			<sequential>
				<sleep seconds="10" />
				<antcall inheritall="true" target="_bdm.test" />
			</sequential>
		</parallel>
	</target>

	<target name="_bdm.test" depends="filecheck" if="${testclass.not.empty}">
		<condition property="prop.file.inside.available">
			<and>
				<isset property="curam.db.type" />
				<isset property="curam.environment.bindings.location" />
				<isset property="curam.db.username" />
				<isset property="curam.db.password" />
				<or>
					<isset property="curam.db.name" />
					<isset property="curam.db.oracle.servicename" />
				</or>
			</and>
		</condition>
		<!-- <antcall target="check.props.inside.file" /> -->
		
		<echo message="Running unit tests..."/>

		<!-- Use default supplement value if not set -->
		<property name="supplement" value="tests" />
		<property name="java.extra.jvmargs" value="-Dfake.property=1" />
		<property name="test.jvmargs" value="-Dfake.property=1" />
		<property name="test.include.pattern" value="**/*.java" />
		<property name="test.exclude.pattern" value="" />

		<path id="test.directories">
			<dirset dir="${j.src}">
				<include name="*/${supplement}" unless="component.name" />
				<include name="${component.name}/${supplement}" if="component.name" />
			</dirset>
		</path>
		<pathconvert pathsep="," property="test.directories.prop" refid="test.directories" />

		<!--<echo if:set="component.name">Running tests for component ${component.name}</echo> -->

	
		<!-- this requires jacocoant.jar to be inclued in ANT_HOME/lib -->
		<jacoco:coverage enabled="true" destfile="${jacoco.output.data}" xmlns:jacoco="antlib:org.jacoco.ant" >
			<junit fork="true" forkmode="${junit.fork.mode}" dir="${base.dir}" errorproperty="junit.error" failureproperty="junit.failure" tempdir="${dir.test.results}">
				<jvmarg line="${java.jvmargs}" />
				<jvmarg line="${test.jvmargs}" />
				<jvmarg line="${java.extra.jvmargs}" />
				<jvmarg value="-Xbootclasspath/p:${jars.allxml}" />
				<jvmarg value="-XX:PermSize=${java.minpermsize}" />
				<jvmarg value="-XX:MaxPermSize=${java.maxpermsize}" />
				<sysproperty key="curam.environment.bindings.location" value="${curam.environment.bindings.location}" />
				<sysproperty key="curam.db.db2.single.connection" value="true" />
				<sysproperty key="server.dir" value="${SERVER_DIR}" />

				<classpath>
					<path refid="tests.cp" />
				</classpath>
				<formatter type="brief" usefile="false" />
				<formatter type="xml" />
				<batchtest todir="${dir.test.results}" skipNonTests="true">
					<multirootfileset basedirs="${test.directories.prop}">
						<include name="${test.include.pattern}" unless="include.test.file" />
						<exclude name="${test.exclude.pattern}" unless="exclude.test.file" />
						<includesfile name="${include.test.file}" if="include.test.file" />
						<excludesfile name="${exclude.test.file}" if="exclude.test.file" />
					</multirootfileset>
				</batchtest>
			</junit>
		</jacoco:coverage>

		<!-- <antcall target="test.report" inheritAll="false" /> -->
		<echo> Directory: ${dir.bld.svr.cls} </echo>
		<antcall target="_bdm.test.report" inheritAll="false" />
		<antcall inheritall="false" target="stopXMLServer" />

		<fail message="At least one JUnit test has some errors."
      		if="junit.error" unless="override.test.failures"/>
      	<fail message="At least one JUnit test has some failures."
      		if="junit.failure" unless="override.test.failures"/>
	</target>

	<target name="_bdm.test.report">
		<echo> Directory 2: ${dir.bld.svr.cls} </echo>
		<jacoco:report xmlns:jacoco="antlib:org.jacoco.ant">
			<executiondata>
				<file file="${jacoco.output.data}" />
			</executiondata>

			<structure name="ESDC OAS">
				<group name="Benefit Delivery">
					<classfiles>
						<fileset dir="${dir.bld.svr.cls}">
							<include name="curam/ca/gc/**/*.class" />
							<include name="curam/rules/**/*.class" />
							<include name="curam/workspaceservices/**/*.class" />
							<exclude name="**/fact/*.class" />
							<exclude name="**/base/*.class" />
							<exclude name="**/struct/*.class" />
						</fileset>
					</classfiles>
					<sourcefiles>
						<fileset dir="${sysenv.SERVER_DIR}/components/BDMOAS/source" />
					</sourcefiles>
				</group>
			</structure>

			<html destdir="${jacoco.report.output.dir}" />
			<xml destfile="${jacoco.report.output.dir}/summary.xml" />
			
		</jacoco:report>
	</target>

  </project>

