!function(){"use strict";function e(e,t){t.updateStatus=function(t){resume(function(){assert.areSame(e,t)})}}function t(){function e(){}return e.prototype={fireOpened:function(e){this.fire("opened",{size:e})},fireClosed:function(){this.fire("closed")},fireUpdated:function(e){this.fire("updated",{size:e})},fireSelected:function(e){this.fire("selected",e)}},CKEDITOR.event.implementOn(e.prototype),new e}var n,a,i="Test";bender.editor=!0,bender.test({init:function(){a=t(),n=new CKEDITOR.plugins.autocompletearia(a,this.editor),n.ariaElement=new CKEDITOR.dom.element("span",CKEDITOR.document)},setUp:function(){n.opened=!1,n.ariaElement.setText(i)},"test aria message change on open":function(){e("Autocomplete list, 10 results are available, to move to an item press the arrow keys",n),a.fireOpened(10),wait()},"test aria message change on update":function(){e("Autocomplete list updated, 5 results are available",n),n.opened=!0,a.fireUpdated(5),wait()},"test aria message change when item selected":function(){e("Test Item selected, 3 of 6",n),n.opened=!0,a.fireSelected({text:"Test Item",index:3,size:6}),wait()},"test aria message does not change on close":function(){n.opened=!0,a.fireClosed(),wait(function(){assert.areSame(i,n.ariaElement.getText()),assert.isFalse(n.opened,"AutocompleteAria opened state should be false after close.")},300)},"test aria message does not change on update when not opened":function(){a.fireUpdated(20),wait(function(){assert.areSame(i,n.ariaElement.getText())},300)},"test aria message does not change on item selected when not opened":function(){a.fireSelected({text:"Test Item",index:3,size:6}),wait(function(){assert.areSame(i,n.ariaElement.getText())},300)}})}();