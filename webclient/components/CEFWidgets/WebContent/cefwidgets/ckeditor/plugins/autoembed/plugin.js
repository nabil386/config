/**
 * @license Copyright (c) 2003-2016, CKSource - Frederico Knabben. All rights reserved.
 * For licensing, see LICENSE.md or http://ckeditor.com/license
 */
"use strict";!function(){function e(e,t){function a(){e.widgets.finalizeCreation(c)}var n,i=e.editable().findOne('a[data-cke-autoembed="'+t+'"]'),o=e.lang.autoembed;if(i&&i.data("cke-saved-href")){var d=i.data("cke-saved-href"),r=CKEDITOR.plugins.autoEmbed.getWidgetDefinition(e,d);if(!r)return void CKEDITOR.warn("autoembed-no-widget-def");var u,f="function"==typeof r.defaults?r.defaults():r.defaults,s=CKEDITOR.dom.element.createFromHtml(r.template.output(f)),l=e.widgets.wrapElement(s,r.name),c=new CKEDITOR.dom.documentFragment(l.getDocument());if(c.append(l),u=e.widgets.initOn(s,r),!u)return void a();n=e.showNotification(o.embeddingInProgress,"info"),u.loadContent(d,{noNotifications:!0,callback:function(){var i=e.editable().findOne('a[data-cke-autoembed="'+t+'"]');if(i){var o=e.getSelection(),d=e.createRange(),r=e.editable();e.fire("saveSnapshot"),e.fire("lockSnapshot",{dontUpdate:!0});var u=o.createBookmarks(!1)[0],f=u.startNode,s=u.endNode||f;CKEDITOR.env.ie&&CKEDITOR.env.version<9&&!u.endNode&&f.equals(i.getNext())&&i.append(f),d.setStartBefore(i),d.setEndAfter(i),r.insertElement(l,d),r.contains(f)&&r.contains(s)?o.selectBookmarks([u]):(f.remove(),s.remove()),e.fire("unlockSnapshot")}n.hide(),a()},errorCallback:function(){n.hide(),e.widgets.destroy(u,!0),e.showNotification(o.embeddingFailed,"info")}})}}var t=/^<a[^>]+href="([^"]+)"[^>]*>([^<]+)<\/a>$/i;CKEDITOR.plugins.add("autoembed",{requires:"autolink,undo",lang:"cs,de,de-ch,en,eo,eu,fr,it,km,ko,ku,mk,nb,pl,pt,pt-br,ru,tr,ug,uk,zh,zh-cn",init:function(a){var n,i=1;a.on("paste",function(e){if(e.data.dataTransfer.getTransferType(a)==CKEDITOR.DATA_TRANSFER_INTERNAL)return void(n=0);var o=e.data.dataValue.match(t);n=null!=o&&decodeURI(o[1])==decodeURI(o[2]),n&&(e.data.dataValue='<a data-cke-autoembed="'+ ++i+'"'+e.data.dataValue.substr(2))},null,null,20),a.on("afterPaste",function(){n&&e(a,i)})}}),CKEDITOR.plugins.autoEmbed={getWidgetDefinition:function(e,t){var a,n=e.config.autoEmbed_widget||"embed,embedSemantic",i=e.widgets.registered;if("string"==typeof n){for(n=n.split(",");a=n.shift();)if(i[a])return i[a]}else if("function"==typeof n)return i[n(t)];return null}}}();