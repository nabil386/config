<?xml version="1.0" encoding="UTF-8"?>
<jsp:root xmlns:jsp="http://java.sun.com/JSP/Page" xmlns="http://www.w3.org/1999/xhtml" xmlns:curam="http://www.curamsoftware.com/curam" version="2.0">
  <jsp:directive.page isErrorPage="false" pageEncoding="UTF-8" contentType="text/html;charset=UTF-8" isELIgnored="false" language="java" buffer="32kb" errorPage="/cw/ErrorPage.do"/>
  <jsp:output omit-xml-declaration="yes"/>
  <jsp:text><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">]]></jsp:text>
  <jsp:scriptlet>
    pageContext.setAttribute("pageLocale", 
    curam.omega3.user.UserPreferencesFactory.getUserPreferences(
    pageContext.getSession()).getLocale().toString());
  </jsp:scriptlet>
  <curam:userPreferences localeCode="${pageScope.pageLocale}"/>
  <jsp:scriptlet>
    <![CDATA[

      javax.servlet.http.HttpServletRequest hsRequest;
      javax.servlet.http.HttpSession httpSession;
      hsRequest = (javax.servlet.http.HttpServletRequest) request;
      httpSession = hsRequest.getSession();
      
      curam.omega3.user.UserPreferences prefs = curam.omega3.user.UserPreferencesFactory.getUserPreferences(httpSession);	  
      boolean contrastSet = httpSession.getAttribute("high.contrast.set") != null; 
      boolean hcEnabled = new Boolean((String) prefs.getUserPreference(curam.omega3.user.InfrastructureUserPreferences.HIGH_CONTRAST_MODE));;
      
      String url;
      String playerExecutionID = request.getParameter("id");
      
      // this value is returned by the AuthenticationController to indicate
      // which page to forward to following a successful login
      String nextPageAfterLogin = request.getParameter("nextPageAfterLogin");
      String pageName = request.getParameter("page");
      String nextPageAfterLoginType = request.getParameter("nextPageAfterLoginType");
      String intakeIEGExecutionID = request.getParameter("intakeIEGExecutionID");
      String acctNextPageAfterLogin = request.getParameter("pageName");
      String acctNextPageAfterLoginType = request.getParameter("pageType");

      String screeningID = request.getParameter("screeningID");    
      
      String programIDs = request.getParameter("programIDs");
      
      String applicationID = request.getParameter("applicationID");
      
      String applicationTypeID = request.getParameter("applicationTypeID");
      
      String motivationID = (String) httpSession.getAttribute("curam.motivationid");
      
      String navigatorID = (String) httpSession.getAttribute("curam.navigatorid");
                     
      String contrastModeSet = (String) httpSession.getAttribute("high.contrast.set");
      
      // invalidate the current session and create a fresh one for new account type.
      
      // we need to keep the session parameters, store them before invalidating
      java.util.Enumeration keys = httpSession.getAttributeNames();
      
      // map to store the attributes 
      java.util.HashMap oldSessionAttributes = new java.util.HashMap();
      
      // iterate through the attributes and add to the map
      while (keys.hasMoreElements()) {
         String key = (String) keys.nextElement();
         oldSessionAttributes.put(key, httpSession.getAttribute(key));
      }
      
      // Get user login details
      curam.interfaces.UserLoginPkg.UserLogin_getLoginDetails_TH th = 
        new curam.interfaces.UserLoginPkg.UserLogin_getLoginDetails_TH(); 
      th.setFieldValue(th.key$playerExecutionID_idx, playerExecutionID);       
      th.callServer();   
      
      java.security.Principal userPrincipal = hsRequest.getUserPrincipal();   
      
      // Now any server calls are complete and the userPrincipal has been established.
      // Go ahead and invalidate the session.
      
      // invalidate the session and create a new one
      httpSession.invalidate(); 
      httpSession = hsRequest.getSession(true);
      
      // add the attributes from the old session to the new session
      
      // i'm using an array so this code works pre java 5
      Object keysArray[] = oldSessionAttributes.keySet().toArray();
      
      // iterate through the array, and add the attributes to the new session
      for (int i = 0; i < oldSessionAttributes.keySet().size(); i++) {
         httpSession.setAttribute((String) keysArray[i], oldSessionAttributes.get(keysArray[i]));
      }
                    
      // If a forward page has been set, set a session attribute so it can be used on the userhome.jsp
      if(nextPageAfterLogin != null) {
        httpSession.setAttribute("curam.page.name", curam.omega3.request.RequestUtils.escapeURL(nextPageAfterLogin));
      } else if(pageName != null) {
        httpSession.setAttribute("curam.page.name", curam.omega3.request.RequestUtils.escapeURL(pageName));
      } else {
        httpSession.setAttribute("curam.page.name", null);
      }
      
      if(nextPageAfterLoginType != null) {
        httpSession.setAttribute("curam.page.type", curam.omega3.request.RequestUtils.escapeURL(nextPageAfterLoginType));
      } else {
        httpSession.setAttribute("curam.page.type", null);
      }      
      
      if(intakeIEGExecutionID != null) {
        httpSession.setAttribute("curam.page.intakeIEGExecutionID", curam.omega3.request.RequestUtils.escapeURL(intakeIEGExecutionID));
      } else {
        httpSession.setAttribute("curam.page.intakeIEGExecutionID", null);
      }
  
      if(acctNextPageAfterLogin != null) {
        httpSession.setAttribute("curam.page.acct", curam.omega3.request.RequestUtils.escapeURL(acctNextPageAfterLogin));
      } else {
        httpSession.setAttribute("curam.page.acct", null);
      }
  
      if(acctNextPageAfterLoginType != null) {
        httpSession.setAttribute("curam.page.acctPageType", curam.omega3.request.RequestUtils.escapeURL(acctNextPageAfterLoginType));
      } else {
        httpSession.setAttribute("curam.page.acctPageType", null);
      }
      
      if(screeningID != null) {
        httpSession.setAttribute("curam.page.screeningID", curam.omega3.request.RequestUtils.escapeURL(screeningID));
      } else {
        httpSession.setAttribute("curam.page.screeningID", null);
      }

      if(programIDs != null) {
        httpSession.setAttribute("curam.page.programIDs", programIDs);
      } else {
        httpSession.setAttribute("curam.page.programIDs", null);
      }
  
      if(applicationID != null) {
        httpSession.setAttribute("curam.page.applicationID", curam.omega3.request.RequestUtils.escapeURL(applicationID));
      } else {
        httpSession.setAttribute("curam.page.applicationID", null);
      }
      
      if(applicationTypeID != null) {
        httpSession.setAttribute("curam.page.applicationTypeID", curam.omega3.request.RequestUtils.escapeURL(applicationTypeID));
      } else {
        httpSession.setAttribute("curam.page.applicationTypeID", null);
      }      
      
      if(motivationID != null) {
        httpSession.setAttribute("curam.motivationid", curam.omega3.request.RequestUtils.escapeURL(motivationID));
      } else {
        httpSession.setAttribute("curam.motivationid", null);
      }

      if(navigatorID != null) {
        httpSession.setAttribute("curam.navigatorid", curam.omega3.request.RequestUtils.escapeURL(navigatorID));
      } else {
        httpSession.setAttribute("curam.navigatorid", null);
      }      
      
      if(contrastModeSet != null) {
        httpSession.setAttribute("high.contrast.set", "true");        
      }
      
      httpSession.setAttribute("curam.page.playerExecutionID", playerExecutionID);      
      
      prefs = curam.omega3.user.UserPreferencesFactory.getUserPreferences(httpSession);
      String username = th.getFieldValue(th.result$username_idx);              
      if(contrastSet && hcEnabled) {   
      	 httpSession.setAttribute("high.contrast.set", null);
         curam.interfaces.CitizenWorkspacePkg.CitizenWorkspace_processContrastMode_TH contrastTH = 
         new curam.interfaces.CitizenWorkspacePkg.CitizenWorkspace_processContrastMode_TH();
         contrastTH.setFieldValue(contrastTH.key$contrastMode_idx, hcEnabled ? "high" : "standard");
         contrastTH.setFieldValue(contrastTH.key$userName_idx, username);
         contrastTH.callServer();       
      } else {
         citizenworkspace.util.HighContrastHelper.initialiseSession(httpSession, username);
      } 
      
      if (userPrincipal != null) {   

        String userName = th.getFieldValue(th.result$username_idx);     
        String password = th.getFieldValue(th.result$password_idx);
        String userType = th.getFieldValue(th.result$usertype_idx);
        httpSession.setAttribute("curam.userName", userName);    
        httpSession.setAttribute("curam.password", password);
        httpSession.setAttribute("curam.userType", userType);  
        //TODO is this tempUser used anywhere? i.e. in logon.jsp? 
        httpSession.setAttribute("curam.tempUser", "false");

        // Forward to the security check, which will log the new user in        
        url = "../logon.jsp";

      } else {        

        String userName = th.getFieldValue(th.result$username_idx);     
        String password = th.getFieldValue(th.result$password_idx);
        String userType = th.getFieldValue(th.result$usertype_idx);
        httpSession.setAttribute("curam.userName", userName);    
        httpSession.setAttribute("curam.password", password);
        httpSession.setAttribute("curam.userType", userType);
        //TODO is this tempUser used anywhere? i.e. in logon.jsp? 
        httpSession.setAttribute("curam.tempUser", "false");

        // Forward to the userhome jsp for development mode
        url = "../userhome.jsp";
      }

      response.sendRedirect(response.encodeRedirectURL(url)); 

      ]]>
  </jsp:scriptlet> 
  
</jsp:root>