<?xml version="1.0" encoding="UTF-8"?>
<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:curam="http://www.curamsoftware.com/curam" xmlns:cing="http://www.curamsoftware.com/curam/jde/client/curam-ng" xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
  <jsp:directive.page isErrorPage="false" pageEncoding="UTF-8" contentType="text/html;charset=UTF-8" isELIgnored="false" language="java" buffer="32kb" errorPage="/cw/ErrorPage.do" />
  <jsp:directive.page import="curam.omega3.user.UserPreferences"/>
  <jsp:directive.page import="curam.omega3.user.UserPreferencesFactory"/>
  <jsp:output omit-xml-declaration="yes" />
  <jsp:text><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">]]></jsp:text>
  <jsp:scriptlet>
    pageContext.setAttribute("pageLocale", 
    curam.omega3.user.UserPreferencesFactory.getUserPreferences(
    pageContext.getSession()).getLocale().toString());
  </jsp:scriptlet>
  <curam:userPreferences localeCode="${pageScope.pageLocale}"/>
  <jsp:scriptlet>
    <![CDATA[

        curam.omega3.request.RequestHandler 
          rh = curam.omega3.request.RequestHandlerFactory.getRequestHandler(request);
        String context = request.getContextPath() + "/cw/";
        String pageName = request.getParameter("page");
        String url = context + curam.omega3.request.RequestUtils.escapeURL(pageName) + ".jspx?";
        String userName = (String) session.getAttribute("curam.userName");
        boolean isLoggedin = false;
        UserPreferences prefs = UserPreferencesFactory.getUserPreferences(session);
        String reloadBanner = request.getParameter("reloadBanner");
        
        
        
curam.interfaces.CWSecurityHelperPkg.CWSecurityHelper_userHasCWAccount_TH th=new curam.interfaces.CWSecurityHelperPkg.CWSecurityHelper_userHasCWAccount_TH();
boolean anonymoususerInd=false;
th.callServer();
anonymoususerInd=Boolean.valueOf(th.getFieldValue(th.result$userHasCWAccountInd_idx));
String startTriageScript="StartTriageScript";

    if(!anonymoususerInd && (!startTriageScript.equals(pageName))){
    	
    	
    	// BEGIN, 107499, BD	
    	//Set the configuration properties for the session timeout warning.
    	final curam.omega3.taglib.ScreenContext sContext = new curam.omega3.taglib.ScreenContext();
    	sContext.addContextBits(curam.omega3.taglib.ScreenContext.EXTAPP);
        if(prefs!= null && prefs.getApplicationID() != null){
			//Starting the session timeout warning
			String sessionTimeoutWarningInicialization = curam.util.client.jsp.JspUtil.getSessionTimeoutWarningInitializationJavaScript(prefs.getApplicationID(), sContext);

			if(sessionTimeoutWarningInicialization != null){
				sessionTimeoutWarningInicialization = sessionTimeoutWarningInicialization.replaceAll("'", "\"");
			    out.print("<script>");
			    out.print("top.CuramExternalApp.createSessionTimeoutWarningContainer('" + sessionTimeoutWarningInicialization + "');");
				out.print("</script>");
				
			}
		}
		// END, 107499, BD	
    }
        
       
        
   out.print("<html><head>");
        
        if(null != reloadBanner && reloadBanner.equalsIgnoreCase("true")) {
            out.print("<script>top.CuramExternalApp._reloadBanner();</script>");
        }
        

        // Pass any parameters passed to this resolve script onto the page 
        java.util.Collection items = rh.getRequestItems().values();
        for (java.util.Iterator iter = items.iterator(); iter.hasNext();) {
          curam.omega3.request.RequestItem item = (curam.omega3.request.RequestItem) iter.next();
          if (!citizenworkspace.util.StringHelper.contains(item.getName(), "_") 
              && !citizenworkspace.util.StringHelper.contains(item.getName(), "/")
              && !item.getName().equals("page")) {              
            char lastChar = url.charAt(url.length() - 1);
            if (lastChar != '?') {
              url += "&" +  curam.omega3.request.RequestUtils.escapeURL(item.getName()) + "=" + curam.omega3.request.RequestUtils.escapeURL(item.getValue());
            } else {
              url += curam.omega3.request.RequestUtils.escapeURL(item.getName()) + "=" + curam.omega3.request.RequestUtils.escapeURL(item.getValue());                
            }
            if ("id".equalsIgnoreCase(item.getName())
                && (null != item.getValue() && !item.getValue().isEmpty())) {
              isLoggedin = true;
            }
          }
        }

        url += "&" + rh.getSystemParameters();

        if (!isLoggedin && (null == userName || userName.isEmpty())) {
          // Keep the session parameters and store them before invalidating
          java.util.Enumeration keys = session.getAttributeNames();

          // map to store the attributes 
          java.util.Map<String, Object> oldSessionAttributes = new java.util.HashMap<String, Object>();
          String key = null;
          // iterate through the attributes and add to the map
          while (keys.hasMoreElements()) {
            key = (String) keys.nextElement();
            oldSessionAttributes.put(key, session.getAttribute(key));
          }

          // invalidate the session and create a new one
          session.invalidate(); 
          session = request.getSession(true);
          
          /* 
          * Set a value in the http session to signify that a session expiry has occured where we DONT want to 
          * redirect to the landing page (default behaviour upon session expiry).
          * This attribute will be checked in logon.jsp.
          */
          session.setAttribute("expectedSessionTimeoutDontRedirect", "true");
          
          // add the attributes from the old session to the new session
          // iterate through the array, and add the attributes to the new session
          for (String sessionKey : oldSessionAttributes.keySet()) {
            session.setAttribute(sessionKey, oldSessionAttributes.get(sessionKey));
          }
        }
// BEGIN 118764, PC
     String intakeScript=curam.omega3.util.CDEJResources.getProperty("citizenworkspace.cw.Resolve", "page.intakeScript");
     String lifeEventScript=curam.omega3.util.CDEJResources.getProperty("citizenworkspace.cw.Resolve", "page.lifeEventScript");
     String startScreeningScript=curam.omega3.util.CDEJResources.getProperty("citizenworkspace.cw.Resolve", "page.startScreeningScript");
     String startFilterScreeningScript=curam.omega3.util.CDEJResources.getProperty("citizenworkspace.cw.Resolve", "page.startFilterScreeningScript");
     String startMotivation=curam.omega3.util.CDEJResources.getProperty("citizenworkspace.cw.Resolve", "page.startMotivation");
     String resumeIEGScript=curam.omega3.util.CDEJResources.getProperty("citizenworkspace.cw.Resolve", "page.resumeIEGScript");
     
   if((null !=pageName) && (pageName.equals(intakeScript)||pageName.equals(lifeEventScript)
   ||pageName.equals(startScreeningScript)||pageName.equals(startFilterScreeningScript)
   ||pageName.equals(resumeIEGScript)||pageName.equals(startMotivation)
   )){
    out.print("<script>top.CuramExternalApp.hideAppNavigation();</script>"); 
     }
     out.print("<script>window.location.href = '" + url + "';</script>");  
     out.print("<head></html>");
// END 118764
        ]]>
  </jsp:scriptlet>
</jsp:root>
