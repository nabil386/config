<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed Materials - Property of IBM
  
  Copyright IBM Corporation 2003, 2012. All Rights Reserved.
  
  US Government Users Restricted Rights - Use, duplication or disclosure 
  restricted by GSA ADP Schedule Contract with IBM Corp.
-->
<!-- Copyright 2003-2005, 2008, 2010-2011 Curam Software Ltd.               -->
<!-- All rights reserved.                                                   -->
<!-- This software is the confidential and proprietary information of Curam -->
<!-- Software, Ltd. ("Confidential Information"). You shall not disclose    -->
<!-- such Confidential Information and shall use it only in accordance with -->
<!-- the terms of the license agreement you entered into with Curam         -->
<!-- Software.                                                              -->
<!-- Description                                                            -->
<!-- ===========                                                            -->
<!-- This page allows the user to view an activity.                         -->
<PAGE
  PAGE_ID="Activity_resolveViewStandardUserActivity"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="file://Curam/UIMSchema.xsd"
>
  <JSP_SCRIPTLET>
    
    
       curam.omega3.request.RequestHandler 
         rh = curam.omega3.request.RequestHandlerFactory.getRequestHandler(request);
 
       String context = request.getContextPath() + "/";
       context += curam.omega3.user.UserPreferencesFactory.getUserPreferences(pageContext.getSession()).getLocale() + "/"; 
       String activityID = request.getParameter("ID");
       String eventType = request.getParameter("TYPE");
       String description = request.getParameter("description");
       String caseID = request.getParameter("caseID");
       String url = "";
    
      //if event has not passed the case description, set the description here
      if ((caseID == null) &amp;&amp; (description == null))
      {
        
        if (eventType == null) {
        
          curam.interfaces.ActivityPkg.Activity_readContextDescription_TH 
          th = new curam.interfaces.ActivityPkg.Activity_readContextDescription_TH();
         
          th.setFieldValue(th.key$activityContextDescriptionKey$activityID_idx,activityID);      
          th.callServer(); 
          description = th.getFieldValue(th.result$activityContextDescriptionDetails$description_idx);
        
        }     
     }
     else
     {
     //Read the case description and pass it to activity pages.
     curam.interfaces.CasePkg.Case_readCaseContextDescription_TH 
     th = new curam.interfaces.CasePkg.Case_readCaseContextDescription_TH();
                          
     th.setFieldValue(th.caseContextDescriptionKey$caseID_idx, caseID);      
     th.callServer(); 
     description = th.getFieldValue(th.result$description_idx);
      }
                
       if (activityID == null) {
 
         // BEGIN, CR00110216, SK
       core.ScriptletMissingParamException e = new
                core.ScriptletMissingParamException(-20002, "ID");
       System.out.println(e);
       throw e;
       
 
       }
 
       if (eventType == null) {
 
         String recurring = request.getParameter("RE");
         String level = request.getParameter("LV");
         String userName = request.getParameter("userName");
         String readOnly = request.getParameter("RO");
         String attendee = request.getParameter("AT");
         String acceptable = request.getParameter("AC");
        
 
         if (recurring == null) {
 
           // BEGIN, CR00124523, SK
            core.ScriptletMissingParamException e = new
               core.ScriptletMissingParamException(-20001, "RE");
           System.out.println(e);
           throw e;
           // END, CR00124523

           
         }
 
         if (level == null) {
 
           //throw new Exception("Level 'LV' parameter does not exist");
           level="AL1";
         
         }
 
         // Check that this is a user level activity.
         if (level.equals("AL1")) {

           // Check if the user is looking at another user's activities
           if (userName != null) {

             if (recurring.equals("true")) {

               url = context + 
                 "Activity_viewSelectedUserRecurringActivityPage.do?activityID=" 
                 + curam.omega3.request.RequestUtils.escapeURL(activityID) + "&amp;userName="+curam.omega3.request.RequestUtils.escapeURL(userName);
             } else {

               url = context + 
                 "Activity_viewSelectedUserStandardActivityPage.do?activityID=" 
                 + curam.omega3.request.RequestUtils.escapeURL(activityID) + "&amp;userName="+curam.omega3.request.RequestUtils.escapeURL(userName);
             }
          } else {

            // Check if this is a recurring activity.
            if (recurring.equals("true")) {

              // Check if the user is the owner / attendee of this activity.
              if (attendee.equals("true")) {

                // Check if this is an activity that can still be accepted.
                if (acceptable.equals("true")) {

                  url = context + 
                    "Activity_viewRecurringUserInviteeActivityPage.do?activityID=" 
                    + curam.omega3.request.RequestUtils.escapeURL(activityID) + "&amp;description=" +curam.omega3.request.RequestUtils.escapeURL(description);
                } else {

                  url = context + 
                    "Activity_viewRecurringUserInviteeWithRejectActivityPage.do?activityID=" 
                    + curam.omega3.request.RequestUtils.escapeURL(activityID) + "&amp;description=" +curam.omega3.request.RequestUtils.escapeURL(description);
                }

              } else {
              
             
                // The user is the owner of the activity and so can edit the activity.
                url = context + 
                "Activity_viewRecurringUserActivityViewOnlyPage.do?activityID=" 
                  + curam.omega3.request.RequestUtils.escapeURL(activityID) + "&amp;description=" +curam.omega3.request.RequestUtils.escapeURL(description);
              }

            // This is a standard activity.
            } else {
            
              // Read the activity type to determine if this is a meeting
              String activityType = "";

              // Read the activity description and type      
              curam.interfaces.ActivityPkg.Activity_readStandardOrganizationActivity_TH
              th = new curam.interfaces.ActivityPkg.Activity_readStandardOrganizationActivity_TH();

              th.setFieldValue(th.key$maintainActivityKey$activityID_idx, activityID);
              th.callServer();

              activityType = th.getFieldValue(th.result$organizationStandardActivityDetails$activityTypeCode_idx);            
              
              // If this is a meeting type activity then forward user to view meeting details page
              if (activityType.equals("AT2")) {
                 
          url = context +
            "CalendarMeeting_viewMeetingFromUserCalendarPage.do?activityID="
            + curam.omega3.request.RequestUtils.escapeURL(activityID); 
              } else {


              // Check if the user is the owner / attendee of this activity.
              if (attendee.equals("true")) {

                // Check if this is an activity that can still be accepted.
                if (acceptable.equals("true")) {

                  url = context + 
                    "Activity_viewStandardUserActivityViewOnlyPage.do?activityID=" 
                    + curam.omega3.request.RequestUtils.escapeURL(activityID) + "&amp;description=" +curam.omega3.request.RequestUtils.escapeURL(description);
                } else {

                  url = context + 
                    "Activity_viewStandardUserActivityViewOnlyPage.do?activityID=" 
                    + curam.omega3.request.RequestUtils.escapeURL(activityID) + "&amp;description=" +curam.omega3.request.RequestUtils.escapeURL(description);
                }

              } else {

                // The user is the owner of the activity and so can edit the activity.
                url = context + 
                "Activity_viewStandardUserActivityViewOnlyPage.do?activityID=" 
                  + curam.omega3.request.RequestUtils.escapeURL(activityID) + "&amp;description=" +curam.omega3.request.RequestUtils.escapeURL(description);
              }
              
              }
            }
          }
        } else {

          // Process non user-level activities
          if (level.equals("AL2")) {
        
            url = context + "Activity_resolveViewWorkgroupActivityPage.do?";
        
          } else if (level.equals("AL3")) {
        
            url = context + "Activity_resolveViewDepartmentActivityPage.do?";
        
          } else if (level.equals("AL4")) {
        
            url = context + "Activity_resolveViewOrganizationActivityPage.do?";

          } else {

            // BEGIN, CR00124523, SK
             core.ScriptletMissingParamException e = new
                core.ScriptletMissingParamException(-20005, "level");
            System.out.println(e);
            throw e;
            // END, CR00124523


          }

          // Also send parameters
          url += "ID=" + curam.omega3.request.RequestUtils.escapeURL(activityID) + "&amp;RE=" + curam.omega3.request.RequestUtils.escapeURL(recurring) + "&amp;LV=" + curam.omega3.request.RequestUtils.escapeURL(level) + "&amp;RO=true";
        }
         
         
        } else if (eventType.equals("AT4")) {
           // BEGIN, CR00281533, IBM
           curam.interfaces.OrganizationPkg.Organization_readLocationIDByLocationHolidayKey_TH 
           th = new curam.interfaces.OrganizationPkg.Organization_readLocationIDByLocationHolidayKey_TH();
           
           th.setFieldValue(th.key$locationHolidayID_idx, activityID);
           th.callServer();
           String locationID = th.getFieldValue(th.result$locationID_idx);
           // BEGIN, CR00342927, SS
           String userName = request.getParameter("userName");
           
           if (null == userName){
           curam.interfaces.OrganizationPkg.Organization_getCurrentUser_TH 
           thh = new curam.interfaces.OrganizationPkg.Organization_getCurrentUser_TH();
           thh.callServer();
           userName = thh.getFieldValue(thh.result$userName_idx);
           }      
           
           url = context +
           "Organization_viewLocationHolidayForUsersFromCalendarPage.do?locationHolidayID="
               + curam.omega3.request.RequestUtils.escapeURL(activityID)
               + "&amp;locationID=" + curam.omega3.request.RequestUtils.escapeURL(locationID)
               + "&amp;userName=" + curam.omega3.request.RequestUtils.escapeURL(userName);
           // END, CR00342927
           // END, CR00281533
        } 
        
      // END, CR00110216
      url += "&amp;" + rh.getSystemParameters();
      response.sendRedirect(response.encodeRedirectURL(url));

    
  </JSP_SCRIPTLET>
</PAGE>
