<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed Materials - Property of IBM

  Copyright IBM Corporation 2012,2023. All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or disclosure
  restricted by GSA ADP Schedule Contract with IBM Corp.
-->
<!--

  This is the ant compile file for Curam projects.
  It includes the main compile targets used.

-->
<project name="app_compile" default="compile.generated">

  <target name="check.dir.bld.svr.cls.is.empty">
    <condition property="dir.bld.svr.cls.is.empty">
      <or>
        <not>
          <available file="${dir.bld.svr.cls}" type="dir"/>
        </not>
        <length length="0">
          <fileset dir="${dir.bld.svr.cls}" includes="*"/>
        </length>
      </or>
    </condition>
  </target>

  <path id="generation.path">
    <dirset dir="${dir.bld.svr.components}">
      <include name="*"/>
    </dirset>
    <pathelement location="${j.gen}"/>
  </path>

  <path id="compile.path">
    <dirset dir="${j.src}">
      <include name="*/source"/>
    </dirset>
    <path refid="generation.path"/>
  </path>

  <!--  Empty path to allow for additions to the jarring
        of struct, implementation and application jars.  -->
  <path id="additional.jar.path"/>

  <!--  *********************************************  -->
  <!--  ***  C H E C K . D E P E N D E N C I E S  ***  -->
  <!--  *********************************************  -->
  <target name="check.dependencies"
          depends="check.dir.bld.svr.cls.is.empty"
          unless="dir.bld.svr.cls.is.empty">
    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Starting check.dependencies"/>
    </antcall>

    <!-- Test class file dependencies and delete any out-of-date items -->
    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Deleting invalid class files"/>
    </antcall>

    <!-- Explictly delete class files which no longer have a corresponding java source -->
    <taskdef name="cbuild"
      classname="curam.util.tools.AntDeleteNonMappedFiles" classpath="${jar.tools}:${jar.bcel}:${jar.commonslang}:${jar.commonstext}"/>
    <cbuild outdir="${dir.bld.svr.cls}"
       srcFileExtension=".java"
       bldFileExtension=".class">
      <src refid="compile.path"/>
    </cbuild>

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Check source dependencies"/>
    </antcall>

    <!-- Clean any source dependancies -->
    <property name="depend.src.path" refid="compile.path"/>
    <depend
      destdir="${dir.bld.svr.cls}"
      cache="${dir.bld.svr}"
      closure="${depend.closure}"
      srcdir="${depend.src.path}"
      classpath="${dir.bld.svr.msg.cls}:${dir.bld.svr.ctx.cls}:${dir.bld.svr.evx.cls}"/>

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Ending check.dependencies"/>
    </antcall>
  </target>

  <!--  *******************************************  -->
  <!--  ***  C O M P I L E . G E N E R A T E D  ***  -->
  <!--  *******************************************  -->
  <target name="compile.generated"
    description="Compiles and jars all generated sources">

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Starting compile.generated"/>
    </antcall>

    <!-- struct -->
    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Compile struct"/>
    </antcall>

    <javac
      includes="**/struct/*.java"
      destdir="${j.dst}"
      classpathref="j.cp"
      debug="${cmp.debug}"
      fork="${cmp.fork}"
      memoryMaximumSize="${cmp.maxmemory}"
      memoryInitialSize="${cmp.maxmemory}"
      nowarn="${cmp.nowarn}"
      optimize="${cmp.optimize}"
      deprecation="${cmp.deprecation}"
      verbose="${cmp.verbose}"
      updatedProperty="struct.compile"
      includeAntRuntime="${cmp.includeAntRuntime}"
      includeJavaRuntime="${cmp.includeJavaRuntime}"
      failonerror="${cmp.failonerror}"
      listfiles="${cmp.listfiles}">
      <src refid="compile.path"/>
      <compilerarg value="-Xbootclasspath/p:${jars.allxml}" />
      <compilerarg value="-Xmaxwarns"/>
      <compilerarg value="${cmp.maxwarnings}"/>
      <compilerarg line="${cmp.gc}"/>
      <compilerarg line="${cmp.compilerarg}"/>
    </javac>

    <antcall target="bld.struct.jar"/>

    <!-- bizinterface -->
    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Compile intf classes"/>
    </antcall>

    <taskdef name="antstring" classname="curam.util.tools.AntStrings"
      classpath="${jar.coreinf}:${jar.tools}"/>
    <antstring to="prp.layername.lower" from="${LAYER_NAME}" type="lowercase" />
    <antstring to="module.package"
          oldchar="/"
          newchar="."
          from="${project.package}.${prp.layername.lower}.LayerModule"
          type="replace" />

    <echo file="${dir.bld.svr.cls}/META-INF/services/com.google.inject.Module"
      append="false">${module.package}
    </echo>

    <javac
      includes="**/intf/*.java ${project.package}/${prp.layername.lower}/LayerModule.java"
      destdir="${j.dst}"
      classpathref="j.cp"
      debug="${cmp.debug}"
      fork="${cmp.fork}"
      memoryMaximumSize="${cmp.maxmemory}"
      memoryInitialSize="${cmp.maxmemory}"
      nowarn="${cmp.nowarn}"
      optimize="${cmp.optimize}"
      deprecation="${cmp.deprecation}"
      verbose="${cmp.verbose}"
      updatedProperty="intf.compile"
      includeAntRuntime="${cmp.includeAntRuntime}"
      includeJavaRuntime="${cmp.includeJavaRuntime}"
      failonerror="${cmp.failonerror}"
      listfiles="${cmp.listfiles}">
      <src refid="compile.path"/>
      <compilerarg value="-Xbootclasspath/p:${jars.allxml}" />
      <compilerarg value="-Xmaxwarns"/>
      <compilerarg value="${cmp.maxwarnings}"/>
      <compilerarg line="${cmp.gc}"/>
      <compilerarg line="${cmp.compilerarg}"/>
    </javac>

    <copy todir="${dir.bld.svr.cls}">
      <fileset dir="${dir.bld.svr.gen}" includes="${project.package}/*.xml"/>
    </copy>

    <antcall target="bld.application.jar"/>

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Ending compile.generated"/>
    </antcall>
  </target>

  <!-- the struct.jar file should be regenerated if any struct has been updated/changed, or the
       struct.jar file does not exist. -->
  <target name="check.compile.struct">
    <condition property="recompile.struct">
      <or>
        <istrue value="${struct.compile}"/>
        <not>
          <resourceexists>
            <file file="${jar.struct}"/>
          </resourceexists>
        </not>
      </or>
    </condition>

  </target>

  <target name="bld.struct.jar" if="recompile.struct" depends="check.compile.struct">
    <antcall target="dispmsg" inheritAll="false">
      <param name="prm.msg" value="Build struct.jar"/>
    </antcall>

    <delete file="${jar.struct}"/>

    <path id="struct.path">
      <fileset dir="${dir.bld.svr.cls}">
        <include name="**/struct/*.class"/>
      	<include name="**/${fil.jar.checksum}"/>
      </fileset>
      <path refid="additional.jar.path"/>
    </path>
    
    <antcall target="create.class.checksum" inheritall="false">
      <param name="checksumbasedir" value="${dir.bld.svr.cls}"/>
      <param name="checksumpath" value="struct.path"/>
      <reference refid="struct.path" />
    </antcall>

    <jar
      destfile="${jar.struct}"
      filesonly="true" level="${jar.compression}"
      update="false">
      <path refid="struct.path"/>
    </jar>
  	
  	<delete>
  		<fileset dir="${dir.bld.svr.cls}">
  			<include name="**/${fil.jar.checksum}"/>
  		</fileset>
  	</delete>

  </target>

  <!-- the application.jar file must be regenerated if any interface class file has changed or
       if the application.jar file does not exist. -->
  <target name="check.intf.compile">
    <condition property="recompile.intf">
      <or>
        <istrue value="${intf.compile}"/>
        <not>
          <resourceexists>
            <file file="${jar.application}"/>
          </resourceexists>
        </not>
      </or>
    </condition>

  </target>

 <target name="bld.application.jar" if="recompile.intf" depends="check.intf.compile">
    <antcall target="dispmsg" inheritAll="false">
      <param name="prm.msg" value="Build application.jar"/>
    </antcall>

    <delete file="${jar.application}"/>

    <path id="application.path">
      <fileset dir="${dir.bld.svr.cls}">
        <include name="**/intf/*.class"/>
      	<include name="**/${fil.jar.checksum}"/>
      </fileset>
      <path refid="additional.jar.path"/>
    </path>
 	
    <antcall target="create.class.checksum" inheritall="false">
      <param name="checksumbasedir" value="${dir.bld.svr.cls}"/>
      <param name="checksumpath" value="application.path"/>
      <reference refid="application.path" />
    </antcall>

    <jar
      destfile="${jar.application}"
      update="false"
      filesonly="true" level="${jar.compression}">
      <path refid="application.path"/>
    </jar>
 	
  	<delete>
  		<fileset dir="${dir.bld.svr.cls}">
  			<include name="**/${fil.jar.checksum}"/>
  		</fileset>
  	</delete>

  </target>

  <!--  ***********************************************  -->
  <!--  ***  C O M P I L E . I M P L E M E N T E D  ***  -->
  <!--  ***********************************************  -->
  <target name="compile.implemented"
    description="Compiles and jars all handcrafted sources">

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Starting compile.implemented"/>
    </antcall>

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Compile all implemented and remaining generated classes"/>
    </antcall>

    <javac
      excludes="**/webservice/**/*.java
                **/struct/*.java
                **/intf/*.java
                **/graphql/**/*.java
                ${project.package}/${prp.layername.lower}/LayerModule.java"
      destdir="${j.dst}"
      classpathref="j.cp"
      debug="${cmp.debug}"
      fork="${cmp.fork}"
      memoryMaximumSize="${cmp.maxmemory}"
      memoryInitialSize="${cmp.maxmemory}"
      nowarn="${cmp.nowarn}"
      optimize="${cmp.optimize}"
      deprecation="${cmp.deprecation}"
      verbose="${cmp.verbose}"
      updatedProperty="impl.compile"
      includeAntRuntime="${cmp.includeAntRuntime}"
      includeJavaRuntime="${cmp.includeJavaRuntime}"
      failonerror="${cmp.failonerror}"
      listfiles="${cmp.listfiles}">
      <src refid="compile.path"/>
      <compilerarg value="-Xbootclasspath/p:${jars.allxml}" />
      <compilerarg value="-Xmaxwarns"/>
      <compilerarg value="${cmp.maxwarnings}"/>
      <compilerarg line="${cmp.gc}"/>
      <compilerarg line="${cmp.compilerarg}"/>
    </javac>

    <copy todir="${dir.bld.svr.cls}">
      <fileset dir="${j.src}" includes="*/source/**/*.*" excludes="**/*.java,**/*.zip"/>
      <mapper type="regexp"
        from="^(.*)\${file.separator}source\${file.separator}(.*)$$"
        to="\2"/>
    </copy>
    <copy flatten="false" toDir="${dir.bld.svr.cls}/schemas/">
       <fileset dir="${dir.base.components}" includes="**/webservices/**/*.xsd"/>
    </copy>

    <copy todir="${dir.bld.svr.cls}">
      <fileset dir="${dir.bld.svr.gen}">
        <include name="${project.package}/rules/rdo/*.properties"/>
        <include name="${project.package}/rules/rdo/*.xml"/>
        <include name="curam/EntityPackages.properties"/>
        <include name="META-INF/**"/>
      </fileset>
    </copy>

    <antcall target="bld.implementation.jar"/>

    <antcall target="dispmsg">
      <param name="prm.msg" value="Compile web service implementations"/>
    </antcall>
    <mkdir dir="${dir.bld.web.cls}"/>

    <javac
      includes="**/webservice/**/*.java"
      destdir="${dir.bld.web.cls}"
      classpathref="wsconnector.classpath"
      debug="${cmp.debug}"
      fork="${cmp.fork}"
      memoryMaximumSize="${cmp.maxmemory}"
      memoryInitialSize="${cmp.maxmemory}"
      nowarn="${cmp.nowarn}"
      optimize="${cmp.optimize}"
      deprecation="${cmp.deprecation}"
      verbose="${cmp.verbose}"
      updatedProperty="webservices.compile"
      includeAntRuntime="${cmp.includeAntRuntime}"
      includeJavaRuntime="${cmp.includeJavaRuntime}"
      failonerror="${cmp.failonerror}"
      listfiles="${cmp.listfiles}">
      <src refid="compile.path"/>
      <compilerarg value="-Xbootclasspath/p:${jars.allxml}" />
      <compilerarg value="-Xmaxwarns"/>
      <compilerarg value="${cmp.maxwarnings}"/>
      <compilerarg line="${cmp.gc}"/>
      <compilerarg line="${cmp.compilerarg}"/>
    </javac>

    <antcall target="dispmsg">
      <param name="prm.msg" value="Compile web service generated"/>
    </antcall>

    <javac
      destdir="${dir.bld.web.cls}"
      classpathref="j.cp"
      debug="${cmp.debug}"
      fork="${cmp.fork}"
      memoryMaximumSize="${cmp.maxmemory}"
      memoryInitialSize="${cmp.maxmemory}"
      nowarn="${cmp.nowarn}"
      optimize="${cmp.optimize}"
      deprecation="${cmp.deprecation}"
      verbose="${cmp.verbose}"
      updatedProperty="webservices.compile"
      includeAntRuntime="${cmp.includeAntRuntime}"
      includeJavaRuntime="${cmp.includeJavaRuntime}"
      failonerror="${cmp.failonerror}"
      listfiles="${cmp.listfiles}">
      <src path="${dir.bld.svr.web}" />
      <include name="**/struct/*.java" />
      <include name="**/wsintf/*.java" />
      <include name="**/ejbprovider/*.java" />
      <compilerarg value="-Xbootclasspath/p:${jars.allxml}" />
      <compilerarg value="-Xmaxwarns"/>
      <compilerarg value="${cmp.maxwarnings}"/>
      <compilerarg line="${cmp.gc}"/>
      <compilerarg line="${cmp.compilerarg}"/>
    </javac>

    <copy todir="${dir.bld.web.cls}">
      <fileset dir="${dir.bld.svr.web}">
        <include name="**/*.Provider"/>
      </fileset>
    </copy>

    <antcall target="bld.appwebservices.jar"/>

    <available file="${secure.webservices.config}" property="secure.webservices.config.exists"/>
    <antcall target="include.secure.webservices.config.if"/>

    <antcall target="check.overridden.methods.impl" inheritall="false" />

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Ending compile.implemented"/>
    </antcall>
  </target>

  <target name="bld.implementation.jar">

    <antcall target="dispmsg">
      <param name="prm.msg" value="Build implementation.jar"/>
    </antcall>

    <delete file="${jar.implementation}"/>

    <path id="implementation.path">
      <fileset dir="${dir.bld.svr.cls}">
        <include name="${project.package}/*/LayerModule.class"/>
        <include name="**/remote/**/*.class"/>
        <include name="**/rules/**/*.class"/>
        <include name="**/fact/**/*.class"/>
        <include name="**/impl/**/*.class"/>
        <include name="**/base/**/*.class"/>
      	<include name="**/${fil.jar.checksum}"/>
      </fileset>
      <fileset dir="${dir.bld.svr.cls}">
        <exclude name="**/*.class"/>
        <exclude name="CombinedShortNames.properties"/>
      </fileset>
      <path refid="additional.jar.path"/>
    </path>
  	
    <antcall target="create.class.checksum" inheritall="false">
      <param name="checksumbasedir" value="${dir.bld.svr.cls}"/>
      <param name="checksumpath" value="implementation.path"/>
      <reference refid="implementation.path" />
    </antcall>

    <jar
      destfile="${jar.implementation}"
      filesonly="true"
      excludes="curam/util/security/Authentication.class"
    >
      <path refid="implementation.path"/>
    </jar>
  	
    <delete>
      <fileset dir="${dir.bld.svr.cls}">
        <include name="**/${fil.jar.checksum}"/>
      </fileset>
    </delete>

  </target>

  <!-- The webservices.jar file should be regenerated if the jar file has been deleted or if
       any webservices have been updated/added. -->
  <target name="check.webservices.compile">
    <condition property="recompile.webservices">
      <or>
        <istrue value="${webservices.compile}"/>
        <not>
          <resourceexists>
            <file file="${jar.appwebservices}"/>
          </resourceexists>
        </not>
      </or>
    </condition>

  </target>

  <target name="bld.appwebservices.jar" if="recompile.webservices" depends="check.webservices.compile">

    <antcall target="dispmsg">
      <param name="prm.msg" value="Build appwebservices.jar"/>
    </antcall>

    <path id="appwebservices.path">
      <fileset dir="${dir.bld.svr.cls}">
        <include name="**/remote/*.class"/>
      	<include name="**/${fil.jar.checksum}"/>
      </fileset>
      <fileset dir="${dir.bld.web.cls}"/>
    </path>
  	
  	<antcall target="create.class.checksum" inheritall="false">
  	  <param name="checksumbasedir" value="${dir.bld.svr.cls}"/>
  	  <param name="checksumpath" value="appwebservices.path"/>
  	  <reference refid="appwebservices.path" />
  	</antcall>

    <jar
      destfile="${jar.appwebservices}"
      filesonly="true" level="${jar.compression}">
      <path refid="appwebservices.path"/>
    </jar>
  	
  	<delete>
  	  <fileset dir="${dir.bld.svr.cls}">
  	    <include name="**/${fil.jar.checksum}"/>
  	  </fileset>
  	</delete>

  </target>

  <target name="include.secure.webservices.config.if" if="secure.webservices.config.exists">
    <jar destfile="${jar.appwebservices}" update="true" filesonly="true" level="${jar.compression}">
      <fileset dir="${secure.webservices.config}" includes="**/*"/>
    </jar>
  </target>

  <!--  *********************************************  -->
  <!--  ***  C O M P I L E . S U P P L E M E N T  ***  -->
  <!--  *********************************************  -->
  <target name="check.supplement.property.set" unless="supplement">
    <fail message="The property 'supplement' must be set. Please use -Dsupplement"/>
  </target>

  <path id="compile.supplement.path">
    <dirset dir="${j.src}">
      <include name="*/${supplement}"/>
    </dirset>
  </path>

  <target name="compile.supplement" depends="check.supplement.property.set">
    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Starting compile.supplement"/>
    </antcall>

    <mkdir dir="${dir.bld.svr}/${supplement}/cls"/>

    <!-- Test class file dependencies and delete any out-of-date items -->
    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Check ${supplement} dependencies"/>
    </antcall>

    <!-- Explictly delete class files which no longer have a corresponding java source -->
    <taskdef name="cbuild"
      classname="curam.util.tools.AntDeleteNonMappedFiles" classpath="${jar.tools}:${jar.bcel}:${jar.commonslang}:${jar.commonstext}"/>

    <cbuild outdir="${dir.bld.svr}/${supplement}/cls"
            srcFileExtension=".java"
            bldFileExtension=".class">
      <src refid="compile.supplement.path"/>
    </cbuild>

    <!-- Clean any source dependancies -->
    <property name="depend.supplement.path" refid="compile.supplement.path"/>
    <depend
      destdir="${dir.bld.svr}/${supplement}/cls"
      cache="${dir.bld.svr}/${supplement}"
      closure="${depend.closure}"
      srcdir="${depend.supplement.path}"
      classpath="${dir.bld.svr.cls}:${dir.bld.svr.msg.cls}:${dir.bld.svr.ctx.cls}:${dir.bld.svr.evx.cls}"/>

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Compile ${supplement}"/>
    </antcall>

    <javac includes="**"
      destdir="${dir.bld.svr}/${supplement}/cls"
      classpathref="tests.cp"
      debug="${cmp.debug}"
      fork="${cmp.fork}"
      memoryMaximumSize="${cmp.maxmemory}"
      memoryInitialSize="${cmp.maxmemory}"
      nowarn="${cmp.nowarn}"
      optimize="${cmp.optimize}"
      deprecation="${cmp.deprecation}"
      verbose="${cmp.verbose}"
      includeAntRuntime="${cmp.includeAntRuntime}"
      includeJavaRuntime="${cmp.includeJavaRuntime}"
      failonerror="${cmp.failonerror}"
      listfiles="${cmp.listfiles}">
      <src refid="compile.supplement.path"/>
      <compilerarg value="-Xbootclasspath/p:${jars.allxml}" />
      <compilerarg value="-Xmaxwarns"/>
      <compilerarg value="${cmp.maxwarnings}"/>
      <compilerarg line="${cmp.compilerarg}"/>
    </javac>

    <!-- Copy source property files -->
    <copy todir="${dir.bld.svr}/${supplement}/cls">
      <fileset dir="${j.src}" includes="*/${supplement}/**/*.*" excludes="**/*.java"/>
      <mapper type="regexp"
        from="^(.*)\${file.separator}${supplement}\${file.separator}(.*)$$"
        to="\2"/>
    </copy>
    
    <jar destfile="${dir.bld.jar}/${supplement}.jar" filesonly="true" level="${jar.compression}"
      basedir="${dir.bld.svr}/${supplement}/cls"/>

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Ending compile.supplement"/>
    </antcall>

  </target>

  <target name="check.overridden.methods.impl">

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Checking implementation of the overridden methods..."/>
    </antcall>

    <java
      classname="curam.util.tools.codecheck.OverriddenMethodsImplChecker"
      classpathref="j.cp"
      classpath="${jar.ant}"
      fork="${java.fork}"
      failonerror="${java.failonerror}"
      maxmemory="${java.maxmemory}"
      taskname="overriddenmethodsimplcheck"
    >
      <jvmarg line="${java.jvmargs}" />
      <jvmarg value="-Xms${java.maxmemory}" />
      <jvmarg value="-Xbootclasspath/p:${jars.allxml}" />
      <sysproperty key="curam.disable.dynamic.properties" value="true"/>
      <arg value="${dir.bld.svr.gen}"/>
      <arg value="${SERVER_MODEL_NAME}"/>
    </java>
  </target>

</project>