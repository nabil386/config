<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed Materials - Property of IBM
  
  Copyright IBM Corporation 2012,2021. All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or disclosure
  restricted by GSA ADP Schedule Contract with IBM Corp.
-->
<!--

  This is the ant config test file for Curam projects.
  It produces calls the ConfigTest class which checks various settings.

-->
<project name="app_configtest" default="main">

  <!--  ***************************  -->
  <!--  ***  Import Properties  ***  -->
  <!--  ***************************  -->
  <import file="./app_properties.xml" />

  <import file="./app_utilities.xml" />

  <import file="./app_macros.xml" />

  <!-- build initialization -->
  <import file="./app_init.xml" />

  <path id="configtest.classpath">
    <path refid="j.cp" />
    <pathelement location="${dir.sde.lib}"/>
  </path>

  <taskdef name="antstring" classname="curam.util.tools.AntStrings"
    classpath="${jar.coreinf}:${jar.tools}"/>

  <!--  *******************************  -->
  <!--  ***  C O N F I G   T E S T  ***  -->
  <!--  *******************************  -->
  <target name="main" depends="check.db.type, run.database.h2"
     description="Check configuration">


    <ant antfile="${dir.sde.bin}/app_init.xml"
      target="internal.verify.project.dir.path" inheritall="false">
      <property name="dir.bld" value="${dir.bld}"/>
      <property name="crypto.prop.file.location" value="${crypto.prop.file.location}"/>
      <property name="crypto.jar.file" value="${crypto.jar.file}"/>
      <property name="crypto.ks.file" value="${crypto.ks.file}"/>
      <property name="crypto.prop.file" value="${crypto.prop.file}"/>
      <property name="crypto.ext.dir" value="${crypto.ext.dir}"/>
      <property name="crypto.jvm.vendor" value="${crypto.jvm.vendor}"/>
    </ant>

    <ant antfile="${dir.sde.bin}/app_jwt.xml"
      target="internal.jwt.jar" />
   
    <antstring to="javahome.with.forward.slashes"
      oldchar="\" newchar="/" from="${JAVA_HOME}" type="replace" />
    <antstring to="j2eejar.with.forward.slashes"
      oldchar="\" newchar="/" from="${J2EE_JAR}" type="replace" />

    <property name="ibm.was.product.location"   value="/properties/version/WAS.product"/>

    <!-- Check Environment Variables -->
    <antcall target="check.common.vars" inheritall="false"/>

    <antcall target="check.available.files" inheritall="false"/>

    <!-- Base a development machine on the absence of a ear directory -->
    <condition property="development.machine">
      <not>
        <available file="${sysenv.CURAM_DIR}/ear" type="dir"/>
      </not>
    </condition>
    <antcall target="check.development.vars"/>

    <!--Check database settings -->
    <antcall target="check.zOS"/>

    <!-- Check configuration settings -->
    <antcall target="check.configuration.settings"/>

    <!--Check database post configuration -->
    <!--This is to be moved into the java in a future workitem-->
    <antcall target="check.db2.configuration"/>

  </target>

  <!--  *********************************************  -->
  <!--  ***  W A S . S E T T I N G S . C H E C K  ***  -->
  <!--  *********************************************  -->

  <!-- Check Websphere specific variables -->
  <target name="check.was" depends="appserver.check" if="vendor.equals.ibm" >

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Checking WebSphere configuration..."/>
    </antcall>

    <!-- Check for a WAS_HOME variable -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="WAS_HOME"/>
      <param name="prm.prop"  value="sysenv.WAS_HOME"/>
    </antcall>

    <antstring to="washome.with.forward.slashes"
      oldchar="\" newchar="/" from="${WAS_HOME}" type="replace" />

    <!-- Check for a JAVA_HOME variable -->
    <condition property="using.was.j2se" value="N/A">
      <os family="z/os"/>
    </condition>
    <condition property="using.was.j2se">
      <matches  string="${javahome.with.forward.slashes}"
        pattern="${washome.with.forward.slashes}/java" casesensitive="No"/>
    </condition>
    <antcall target="check">
      <param name="message"
        value="Property JAVA_HOME must be set to the jdk of appserver WebSphere (${WAS_HOME}/java)."/>
      <param name="prop"
        value="using.was.j2se"/>
      <param name="fail.message"
        value="Change JAVA_HOME system variable to point to the jdk of the appserver."/>
    </antcall>

    <!-- Check for a J2EE_HOME variable -->
    <condition property="using.was.j2ee">
      <equals arg1="${j2eejar.with.forward.slashes}"
        arg2="${washome.with.forward.slashes}/lib/j2ee.jar" casesensitive="No"/>
    </condition>

    <antcall target="check">
      <param name="message"
        value="Property J2EE_JAR must be set to WebSphere j2ee (WAS_HOME)/lib/j2ee.jar"/>
      <param name="prop"
        value="using.was.j2ee"/>
      <param name="fail.message"
        value="Change J2EE_JAR system variable to point to the j2ee of the appserver."/>
    </antcall>

    <!--Check WebSphere version-->
    <property name="appserver.file"
      value="${washome.with.forward.slashes}${ibm.was.product.location}"/>

  </target>
  
  <!--  *********************************************  -->
  <!--  ***  W L P . S E T T I N G S . C H E C K  ***  -->
  <!--  *********************************************  -->

  <!-- Check WLP specific variables -->
  <target name="check.wlp" depends="appserver.check" if="vendor.equals.wlp" >

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Checking WebSphere Liberty configuration..."/>
    </antcall>

    <!-- Check for a WLP_HOME variable -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="WLP_HOME"/>
      <param name="prm.prop"  value="sysenv.WLP_HOME"/>
    </antcall>

    <antstring to="wlphome.with.forward.slashes"
      oldchar="\" newchar="/" from="${WLP_HOME}" type="replace" />

    <!--Check Liberty version -->
    <property name="ibm.wlp.product.location"   
      value="/lib/versions/openliberty.properties"/>
    <property name="appserver.file"
      value="${wlphome.with.forward.slashes}${ibm.wlp.product.location}"/>

  </target>

  <!--  *********************************************  -->
  <!--  ***  W L S . S E T T I N G S . C H E C K  ***  -->
  <!--  *********************************************  -->

  <!-- Check Weblogic Specific variable -->
  <target name="check.wls" depends="appserver.check" if="vendor.equals.bea" >

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Checking WLS configuration..."/>
    </antcall>

    <!-- Check for a WLS_HOME variable -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var" value="WLS_HOME"/>
      <param name="prm.prop" value="sysenv.WLS_HOME"/>
    </antcall>

    <antstring to="wlshome.with.forward.slashes"
      oldchar="\" newchar="/" from="${WLS_HOME}" type="replace" />

    <antstring to="beahome.with.forward.slashes"
      oldchar="\" newchar="/" from="${WLS_HOME}/../.." type="replace" />
    <echo>bea.home: ${beahome.with.forward.slashes}</echo>

    <!-- Check for a JAVA_HOME variable -->
    <property name="appserver.file" value="${beahome.with.forward.slashes}/inventory/registry.xml"/>
    <property name="java.home" value="${JAVA_HOME}" />

    <!-- Check for a J2EE_HOME variable -->
    <condition property="using.wls.j2ee">
      <or>
        <equals arg1="${j2eejar.with.forward.slashes}"
          arg2="${wlshome.with.forward.slashes}/lib/weblogic.jar" casesensitive="No"/>
        <equals arg1="${j2eejar.with.forward.slashes}"
          arg2="${wlshome.with.forward.slashes}/lib/wlfullclient.jar" casesensitive="No"/>
      </or>
    </condition>

    <antcall target="check">
      <param name="message"
        value="Property J2EE_JAR must be set to WebLogic j2ee (WLS_HOME)/lib/weblogic.jar or (WLS_HOME)/lib/wlfullclient.jar"/>
      <param name="prop"
        value="using.wls.j2ee"/>
      <param name="fail.message"
        value="Change J2EE_JAR system variable to point to the j2ee of the appserver."/>
    </antcall>

    <!--Check WLS version-->
    <property name="appserver.file" value="${beahome.with.forward.slashes}/registry.xml"/>

  </target>

  <!--  ***************************************************  -->
  <!--  ***  C H E C K . A V A I L A B L E . F I L E S  ***  -->
  <!--  ***************************************************  -->
  <target name="check.available.files">

    <fileavailable file="${JAVA_HOME}" type="dir"/>
    <antcall target="check.available.j2ee.jar.file" inheritall="false"/>

  </target>
  
  <target name="check.available.j2ee.jar.file" depends="appserver.check" 
    unless="vendor.equals.wlp">
    <fileavailable file="${J2EE_JAR}"  type="file"/>
  </target>

  <target name="check.j2ee.envvar" depends="appserver.check" 
    unless="vendor.equals.wlp">
    <!-- Check for a J2EE_JAR installation -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="J2EE_JAR"/>
      <param name="prm.prop"  value="sysenv.J2EE_JAR"/>
    </antcall>
  </target>

  <!--  ***************************************************  -->
  <!--  ***  C O M M O N . S E T T I N G S . C H E C K  ***  -->
  <!--  ***************************************************  -->
  <target name="check.common.vars">

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Checking Common environment variables..."/>
    </antcall>

    <!-- Check for a JAVA_HOME installation -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="JAVA_HOME"/>
      <param name="prm.prop"  value="sysenv.JAVA_HOME"/>
    </antcall>

    <!-- Check for a J2EE_JAR installation -->
    <antcall target="check.j2ee.envvar" inheritall="false"/>

    <!-- Check for a CuramSDEJ installation -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="CURAMSDEJ"/>
      <param name="prm.prop"  value="sysenv.CURAMSDEJ"/>
    </antcall>

    <!-- Check for a SERVER_DIR variable -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="SERVER_DIR"/>
      <param name="prm.prop"  value="sysenv.SERVER_DIR"/>
    </antcall>

    <!-- Check for a SERVER_MODEL_NAME variable -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="SERVER_MODEL_NAME"/>
      <param name="prm.prop"  value="sysenv.SERVER_MODEL_NAME"/>
    </antcall>

    <!-- Check for a SERVER_COMPONENT_ORDER variable -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="SERVER_COMPONENT_ORDER"/>
      <param name="prm.prop"  value="sysenv.SERVER_COMPONENT_ORDER"/>
    </antcall>

    <!-- Check for ANT_OPTS -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="ANT_OPTS"/>
      <param name="prm.prop"  value="sysenv.ANT_OPTS"/>
    </antcall>

  </target>

  <!--  *************************************************************  -->
  <!--  ***  D E V E L O P M E N T . S E T T I N G S . C H E C K  ***  -->
  <!--  *************************************************************  -->
  <target name="check.development.vars" if="development.machine">

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Checking development environment variables..."/>
    </antcall>

    <!-- Check for a CuramCDEJ installation -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="CURAMCDEJ"/>
      <param name="prm.prop"  value="sysenv.CURAMCDEJ"/>
    </antcall>

    <!-- Check for a CLIENT_DIR installation -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="CLIENT_DIR"/>
      <param name="prm.prop"  value="sysenv.CLIENT_DIR"/>
    </antcall>

    <!-- Check for a CLIENT_PROJECT_NAME installation -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="CLIENT_PROJECT_NAME"/>
      <param name="prm.prop"  value="sysenv.CLIENT_PROJECT_NAME"/>
    </antcall>

    <!-- Check for a LOCALE_LIST installation -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="LOCALE_LIST"/>
      <param name="prm.prop"  value="sysenv.LOCALE_LIST"/>
    </antcall>

    <!-- Check for a CLIENT_COMPONENT_ORDER installation -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="CLIENT_COMPONENT_ORDER"/>
      <param name="prm.prop"  value="sysenv.CLIENT_COMPONENT_ORDER"/>
    </antcall>

    <!-- Check for a SERVER_LOCALE_LIST variable -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="SERVER_LOCALE_LIST"/>
      <param name="prm.prop"  value="sysenv.SERVER_LOCALE_LIST"/>
    </antcall>

  </target>

   <!--  ********************************************************** -->
  <!--  ***  A N T  V E R S I O N. C H E C K  ***  -->
  <!--  **********************************************************  -->
  <target name="check.ant.version">
    <property name="version.ant" value="${ant.version}" />
  </target>

  <!--  ****************************************  -->
  <!--  ***  A P P  S E R V E R . C H E C K  ***  -->
  <!--  ****************************************  -->
  <target name="appserver.check"
    depends="check.appserver.prop.file" if="appserver.prop.file.available">

    <property file="${app.prop.location}"/>

    <condition property="vendor.equals.ibm">
      <equals arg1="${as.vendor}" arg2="ibm" casesensitive="false"/>
    </condition>
    <condition property="vendor.equals.bea">
      <equals arg1="${as.vendor}" arg2="bea" casesensitive="false"/>
    </condition>
    <condition property="vendor.equals.wlp">
      <equals arg1="${as.vendor}" arg2="wlp" casesensitive="false"/>
    </condition>

  </target>

  <!--  *************************************************  -->
  <!--  ***  A P P S E R V E R . F I L E . C H E C K  ***  -->
  <!--  *************************************************  -->
  <target name="check.appserver.prop.file">
    <!-- Check whether an appserver property file exists -->
    <available property="appserver.prop.file.available" file="${app.prop.location}"/>
  </target>

  <!--  **********************************************  -->
  <!--  ***  C O N F I G U R A T I O N. C H E C K  ***  -->
  <!--  **********************************************  -->
  <target name="check.configuration.settings"
    depends="check.ant.version, check.was, check.wlp, check.wls">

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Checking configuration..."/>
    </antcall>

    <java classname="curam.util.tools.configtest.ConfigTest"
      classpathref="configtest.classpath"
      fork="${java.fork}"
      failonerror="${java.failonerror}"
      maxmemory="${java.maxmemory}"
      taskname="configtest"
    >
      <jvmarg value="-Xbootclasspath/p:${jars.allxml}" />
      <jvmarg line="${java.jvmargs}" />
      <jvmarg value="-Xms${java.maxmemory}" />
      <sysproperty key="curam.disable.dynamic.properties" value="true" />
      <sysproperty key="server.dir" value="${sysenv.SERVER_DIR}" />
      <arg value="${jar.coreinf}" />
      <arg value="${version.ant}" />
      <arg value="${appserver.file}" />
      <arg value="${java.home}" />
    </java>

  </target>

  <!--  ***************************  -->
  <!--  ***  U T I L I T I E S  ***  -->
  <!--  ***************************  -->
  <target name="check" unless="${prop}">
    <echo>${message}</echo>
    <fail message="${fail.message}"/>
  </target>

  <target name="check.file" unless="${prop}">
    <fail>The following file cannot be located ${file}</fail>
  </target>

  <!--  **************************************  -->
  <!--  ***  P R O P E R T Y  C H E C K S  ***  -->
  <!--  ************************************** -->
  <!-- Check ZOS Specific variables -->
  <target name="check.zOS" depends="check.db.type" if="usingzos" >

    <!-- Check for a DB2JCC_LICENSE_CISUZ_JAR variable -->
    <antcall target="check.prop" inheritall="false">
      <param name="prm.var"   value="DB2JCC_LICENSE_CISUZ_JAR"/>
      <param name="prm.prop"  value="sysenv.DB2JCC_LICENSE_CISUZ_JAR"/>
    </antcall>

  </target>

  <!-- Check DB2 Specific variables and post configuration -->
  <target name="check.db2.configuration"
    depends="check.db.type, get.decrypted.db.password" if="usingdb2" >

    <!--move into the java for w/item related to dbcs issue-->
    <property name="lock.timeout"   value="1"/>
    <property name="db2.cfg"        value="${dir.sde.bin}/db2.cfg"/>

    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="Checking DB2 post configuration steps..."/>
    </antcall>

    <antcall target="check.db2.cfg" inheritall="true"/>
    <antcall target="no.db2.cfg.check" inheritall="true"/>

  </target>

  <!--  ************************************  -->
  <!--  ***  Check the DB2 configuraiton ***  -->
  <!--  ************************************  -->
  <target name="check.db2.cfg" unless="db2.is.remote">

    <antcall target="get.db2.cfg" inheritall="true"/>

    <!--The following method of loading properties maybe condensed in a future release when
    further post configuration steps are performed.-->

    <!--Check the lock timeout-->
    <loadfile
      property="lock.timeout.found"
      srcFile="${db2.cfg}">
      <filterchain>
        <tokenfilter>
          <containsstring contains="(LOCKTIMEOUT) "/>
          <replaceregex pattern="^.*=[ ]*" replace=""/>
          <replaceregex pattern=" .*$" replace=""/>
        </tokenfilter>
        <filterreader classname="org.apache.tools.ant.filters.StripLineBreaks"/>
      </filterchain>
    </loadfile>

    <echo>LOCKTIMEOUT = ${lock.timeout.found}</echo>

    <typedef name="atleast" classname="curam.util.tools.AntConditionAtLeast"
      classpath="${jar.coreinf}:${jar.tools}"/>

    <condition property="correct.lock.timeout">
      <atleast arg1="${lock.timeout.found}" arg2="${lock.timeout}" />
    </condition>

    <antcall target="check">
      <param name="message"
        value="Property LOCKTIMEOUT must be set to 1 or any desired higher value."/>
      <param name="prop"
        value="correct.lock.timeout"/>
      <param name="fail.message"
        value="For earlier versions of DB2 open the General Administration Tools/Control Center to change LOCKTIMEOUT before continuing.  Select the Databases folder (Systems... Instances... DB2... Databases).  Right click on the database, select 'Configure Parameters'.  Update the Lock timeout (in the Applications section) to at least ${lock.timeout} or any desired higher value. For DB2 V10 and above use the db2 command to set an appropriate LOCKTIMEOUT value (e.g. db2 update db cfg for CURAM using LOCKTIMEOUT 30)."/>
    </antcall>

    <delete file="${db2.cfg}"/>

  </target>

  <!--  ************************  -->
  <!--  ***  GET.DB2.CONFIG  ***  -->
  <!--  ************************  -->
  <target name="get.db2.cfg">

    <condition property="use.windows.db2.cmd" value="true" >
      <os family="windows" />
    </condition>

    <antcall target="get.db2.cfg.windows"/>
    <antcall target="get.db2.cfg.unix"/>

    <waitfor maxwait="30" maxwaitunit="second">
      <available file="${db2.cfg}"/>
    </waitfor>
  </target>

  <target name="get.db2.cfg.windows" if="use.windows.db2.cmd">
    <exec executable="db2cmd">
      <arg value="-c"/>
      <arg value="&quot;db2 connect to ${curam.db.name} user ${curam.db.username} using ${decrypted.db.password} &amp; db2 get db config&quot;"/>
      <arg value="&gt; ${db2.cfg}"/>
    </exec>
  </target>

  <target name="get.db2.cfg.unix" unless="use.windows.db2.cmd">
    <exec executable="sh">
      <arg value="-c"/>
      <arg value="echo -e &quot;connect to ${curam.db.name} user ${curam.db.username} using ${decrypted.db.password}\nget db config&quot; | db2 +p &gt; ${db2.cfg}"/>
    </exec>
  </target>

  <!--  *******************************************************  -->
  <!--  ***  Indicate no DB2 configuration check was done.  ***  -->
  <!--  *******************************************************  -->
  <target name="no.db2.cfg.check" if="db2.is.remote">
    <antcall target="dispmsg" inheritall="false">
      <param name="prm.msg" value="DB2 post configuration check was bypassed because db2.is.remote was set. Ensure the DB2 configuration has been validated on the host where DB2 is installed by running the configtest target there (if Curam is installed) or by manually validating the configuration as per the Curam documentation."/>
    </antcall>
  </target>

</project>