<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed Materials - Property of IBM

  Copyright IBM Corporation 2012,2014. All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or disclosure
  restricted by GSA ADP Schedule Contract with IBM Corp.
-->
<!--

  This is the ant file for running the Data Extractor.

-->
<project name="app_dataextractor" default="extractdata">

  <!--  ***************************  -->
  <!--  ***  Import Properties  ***  -->
  <!--  ***************************  -->
  <import file="./app_properties.xml" />

  <!--  **************************  -->
  <!--  ***  Import Utilities  ***  -->
  <!--  **************************  -->
  <import file="./app_utilities.xml" />

  <property name="dir.dataextractor"      value="${dir.bld}/dataextractor"/>
  <property name="dir.dataextractor.clob" value="${dir.dataextractor}/clob"/>
  <property name="dir.dataextractor.blob" value="${dir.dataextractor}/blob"/>

  <!--  ******************************  -->
  <!--  *** E X T R A C T D A T A  ***  -->
  <!--  ******************************  -->
  <target name="extractdata">

    <!-- Start recording progress to a log file -->
    <mkdir dir="${dir.bld.log}"/>

    <!-- Set the starting time stamp for use in file names -->
    <tstamp><format property="tim.start.sort" pattern="yyyyMMddHHmmss"/></tstamp>
    <record name="${dir.bld.log}/ExtractData${tim.start.sort}.log" loglevel="info" />

    <antcall target="dispmsg" inheritAll="false">
      <param name="prm.msg" value="Invoking the Data Extractor"/>
    </antcall>

    <!-- Set this here so it can be overridden from build.bat or ANT_OPTS -->
    <condition property="extra.args" value="-tablename ${tablename}">
      <isset property="tablename"/>
    </condition>

    <condition property="gettablesfromfile" value="true">
      <isset property="tablenamesinfile"/>
    </condition>
    <antcall target="extractdatafromfile"/>
    <antcall target="extractdatafromtables"/>

  </target>

  <target name="extractdatafromfile" if="${gettablesfromfile}" depends="tablenamesinfile.check"
    description="Extracts tables based on a list specified in a file.">

    <loadfile property="tablenameslist" failonerror="false"
       srcFile="${tablenamesinfile}"/>
    <antcall target="extractdatacommon"/>
  </target>

  <target name="extractdatafromtables" unless="${gettablesfromfile}">
    <antcall target="extractdatacommon"/>
  </target>

  <target name="extractdatacommon">
    <condition property="extra.args" value="-tablename ${tablenameslist}">
      <and>
        <isset property="tablenameslist"/>
        <isset property="tablenamesinfile"/>
      </and>
    </condition>
    <property name="extra.args" value=""/>

    <!-- Make the temp directory -->

    <property name="deletedataextractoutputdir" value="true"/>
     <condition property="deleteset" value="true">
      <equals arg1="${deletedataextractoutputdir}" arg2="true"/>
    </condition>

    <antcall target="deletedataextractoutput" />
    <mkdir dir="${dir.dataextractor}" />
    <mkdir dir="${dir.dataextractor.clob}" />
    <mkdir dir="${dir.dataextractor.blob}" />

    <java
      classname="curam.util.tools.dataextractor.DataExtractor"
      classpathref="database.common.classpath"
      fork="${java.fork}"
      failonerror="${java.failonerror}"
      maxmemory="${java.maxmemory}"
      taskname="dataextractor"
    >
      <sysproperty key="curam.disable.dynamic.properties"     value="true"/>
      <jvmarg line="${java.jvmargs}" />
      <jvmarg value="-Xms${java.maxmemory}" />
      <jvmarg value="-Xbootclasspath/p:${jars.allxml}" />
      <arg line="-outdir ${dir.bld}/dataextractor" />
      <arg line="-mergeddlfile ${dir.bld.ddl}/Merged_Tables.xml" />
      <arg line="${extra.args}" />
    </java>

    <echo>The output file/s have been created in ${dir.dataextractor}</echo>

  </target>

  <target name="tablenamesinfile.check"  if="gettablesfromfile">

    <available property="tablenamesfile.exists"
      file="${tablenamesinfile}" />

    <fail unless="tablenamesfile.exists"
      message="The tablename file ${tablenamesinfile} specified does not exist."/>

  </target>

  <target name="deletedataextractoutput"  if="deleteset">
     <delete dir="${dir.dataextractor}"/>
  </target>

  <!--  *****************  -->
  <!--  ***  THE END  ***  -->
  <!--  *****************  -->

</project>

