<?xml version="1.0" encoding="UTF-8"?>

<root>
  <!--SQLJ Declarations-->
  <sqljentries>
    <sqlj name="AppResource" operation="readByNameAndLocale" plainsql="SELECT  resourceID,  name,  localeIdentifier,  contentType,  contentDisposition,  content,  internal,  description,  category,  versionNo  INTO  :resourceID,  :name,  :localeIdentifier,  :contentType,  :contentDisposition,  :content,  :internal,  :description,  :category,  :versionNo  FROM AppResource  WHERE (name = :name)  AND (localeIdentifier = :localeIdentifier OR (:localeIsNull = '1' AND localeIdentifier IS NULL));">
      <parameter name="curam.util.internal.resources.struct.NSResourceKey">
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="localeIsNull" ddltype="SVR_BOOLEAN"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.resources.struct.NSResourceDetails">
        <attribute name="resourceID" ddltype="SVR_INT64"/>
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="contentType" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="contentDisposition" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="content" ddltype="SVR_BLOB&lt;1048576&gt;"/>
        <attribute name="internal" ddltype="SVR_BOOLEAN"/>
        <attribute name="description" ddltype="SVR_STRING&lt;2000&gt;"/>
        <attribute name="category" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="AppResource" operation="readByEmptyCategory" plainsql="SELECT  resourceID,  name,  localeIdentifier,  contentType,  contentDisposition,  content,  internal,  description,  category,  versionNo  INTO  :resourceID,  :name,  :localeIdentifier,  :contentType,  :contentDisposition,  :content,  :internal,  :description,  :category,  :versionNo  FROM AppResource  WHERE category IS NULL;">
      <returntype name="curam.util.internal.resources.struct.NSResourceDetails">
        <attribute name="resourceID" ddltype="SVR_INT64"/>
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="contentType" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="contentDisposition" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="content" ddltype="SVR_BLOB&lt;1048576&gt;"/>
        <attribute name="internal" ddltype="SVR_BOOLEAN"/>
        <attribute name="description" ddltype="SVR_STRING&lt;2000&gt;"/>
        <attribute name="category" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="AppResource" operation="removeByNameAndLocale" plainsql="DELETE  FROM AppResource  WHERE (name = :name)  AND (localeIdentifier = :localeIdentifier OR (:localeIsNull = '1' AND localeIdentifier IS NULL))">
      <parameter name="curam.util.internal.resources.struct.NSResourceKey">
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="localeIsNull" ddltype="SVR_BOOLEAN"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
    </sqlj>
    <sqlj name="AppResource" operation="readByIEGScriptDefinitionID" plainsql="SELECT  resourceID,  name,  localeIdentifier,  contentType,  contentDisposition,  content,  internal,  description,  category,  versionNo  INTO  :resourceID,  :name,  :localeIdentifier,  :contentType,  :contentDisposition,  :content,  :internal,  :description,  :category,  :versionNo  FROM AppResource  WHERE name  LIKE :name;">
      <parameter name="curam.util.internal.resources.struct.ResourceName">
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.resources.struct.AppResourceDtls">
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="contentType" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="contentDisposition" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="content" ddltype="SVR_BLOB&lt;1048576&gt;"/>
        <attribute name="internal" ddltype="SVR_BOOLEAN"/>
        <attribute name="resourceID" ddltype="SVR_INT64"/>
        <attribute name="description" ddltype="SVR_STRING&lt;2000&gt;"/>
        <attribute name="category" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="AppResource" operation="removeByIEGScriptDefinitionID" plainsql="DELETE FROM     AppResource  WHERE     name   LIKE     :name">
      <parameter name="curam.util.internal.resources.struct.ResourceName">
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
      </parameter>
    </sqlj>
    <sqlj name="AppResource" operation="readByLikeName" plainsql="SELECT  resourceID,  name,  localeIdentifier  INTO  :resourceID,  :name,  :localeIdentifier  FROM AppResource  WHERE name like :name  ">
      <parameter name="curam.util.internal.resources.struct.ResourceName">
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.resources.struct.ResourceNameIDLocale">
        <attribute name="resourceID" ddltype="SVR_INT64"/>
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="AuthenticationLog" operation="readmulti" plainsql="AuthenticationLog.timeEntered &gt;= :startTime AND AuthenticationLog.timeEntered &lt;= :endTime" wheresql="AuthenticationLog.timeEntered &gt;= :startTime AND AuthenticationLog.timeEntered &lt;= :endTime" orderbysql="timeEntered">
      <parameter name="curam.util.administration.struct.LogKey">
        <attribute name="startTime" ddltype="SVR_DATETIME"/>
        <attribute name="endTime" ddltype="SVR_DATETIME"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.AuthenticationLogDtls">
        <attribute name="timeEntered" ddltype="SVR_DATETIME"/>
        <attribute name="userName" ddltype="SVR_STRING&lt;64&gt;"/>
        <attribute name="loginFailures" ddltype="SVR_INT32"/>
        <attribute name="lastLogin" ddltype="SVR_DATETIME"/>
        <attribute name="loginStatus" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="logID" ddltype="SVR_INT64"/>
        <attribute name="altLogin" ddltype="SVR_BOOLEAN"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="AuthenticationLog" operation="countEntries" plainsql="SELECT COUNT(*) INTO :count FROM AUTHENTICATIONLOG WHERE timeEntered &gt;= :startTime AND timeEntered &lt;= :endTime">
      <parameter name="curam.util.administration.struct.LogKey">
        <attribute name="startTime" ddltype="SVR_DATETIME"/>
        <attribute name="endTime" ddltype="SVR_DATETIME"/>
      </parameter>
      <returntype name="curam.util.administration.struct.LogCountStruct">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="AuthorisationLog" operation="readmulti" plainsql="AuthorisationLog.timeEntered &gt;= :startTime AND AuthorisationLog.timeEntered &lt;= :endTime" wheresql="AuthorisationLog.timeEntered &gt;= :startTime AND AuthorisationLog.timeEntered &lt;= :endTime" orderbysql="timeEntered">
      <parameter name="curam.util.administration.struct.LogKey">
        <attribute name="startTime" ddltype="SVR_DATETIME"/>
        <attribute name="endTime" ddltype="SVR_DATETIME"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.AuthorisationLogDtls">
        <attribute name="timeEntered" ddltype="SVR_DATETIME"/>
        <attribute name="userName" ddltype="SVR_STRING&lt;64&gt;"/>
        <attribute name="logID" ddltype="SVR_INT64"/>
        <attribute name="identifierName" ddltype="SVR_STRING&lt;200&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="AuthorisationLog" operation="countEntries" plainsql="SELECT COUNT(*) INTO :count FROM AUTHORISATIONLOG WHERE timeEntered &gt;= :startTime AND timeEntered &lt;= :endTime">
      <parameter name="curam.util.administration.struct.LogKey">
        <attribute name="startTime" ddltype="SVR_DATETIME"/>
        <attribute name="endTime" ddltype="SVR_DATETIME"/>
      </parameter>
      <returntype name="curam.util.administration.struct.LogCountStruct">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="BatchErrorCodes" operation="getAllErrorCodes" plainsql="SELECT BatchErrorCodes.errorCodeID, errorCode, BatchErrorCodes.versionNo into :errorCodeID, :errorCode, :versionNo FROM BatchErrorCodes ORDER BY errorCodeID;">
      <returntype name="curam.util.administration.struct.BatchErrorCodesDetails">
        <attribute name="errorCodeID" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="errorCode" ddltype="SVR_INT32"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="BatchProcDef" operation="readProcessByNameOrDesc" plainsql="SELECT  batchprocdef.processdefname,   batchprocdesc.PROCESSLONGNAME , batchprocdesc.DESCRIPTION, batchprocdesc.BATCHTYPE, ''   INTO :batchProcessDefinition, :batchProcessDefDisplayName, :batchProcessDefDescription, :batchType, :localeIdentifier   FROM batchprocdef   LEFT OUTER JOIN batchprocdesc ON batchprocdesc.processdefname=batchprocdef.processdefname   WHERE ( :batchProcDefNameUnKnownInd = '0'        AND LOWER(batchprocdef.processdefname)   LIKE :batchProcDefName        )      OR  ( :batchProcDefDpUnKnownInd = '0'          AND LOWER(batchprocdesc.PROCESSLONGNAME) LIKE :batchProcDefDisplayName )    OR  ( :batchProcDefDescriptionUnKnownInd = '0' AND LOWER(batchprocdesc.DESCRIPTION)     LIKE :batchProcDefDescription ) ;">
      <parameter name="curam.util.internal.batch.struct.BatchProcSearchKey">
        <attribute name="batchProcDefName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="batchProcDefDisplayName" ddltype="SVR_STRING&lt;300&gt;"/>
        <attribute name="batchProcDefDescription" ddltype="SVR_STRING&lt;2000&gt;"/>
        <attribute name="localeId" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="batchProcDefNameUnKnownInd" ddltype="SVR_CHAR"/>
        <attribute name="batchProcDefDpUnKnownInd" ddltype="SVR_CHAR"/>
        <attribute name="batchProcDefDescriptionUnKnownInd" ddltype="SVR_CHAR"/>
        <attribute name="defaultLocale" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.batch.struct.BatchProcDefDetails">
        <attribute name="batchProcessDefinition" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="batchProcessDefDisplayName" ddltype="SVR_STRING&lt;300&gt;"/>
        <attribute name="batchProcessDefDescription" ddltype="SVR_STRING&lt;2000&gt;"/>
        <attribute name="batchType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="BatchProcDef" operation="readProcessByNameOrDescTranslation" plainsql="SELECT  batchprocdef.processdefname,   BatchProcDescTranslation.PROCESSLONGNAME , BatchProcDescTranslation.DESCRIPTION, '', BatchProcDescTranslation.LOCALEIDENTIFIER   INTO :batchProcessDefinition, :batchProcessDefDisplayName, :batchProcessDefDescription, :batchType, :localeIdentifier   FROM batchprocdef   LEFT OUTER JOIN BatchProcDescTranslation ON BatchProcDescTranslation.processdefname=batchprocdef.processdefname     WHERE ((:batchProcDefNameUnKnownInd = '0'        AND LOWER(batchprocdef.processdefname) like :batchProcDefName )         OR  (:batchProcDefDpUnKnownInd = '0'          AND LOWER(BatchProcDescTranslation.PROCESSLONGNAME) LIKE :batchProcDefDisplayName )       OR  (:batchProcDefDescriptionUnKnownInd = '0' AND LOWER(BatchProcDescTranslation.DESCRIPTION) LIKE :batchProcDefDescription ))  AND (BatchProcDescTranslation.LOCALEIDENTIFIER = :localeId OR BatchProcDescTranslation.LOCALEIDENTIFIER = :defaultLocale);  ">
      <parameter name="curam.util.internal.batch.struct.BatchProcSearchKey">
        <attribute name="batchProcDefName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="batchProcDefDisplayName" ddltype="SVR_STRING&lt;300&gt;"/>
        <attribute name="batchProcDefDescription" ddltype="SVR_STRING&lt;2000&gt;"/>
        <attribute name="localeId" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="batchProcDefNameUnKnownInd" ddltype="SVR_CHAR"/>
        <attribute name="batchProcDefDpUnKnownInd" ddltype="SVR_CHAR"/>
        <attribute name="batchProcDefDescriptionUnKnownInd" ddltype="SVR_CHAR"/>
        <attribute name="defaultLocale" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.batch.struct.BatchProcDefDetails">
        <attribute name="batchProcessDefinition" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="batchProcessDefDisplayName" ddltype="SVR_STRING&lt;300&gt;"/>
        <attribute name="batchProcessDefDescription" ddltype="SVR_STRING&lt;2000&gt;"/>
        <attribute name="batchType" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="CTDisplayName" operation="countTextWithLocale" plainsql="SELECT COUNT(*) INTO :count FROM CTDisplayName WHERE UPPER(TEXT) = :text AND localeIdentifier = :localeIdentifier">
      <parameter name="curam.util.internal.codetable.struct.CodeTableDisplayNameKeyStruct2">
        <attribute name="text" ddltype="SVR_STRING&lt;512&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CTCountStruct">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CTDisplayName" operation="readAllDisplayNamesByLocale" plainsql="SELECT CTD.tableName, CTD.text, CTD.localeIdentifier INTO :tableName, :text, :localeIdentifier FROM CodeTableHeader CTH, CTDisplayName CTD WHERE CTH.tableName = CTD.tableName and localeIdentifier=:languageCountry UNION   SELECT CTD1.tableName, CTD1.text, CTD1.localeIdentifier FROM CodeTableHeader CTH1, CTDisplayName CTD1 WHERE CTH1.tableName = CTD1.tableName and localeIdentifier=:language and CTD1.tableName NOT IN (select CTD2.tableName from CodeTableHeader CTH2, CTDisplayName CTD2 where CTH2.tableName = CTD2.tableName and CTD2.localeIdentifier = :languageCountry) ">
      <parameter name="curam.util.internal.codetable.struct.CTDisplayNameLocalesKey">
        <attribute name="language" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="languageCountry" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CTDisplayNameDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="text" ddltype="SVR_STRING&lt;512&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableHeader" operation="searchByCodeTableDisplayName" plainsql="select codetableheader.tableName, CTDisplayname.text,CTDisplayname.localeIdentifier,parentCodeTable,codetableheader.defaultcode,  codetableheader.versionno, codetableheader.lastwritten into :tablename, :text, :localeCode, :parentCodeTable, :defaultCode , :versionNo,:timestamp from codetableheader , CTDisplayname where codetableheader.tablename = CTDisplayname.tablename and (UPPER(CTDisplayname.TABLENAME) like :tablename or UPPER(text) like :displayName) AND ( LOCALEIDENTIFIER = :userLocale or LOCALEIDENTIFIER = :fallbackLocale or LOCALEIDENTIFIER = :defaultLocale) ORDER BY ctdisplayname.TEXT ">
      <parameter name="curam.util.internal.codetable.struct.CTHeaderDisplayNameLocaleKey">
        <attribute name="userLocale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="defaultLocale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="tablename" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="displayName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="fallbackLocale" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CTHDisplayNameDetails">
        <attribute name="tablename" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="timestamp" ddltype="SVR_DATETIME"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
        <attribute name="parentCodeTable" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="defaultCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="localeCode" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="text" ddltype="SVR_STRING&lt;512&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableHeader" operation="joinCTHeaderCTItem" plainsql="select CodeTableHeader.tableName, timeEntered, defaultCode, code, description  into :tableName, :timestamp , :defaultCode, :code,  :description   from CodeTableHeader, CodeTableItem where   CodeTableHeader.tableName =  CodeTableItem.tableName order by CodeTableHeader.tableName, code ;">
      <returntype name="curam.util.internal.codetable.struct.joinCTHeaderCTItemDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="timestamp" ddltype="SVR_DATETIME"/>
        <attribute name="defaultCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableHeader" operation="searchByCodeTableName" plainsql="select tableName, defaultCode, timeEntered into :tableName, :defaultCode, :timestamp from codetableheader where UPPER(TABLENAME) like :tableName order by tableName">
      <parameter name="curam.util.internal.codetable.struct.CodeTableName">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CodeTableNameStampDefaultCode">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="timestamp" ddltype="SVR_DATETIME"/>
        <attribute name="defaultCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="displayNameId" ddltype="SVR_STRING&lt;25&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableHeader" operation="readByLocaleWithFallback" plainsql="select codetableheader.tablename, ctdisplayname.localeidentifier , ctdisplayname.text into :tablename,  :localeCode, :text from codetableheader left outer join ctdisplayname on codetableheader.tablename = ctdisplayname.tablename and (localeidentifier = :userLocale or localeidentifier = :fallbackLocale );">
      <parameter name="curam.util.internal.codetable.struct.CTLocaleKey">
        <attribute name="userLocale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="fallbackLocale" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CTHeaderDisplayNameDtls">
        <attribute name="tablename" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="localeCode" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="text" ddltype="SVR_STRING&lt;512&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableHeader" operation="readHeaderDetailsAndDisplayName" plainsql="select codetableheader.tablename, codetableheader.defaultcode, ctdisplayname.text, codetableheader.parentcodetable   into :tableName, :defaultCode, :displayName, :parentCodeTableName   from codetableheader   left outer join ctdisplayname    on codetableheader.tablename=ctdisplayname.tablename and ctdisplayname.localeidentifier=:localeIdentifier  where codetableheader.tablename=:tableName ">
      <parameter name="curam.util.internal.codetable.struct.CodeTableHeaderAndDisplayDtlsKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.administration.struct.CodeTableInHierarchyDetails">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="displayName" ddltype="SVR_STRING&lt;512&gt;"/>
        <attribute name="defaultCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="parentCodeTableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="parentDisplay" ddltype="SVR_STRING&lt;512&gt;"/>
        <attribute name="childCodeTableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="childDisplay" ddltype="SVR_STRING&lt;512&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableHeader" operation="readChildCodeTableAndDisplayName" plainsql="select codetableheader.tablename, codetableheader.defaultcode, ctdisplayname.text, codetableheader.parentcodetable   into :tableName, :defaultCode, :displayName, :parentCodeTableName   from codetableheader   left outer join ctdisplayname    on codetableheader.tablename=ctdisplayname.tablename and ctdisplayname.localeidentifier=:localeIdentifier  where codetableheader.parentcodetable=:parentCodeTable ">
      <parameter name="curam.util.internal.codetable.struct.ChildCTHeaderAndDisplayKey">
        <attribute name="parentCodeTable" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.administration.struct.CodeTableInHierarchyDetails">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="displayName" ddltype="SVR_STRING&lt;512&gt;"/>
        <attribute name="defaultCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="parentCodeTableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="parentDisplay" ddltype="SVR_STRING&lt;512&gt;"/>
        <attribute name="childCodeTableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="childDisplay" ddltype="SVR_STRING&lt;512&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableHeader" operation="readCodetablesExcludingTablesInHierarchy" plainsql="select codetableheader.tablename, codetableheader.timeentered, codetableheader.defaultcode, codetableheader.parentcodetable, codetableheader.versionno into :tableName, :timeEntered, :defaultCode, :parentCodetable, :versionNo  from codetableheader where codetableheader.parentcodetable is null and codetableheader.tablename not in (select codetablehierarchy.codetable from codetablehierarchy union select codetableheader.parentcodetable from codetableheader where codetableheader.parentcodetable is not null)">
      <returntype name="curam.util.internal.codetable.struct.CodeTableHeaderDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="timeEntered" ddltype="SVR_DATETIME"/>
        <attribute name="defaultCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="parentCodetable" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="countDescriptionsOnTable" plainsql="SELECT COUNT(*) INTO :count FROM CODETABLEITEM WHERE (TABLENAME = :tableName AND DESCRIPTION = :description AND ISENABLED = '1' AND LOCALEIDENTIFIER=:localeIdentifier AND (PARENTCODE IS NULL OR PARENTCODE=''))">
      <parameter name="curam.util.internal.codetable.struct.CTItemDescriptionAndCodeKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CTCountStruct">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="countDescriptionsWithDifferentCodeOnTable" plainsql="SELECT COUNT(*) INTO :count FROM CODETABLEITEM WHERE (TABLENAME = :tableName AND DESCRIPTION = :description AND CODE &lt;&gt; :code AND ISENABLED = '1')">
      <parameter name="curam.util.internal.codetable.struct.CTItemDescriptionAndCodeKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CTCountStruct">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="countCodeTableItems" plainsql="SELECT COUNT(*) INTO :count FROM CODETABLEITEM WHERE TABLENAME = :tableName AND CODE = :code">
      <parameter name="curam.util.internal.codetable.struct.CodeTableItemWithoutLanguageKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CTCountStruct">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="readChildrenOneLocale" plainsql="TABLENAME = :tableName AND PARENTCODE = :code AND LOCALEIDENTIFIER = :localeIdentifier" wheresql="TABLENAME = :tableName AND PARENTCODE = :code AND LOCALEIDENTIFIER = :localeIdentifier" orderbysql="sortOrder">
      <parameter name="curam.util.internal.codetable.struct.CodeTableItemKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CodeTableItemDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="annotation" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="isEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="sortOrder" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="comments" ddltype="SVR_STRING&lt;4000&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="readUnlinkedCodes" plainsql="TABLENAME = :tableName AND (PARENTCODE = '' OR PARENTCODE IS NULL) AND LOCALEIDENTIFIER = :localeIdentifier" wheresql="TABLENAME = :tableName AND (PARENTCODE = '' OR PARENTCODE IS NULL) AND LOCALEIDENTIFIER = :localeIdentifier" orderbysql="sortOrder">
      <parameter name="curam.util.internal.codetable.struct.CodeTableItemKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CodeTableItemDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="annotation" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="isEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="sortOrder" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="comments" ddltype="SVR_STRING&lt;4000&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="readChildren" plainsql="TABLENAME = :tableName AND PARENTCODE = :code" wheresql="TABLENAME = :tableName AND PARENTCODE = :code">
      <parameter name="curam.util.internal.codetable.struct.CodeTableItemKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CodeTableItemDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="annotation" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="isEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="sortOrder" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="comments" ddltype="SVR_STRING&lt;4000&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="countDescriptionSameParentCodeOnTable" plainsql="SELECT COUNT(*) INTO :count FROM CODETABLEITEM C1 WHERE C1.TABLENAME= :tableName AND C1.DESCRIPTION = :description AND C1.PARENTCODE=:parentCode AND C1.LOCALEIDENTIFIER=:locale AND C1.ISENABLED='1' AND NOT (C1.TABLENAME=:tableName AND C1.LOCALEIDENTIFIER=:locale AND C1.CODE=:code)">
      <parameter name="curam.util.internal.codetable.struct.CTItemKeyWithParentCode">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="locale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CTCountStruct">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="countDescriptionSameParentCodeDifferentCode" plainsql="select count(*) into :count from codetableitem c1, codetableitem c2 where c1.description = :description and c1.tablename = :tableName and c1.isenabled='1' and c1.localeidentifier=:localeIdentifier AND ( c1.parentcode=c2.parentcode or (c1.parentcode is null and c2.parentcode is null) or (c1.parentcode ='' and c2.parentcode=''))  and c1.code &lt;&gt; c2.code and c1.code &lt;&gt; :code and c2.code = :code">
      <parameter name="curam.util.internal.codetable.struct.CTItemDescriptionAndCodeKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CTCountStruct">
        <attribute name="count" ddltype="SVR_INT64"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="readEnabled" plainsql="TABLENAME = :tableName AND ISENABLED = '1'" wheresql="TABLENAME = :tableName AND ISENABLED = '1'">
      <parameter name="curam.util.internal.codetable.struct.CodeTableHeaderKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CodeTableItemDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="annotation" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="isEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="sortOrder" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="comments" ddltype="SVR_STRING&lt;4000&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="readDisabled" plainsql="TABLENAME = :tableName AND ISENABLED ='0'" wheresql="TABLENAME = :tableName AND ISENABLED ='0'">
      <parameter name="curam.util.internal.codetable.struct.CodeTableHeaderKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CodeTableItemDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="annotation" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="isEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="sortOrder" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="comments" ddltype="SVR_STRING&lt;4000&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="listUnlinkedCodesExcludeLocale" plainsql="SELECT tableName, code, localeIdentifier, description, annotation, isEnabled, sortOrder, parentCode INTO :tableName, :code, :localeIdentifier,:description, :annotation, :isEnabled, :sortOrder, :parentCode FROM CODETABLEITEM WHERE tableName=:tableName and localeIdentifier=:localeIdentifier and  (parentCode = '' OR parentCode IS NULL) AND code NOT IN (SELECT code FROM CODETABLEITEM WHERE tableName=:tableName and localeIdentifier=:languageIdentifier AND (parentCode='' OR parentCode IS NULL)) order by sortOrder">
      <parameter name="curam.util.internal.codetable.struct.CodeTableItemWithLocaleAndLanguage">
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="languageIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CodeTableItemDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="annotation" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="isEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="sortOrder" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="comments" ddltype="SVR_STRING&lt;4000&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="readChildrenOneLocaleExcludeDuplicates" plainsql="select tableName, code,localeIdentifier,description,annotation,isEnabled,sortOrder,parentCode into :tableName, :code, :localeIdentifier, :description, :annotation, :isEnabled, :sortOrder, :parentCode from codetableitem where TABLENAME = :tableName AND PARENTCODE = :code AND LOCALEIDENTIFIER = :localeIdentifier and code not in (select code from codetableitem c2 where c2.tableName=:tableName and c2.localeidentifier=:languageIdentifier and parentCode=:code) order by sortOrder">
      <parameter name="curam.util.internal.codetable.struct.CodeTableItemKeyWithLanguage">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="languageIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CodeTableItemDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="annotation" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="isEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="sortOrder" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="comments" ddltype="SVR_STRING&lt;4000&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="readOneLocaleExcludeDuplicates" plainsql="SELECT tableName,code,localeIdentifier,description,annotation,isEnabled,sortOrder,parentCode INTO :tableName, :code, :localeIdentifier, :description,:annotation, :isEnabled, :sortOrder, :parentCode FROM CODETABLEITEM WHERE tableName= :tableName AND localeIdentifier=:localeIdentifier AND code not in (select code from codetableitem c2 where c2.tableName=:tableName and c2.localeidentifier=:languageIdentifier) order by sortOrder">
      <parameter name="curam.util.internal.codetable.struct.CodeTableItemKeyWithLanguage">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="languageIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CodeTableItemDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="annotation" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="isEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="sortOrder" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="comments" ddltype="SVR_STRING&lt;4000&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="searchByCodeTableItemDescription" plainsql="SELECT tableName,code,localeIdentifier,description,annotation,isEnabled,sortOrder,parentCode INTO :tableName, :code, :localeIdentifier, :description,:annotation, :isEnabled, :sortOrder, :parentCode FROM CODETABLEITEM WHERE UPPER(DESCRIPTION) like :description order by description">
      <parameter name="curam.util.internal.codetable.struct.CTItemDescriptionKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CTItemSearch">
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="isEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="sortOrder" ddltype="SVR_INT32"/>
        <attribute name="annotation" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="CodeTableItem" operation="readCodeByFallbackLocale" plainsql="select tableName, code,localeIdentifier,description,annotation,isEnabled,sortOrder,parentCode into :tableName, :code, :localeIdentifier, :description, :annotation, :isEnabled, :sortOrder, :parentCode from codetableitem where TABLENAME = :tableName AND CODE = :code AND ( LOCALEIDENTIFIER = :userLocale or LOCALEIDENTIFIER = :defaultLocale or LOCALEIDENTIFIER = :fallbackLocale) order by sortOrder">
      <parameter name="curam.util.internal.codetable.struct.CTItemDefaultCodeSearchKey">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="fallbackLocale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="userLocale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="defaultLocale" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.codetable.struct.CodeTableItemDtls">
        <attribute name="tableName" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="code" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="annotation" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="isEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="sortOrder" ddltype="SVR_INT32"/>
        <attribute name="localeIdentifier" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="parentCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="comments" ddltype="SVR_STRING&lt;4000&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="DPErrorInformation" operation="searchDPErrorInformation" plainsql="SELECT instDataID, processName, invocationTime, status   INTO :instDataID, :processName, :invocationTime, :status   FROM DPErrorInformation   WHERE (invocationTime &gt;= :startDate OR :startDate IS NULL)  AND (invocationTime &lt;= :endDate OR :endDate IS NULL)  AND (processName = :processName OR :processName IS NULL)">
      <parameter name="curam.util.administration.struct.DPErrorInformationSearchKey">
        <attribute name="processName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="startDate" ddltype="SVR_DATETIME"/>
        <attribute name="endDate" ddltype="SVR_DATETIME"/>
      </parameter>
      <returntype name="curam.util.administration.struct.DPErrorInformationDetails">
        <attribute name="instDataID" ddltype="SVR_INT64"/>
        <attribute name="processName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="invocationTime" ddltype="SVR_DATETIME"/>
        <attribute name="status" ddltype="SVR_STRING&lt;30&gt;"/>
        <attribute name="resolvedTime" ddltype="SVR_DATETIME"/>
      </returntype>
    </sqlj>
    <sqlj name="DPErrorInformation" operation="countDPErrorInformation" plainsql="SELECT COUNT (*)   INTO :numberOfRecords  FROM DPErrorInformation   WHERE (invocationTime &gt;= :startDate OR :startDate IS NULL)  AND (invocationTime &lt;= :endDate OR :endDate IS NULL)  AND (processName = :processName OR :processName IS NULL)">
      <parameter name="curam.util.administration.struct.DPErrorInformationSearchKey">
        <attribute name="processName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="startDate" ddltype="SVR_DATETIME"/>
        <attribute name="endDate" ddltype="SVR_DATETIME"/>
      </parameter>
      <returntype name="curam.util.administration.struct.ProcessInstanceCount">
        <attribute name="numberOfRecords" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="DPErrorInformation" operation="searchResolvedDPErrorInformation" plainsql="SELECT instDataID, processName, invocationTime, status     INTO :instDataID, :processName, :invocationTime, :status  FROM DPErrorInformation   WHERE (invocationTime &gt;= :startDate OR :startDate IS NULL)  AND (invocationTime &lt;= :endDate OR :endDate IS NULL)  AND (processName = :processName OR :processName IS NULL)  AND (status= 'MS2' OR status ='' OR status IS NULL)  ">
      <parameter name="curam.util.administration.struct.DPErrorInformationSearchByStatusKey">
        <attribute name="processName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="startDate" ddltype="SVR_DATETIME"/>
        <attribute name="endDate" ddltype="SVR_DATETIME"/>
        <attribute name="status" ddltype="SVR_STRING&lt;30&gt;"/>
      </parameter>
      <returntype name="curam.util.administration.struct.DPErrorInformationDetails">
        <attribute name="instDataID" ddltype="SVR_INT64"/>
        <attribute name="processName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="invocationTime" ddltype="SVR_DATETIME"/>
        <attribute name="status" ddltype="SVR_STRING&lt;30&gt;"/>
        <attribute name="resolvedTime" ddltype="SVR_DATETIME"/>
      </returntype>
    </sqlj>
    <sqlj name="DPErrorInformation" operation="countDPErrorInformationByStatus" plainsql="SELECT COUNT (*)   INTO :numberOfRecords  FROM DPErrorInformation   WHERE (invocationTime &gt;= :startDate OR :startDate IS NULL)  AND (invocationTime &lt;= :endDate OR :endDate IS NULL)  AND (processName = :processName OR :processName IS NULL)  AND (status = :status OR :status IS NULL)">
      <parameter name="curam.util.administration.struct.DPErrorInformationSearchByStatusKey">
        <attribute name="processName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="startDate" ddltype="SVR_DATETIME"/>
        <attribute name="endDate" ddltype="SVR_DATETIME"/>
        <attribute name="status" ddltype="SVR_STRING&lt;30&gt;"/>
      </parameter>
      <returntype name="curam.util.administration.struct.ProcessInstanceCount">
        <attribute name="numberOfRecords" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="DPErrorInformation" operation="searchUnresolvedDPErrorInformation" plainsql="SELECT instDataID, processName, invocationTime, status     INTO :instDataID, :processName, :invocationTime, :status  FROM DPErrorInformation   WHERE (invocationTime &gt;= :startDate OR :startDate IS NULL)  AND (invocationTime &lt;= :endDate OR :endDate IS NULL)  AND (processName = :processName OR :processName IS NULL)  AND status = 'MS1'  ">
      <parameter name="curam.util.administration.struct.DPErrorInformationSearchByStatusKey">
        <attribute name="processName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="startDate" ddltype="SVR_DATETIME"/>
        <attribute name="endDate" ddltype="SVR_DATETIME"/>
        <attribute name="status" ddltype="SVR_STRING&lt;30&gt;"/>
      </parameter>
      <returntype name="curam.util.administration.struct.DPErrorInformationDetails">
        <attribute name="instDataID" ddltype="SVR_INT64"/>
        <attribute name="processName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="invocationTime" ddltype="SVR_DATETIME"/>
        <attribute name="status" ddltype="SVR_STRING&lt;30&gt;"/>
        <attribute name="resolvedTime" ddltype="SVR_DATETIME"/>
      </returntype>
    </sqlj>
    <sqlj name="EventType" operation="modifyByEventClass" plainsql="UPDATE EventType SET EventClass=:modifiedEventClass WHERE EventClass=:originalEventClass">
      <parameter name="curam.util.administration.struct.EventClassModifyDetails">
        <attribute name="originalEventClass" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="modifiedEventClass" ddltype="SVR_STRING&lt;100&gt;"/>
      </parameter>
    </sqlj>
    <sqlj name="ExtendedUsersInfo" operation="countMatchingLoginID" plainsql="SELECT COUNT(LOGINID) INTO :count FROM EXTENDEDUSERSINFO INNER JOIN USERS ON EXTENDEDUSERSINFO.USERNAME = USERS.USERNAME WHERE LOGINID = :loginID AND ACCOUNTENABLED = '1'">
      <parameter name="curam.util.administration.struct.ExtendedUsersInfoLoginID">
        <attribute name="loginID" ddltype="SVR_STRING&lt;320&gt;"/>
      </parameter>
      <returntype name="curam.util.administration.struct.MatchLoginIDCount">
        <attribute name="count" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="FieldLevelSecurity" operation="getAllSecuredFields" plainsql="SELECT FieldLevelSecurity.operationName, fieldName, sidName into :operationName, :fieldName, :sidName FROM FieldLevelSecurity WHERE FieldLevelSecurity.sidName IS NOT NULL ORDER BY operationName, fieldName;">
      <returntype name="curam.util.internal.security.struct.FieldLevelSecurityDtls">
        <attribute name="operationName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="fieldName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="FieldLevelSecurity" operation="getAllOperations" plainsql="SELECT FieldLevelSecurity.operationName into :operationName FROM FieldLevelSecurity ORDER BY operationName;">
      <returntype name="curam.util.administration.struct.OperationNameWrapperStruct">
        <attribute name="operationName" ddltype="SVR_STRING&lt;100&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="FunctionIdentifier" operation="joinFidSecurityFidSid" plainsql="SELECT     fidName INTO     :fidName FROM     FunctionIdentifier WHERE     NOT EXISTS (         SELECT SecurityFidSid.fidName         FROM SecurityFidSid         WHERE SecurityFidSid.fidName = FunctionIdentifier.fidName) ORDER BY fidName;">
      <returntype name="curam.util.internal.security.struct.FidWrapperStruct">
        <attribute name="fidName" ddltype="SVR_STRING&lt;100&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="PropDescription" operation="countDescriptions" plainsql="select count(*) into :value from PROPDESCRIPTION where :propertyID = propertyID;">
      <parameter name="curam.util.internal.properties.struct.PropertiesKey">
        <attribute name="propertyID" ddltype="SVR_INT64"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.LongWrapperStruct">
        <attribute name="value" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="PropDescription" operation="countOfSameDisplayNamesPerLocale" plainsql="select count(*) into :value from PROPDESCRIPTION where   PROPDESCRIPTION.DISPLAYNAME = :displayName   AND PROPDESCRIPTION.LOCALEIDENTIFIER = :locale">
      <parameter name="curam.util.internal.properties.struct.CountOfSameDisplayNamesPerLocaleKey">
        <attribute name="displayName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="locale" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.properties.struct.CountOfSameDisplayNamesPerLocaleDetails">
        <attribute name="value" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="Properties" operation="readAllByLocaleOrCategory" plainsql="SELECT Properties.propertyID, category, displayName, value, localeIdentifier INTO :propertyID, :category, :displayName, :value, :locale FROM Properties, PropDescription WHERE Properties.propertyID = PropDescription.propertyID AND (localeIdentifier = :locale or :localeUnknownInd = '1') AND (category = :category or :categoryUnknownInd = '1') ORDER by category;">
      <parameter name="curam.util.internal.properties.struct.PropertyLocaleKey">
        <attribute name="locale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="category" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="localeUnknownInd" ddltype="SVR_BOOLEAN"/>
        <attribute name="categoryUnknownInd" ddltype="SVR_BOOLEAN"/>
      </parameter>
      <returntype name="curam.util.administration.struct.PropertyAndDescriptionDetails">
        <attribute name="propertyID" ddltype="SVR_INT64"/>
        <attribute name="category" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="displayName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="value" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="locale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
        <attribute name="description" ddltype="SVR_STRING&lt;2000&gt;"/>
        <attribute name="defaultValue" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="dynamic" ddltype="SVR_BOOLEAN"/>
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Properties" operation="resetAllProperties" plainsql="UPDATE PROPERTIES SET VALUE = DEFAULTVALUE, LASTWRITTEN = :lastWritten;">
      <parameter name="curam.util.internal.properties.struct.ResetPropertiesKey">
        <attribute name="lastWritten" ddltype="SVR_DATETIME"/>
      </parameter>
    </sqlj>
    <sqlj name="Properties" operation="countOccurrencesOfName" plainsql="select count(*) into :value from Properties where :name = Properties.name;">
      <parameter name="curam.util.internal.properties.struct.CountOccurrencesOfNameKey">
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.properties.struct.CountOccurrencesOfNameDetails">
        <attribute name="value" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="Properties" operation="readNameAndValueList" plainsql="select name, value into :name, :value from Properties;">
      <returntype name="curam.util.internal.properties.struct.PropertyNameAndValue">
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="value" ddltype="SVR_STRING&lt;500&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Properties" operation="readAllByNameOrDescriptionOrCategory" plainsql="SELECT Properties.propertyID, category, displayName, value, localeIdentifier, description, Properties.dynamic, Properties.defaultValue, Properties.name  INTO :propertyID, :category, :displayName, :value, :locale, :description, :dynamic, :defaultValue, :name  FROM Properties, PropDescription  WHERE  Properties.propertyID = PropDescription.propertyID  AND ( lower(localeIdentifier) = :locale or (lower(localeIdentifier) = :userLocale or :localeUnknownInd = '1') or lower(localeIdentifier) = :fallbackLocale  )  AND (category = :category or :categoryUnknownInd = '1')  AND ((lower(name) like :name or :nameUnknownInd = '1')  OR (lower(PropDescription.displayname) like :name or :nameUnknownInd = '1')  OR (lower(PropDescription.description) like :description or :descriptionUnknownInd = '1'))  ORDER BY PROPERTIES.NAME asc , localeidentifier desc;">
      <parameter name="curam.util.internal.properties.struct.PropertySearchKey">
        <attribute name="category" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="fallbackLocale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;2000&gt;"/>
        <attribute name="categoryUnknownInd" ddltype="SVR_BOOLEAN"/>
        <attribute name="localeUnknownInd" ddltype="SVR_BOOLEAN"/>
        <attribute name="locale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="nameUnknownInd" ddltype="SVR_BOOLEAN"/>
        <attribute name="descriptionUnknownInd" ddltype="SVR_BOOLEAN"/>
        <attribute name="userLocale" ddltype="SVR_STRING&lt;5&gt;"/>
      </parameter>
      <returntype name="curam.util.administration.struct.PropertyAndDescriptionDetails">
        <attribute name="propertyID" ddltype="SVR_INT64"/>
        <attribute name="category" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="displayName" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="value" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="locale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
        <attribute name="description" ddltype="SVR_STRING&lt;2000&gt;"/>
        <attribute name="defaultValue" ddltype="SVR_STRING&lt;500&gt;"/>
        <attribute name="dynamic" ddltype="SVR_BOOLEAN"/>
        <attribute name="name" ddltype="SVR_STRING&lt;254&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityFidSid" operation="joinFidSidFunctionIdentifier" plainsql=" SELECT SecurityFidSid.sidName, SecurityFidSid.fidName, fidEnabled, projectPackage, codePackage INTO :sidName, :fidName, :fidEnabled, :projectPackage, :codePackage FROM SecurityFidSid, FunctionIdentifier WHERE SecurityFidSid.fidName = FunctionIdentifier.fidName ORDER BY SecurityFidSid.fidName; ">
      <returntype name="curam.util.internal.security.struct.FidSidFunctionIdentifierDtls">
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="fidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="fidEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="codePackage" ddltype="SVR_STRING&lt;96&gt;"/>
        <attribute name="projectPackage" ddltype="SVR_STRING&lt;32&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityGroup" operation="readGroupsNotInRole" plainsql="select groupName, description, versionNo into :groupName, :description, :versionNo from SecurityGroup where not exists ( select groupName from SecurityRoleGroup where SecurityRoleGroup.roleName = :roleName and SecurityGroup.groupName = SecurityRoleGroup.groupName ) ORDER BY groupName; ">
      <parameter name="curam.util.internal.security.struct.RoleNameWrapperStruct">
        <attribute name="roleName" ddltype="SVR_STRING&lt;50&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.SecurityGroupDtls">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityGroup" operation="readGroupsInRole" plainsql="select SecurityRoleGroup.groupName, description, versionNo into :groupName, :description, :versionNo from SecurityGroup, SecurityRoleGroup where SecurityGroup.groupName = SecurityRoleGroup.groupName and SecurityRoleGroup.roleName = :roleName ORDER BY SecurityRoleGroup.groupName ; ">
      <parameter name="curam.util.internal.security.struct.RoleNameWrapperStruct">
        <attribute name="roleName" ddltype="SVR_STRING&lt;50&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.SecurityGroupDtls">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityGroupSid" operation="getNonFunctionSIDsForGroup" plainsql="SELECT securitygroupsid.groupname, SecurityIdentifier.sidName, sidType   INTO  :groupName,  :sidName, :sidType  FROM SecurityGroupSid, SecurityIdentifier  WHERE SECURITYGROUPSID.GROUPNAME = :groupName  AND SecurityIdentifier.sidName = SecurityGroupSID.sidName    AND SecurityIdentifier.sidType &lt;&gt; 'FUNCTION'   ORDER BY securitygroupsid.groupname, SecurityIdentifier.sidName;">
      <parameter name="curam.util.internal.security.struct.SecurityGroupSidKey">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.ExtendedGroupSidDetails">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="sidType" ddltype="SVR_STRING&lt;16&gt;"/>
        <attribute name="codePackage" ddltype="SVR_STRING&lt;96&gt;"/>
        <attribute name="projectPackage" ddltype="SVR_STRING&lt;32&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityGroupSid" operation="getFunctionSIDsForGroup" plainsql="SELECT   SecurityIdentifier.sidName  INTO  :sidName   FROM SecurityGroupSid, SecurityIdentifier  WHERE SECURITYGROUPSID.GROUPNAME = :groupName  AND SecurityIdentifier.sidName = SecurityGroupSID.sidName  AND SecurityIdentifier.sidType = 'FUNCTION' ;">
      <parameter name="curam.util.internal.security.struct.SecurityGroupSidKey">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.OptimizedExtendedGroupSidDetails">
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityGroupSid" operation="getUnlinkedFunctionSIDsForGroup" plainsql="SELECT securitygroupsid.groupname, SECURITYIDENTIFIER.SIDNAME, SIDTYPE   INTO :groupName, :sidName, :sidType    FROM SECURITYGROUPSID, SECURITYIDENTIFIER   WHERE  SECURITYGROUPSID.GROUPNAME = :groupName   AND SECURITYIDENTIFIER.SIDNAME= SECURITYGROUPSID.SIDNAME     AND SIDTYPE= 'FUNCTION'   AND ( ( NOT EXISTS ( SELECT SIDNAME FROM SECURITYFIDSID WHERE SECURITYFIDSID.SIDNAME =    SECURITYIDENTIFIER.SIDNAME ) )    OR EXISTS ( ( SELECT SFS.SIDNAME FROM SECURITYFIDSID SFS   WHERE SFS.SIDNAME=SECURITYIDENTIFIER.SIDNAME AND NOT EXISTS ( SELECT FI.FIDNAME FROM FUNCTIONIDENTIFIER FI  WHERE FI.FIDNAME = SFS.FIDNAME    ) ) ) );">
      <parameter name="curam.util.internal.security.struct.SecurityGroupSidKey">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.ExtendedGroupSidDetails">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="sidType" ddltype="SVR_STRING&lt;16&gt;"/>
        <attribute name="codePackage" ddltype="SVR_STRING&lt;96&gt;"/>
        <attribute name="projectPackage" ddltype="SVR_STRING&lt;32&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityGroupSid" operation="getUnlinkedFunctionSIDsForGroupOptim" plainsql="SELECT SECURITYIDENTIFIER.SIDNAME  INTO :sidName  FROM SECURITYGROUPSID, SECURITYIDENTIFIER  WHERE SECURITYGROUPSID.GROUPNAME = :groupName  AND SECURITYIDENTIFIER.SIDNAME= SECURITYGROUPSID.SIDNAME  AND SIDTYPE= 'FUNCTION'  AND ( EXISTS ( ( SELECT SFS.SIDNAME FROM SECURITYFIDSID SFS  WHERE SFS.SIDNAME=SECURITYIDENTIFIER.SIDNAME AND NOT EXISTS ( SELECT FI.FIDNAME FROM FUNCTIONIDENTIFIER FI WHERE FI.FIDNAME = SFS.FIDNAME  ) ) ) );">
      <parameter name="curam.util.internal.security.struct.SecurityGroupSidKey">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.ExtendedGroupSidDetails">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="sidType" ddltype="SVR_STRING&lt;16&gt;"/>
        <attribute name="codePackage" ddltype="SVR_STRING&lt;96&gt;"/>
        <attribute name="projectPackage" ddltype="SVR_STRING&lt;32&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityIdentifier" operation="readSidsNotInGroupSid" plainsql="select sidName, sidType, description, versionNo into :sidName, :sidType, :description, :versionNo from SecurityIdentifier where not exists ( select sidName from SecurityGroupSid where SecurityGroupSid.groupName = :groupName and SecurityGroupSid.sidName = SecurityIdentifier.sidName ) ORDER BY sidName;">
      <parameter name="curam.util.internal.security.struct.SecurityGroupKey">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.SidDetailsWrapperStruct">
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="sidType" ddltype="SVR_STRING&lt;16&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityIdentifier" operation="readSidsInGroupSid" plainsql="select SecurityIdentifier.sidName, sidType, description, versionNo into :sidName, :sidType, :description, :versionNo from SecurityIdentifier, SecurityGroupSid where securityIdentifier.sidName = SecurityGroupSid.sidName and SecurityGroupSid.groupName = :groupName ORDER BY sidName">
      <parameter name="curam.util.internal.security.struct.SecurityGroupKey">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.SidDetailsWrapperStruct">
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="sidType" ddltype="SVR_STRING&lt;16&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityIdentifier" operation="readMatchSid" plainsql="SIDNAME Like :sidName" wheresql="SIDNAME Like :sidName">
      <parameter name="curam.util.internal.security.struct.SecurityIdentifierKey">
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.SecurityIdentifierDtls">
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="sidType" ddltype="SVR_STRING&lt;16&gt;"/>
        <attribute name="description" ddltype="SVR_STRING&lt;254&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityRole" operation="readRolesNotInGroup" plainsql="select roleName into :roleName from SecurityRole where not exists ( select roleName from SecurityRoleGroup where SecurityRoleGroup.groupName = :groupName AND SecurityRole.roleName = SecurityRoleGroup.roleName) order by roleName">
      <parameter name="curam.util.internal.security.struct.GroupNameWrapperStruct">
        <attribute name="groupName" ddltype="SVR_STRING&lt;50&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.RoleNameWrapperStruct">
        <attribute name="roleName" ddltype="SVR_STRING&lt;50&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityRole" operation="getRolesAndFunctionSIDs" plainsql="SELECT roleName, SecurityIdentifier.sidName, sidType, FunctionIdentifier.projectPackage, FunctionIdentifier.codePackage  INTO  :roleName,  :sidName, :sidType, :projectPackage, :codePackage  FROM SecurityRoleGroup, SecurityGroupSid, SecurityIdentifier, SecurityFidSid, FunctionIdentifier  WHERE SecurityRoleGroup.groupName =  SecurityGroupSid.groupName    AND SecurityIdentifier.sidName = SecurityGroupSID.sidName    AND SecurityIdentifier.sidType = 'FUNCTION'    AND SecurityFidSid.sidName = SecurityIdentifier.sidName    AND FunctionIdentifier.fidName = SecurityFidSid.fidName  ORDER BY roleName, SecurityIdentifier.sidName;">
      <returntype name="curam.util.internal.security.struct.ExtendedSidDetails">
        <attribute name="roleName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="sidType" ddltype="SVR_STRING&lt;16&gt;"/>
        <attribute name="codePackage" ddltype="SVR_STRING&lt;96&gt;"/>
        <attribute name="projectPackage" ddltype="SVR_STRING&lt;32&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityRole" operation="getRolesAndNonFunctionSIDs" plainsql=" SELECT roleName, SecurityIdentifier.sidName, sidType INTO  :roleName,  :sidName, :sidType FROM SecurityRoleGroup, SecurityGroupSid, SecurityIdentifier WHERE SecurityRoleGroup.groupName =  SecurityGroupSid.groupName   AND SecurityIdentifier.sidName = SecurityGroupSID.sidName   AND SecurityIdentifier.sidType &lt;&gt; 'FUNCTION' ORDER BY roleName, SecurityIdentifier.sidName;">
      <returntype name="curam.util.internal.security.struct.ExtendedSidDetails">
        <attribute name="roleName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="sidType" ddltype="SVR_STRING&lt;16&gt;"/>
        <attribute name="codePackage" ddltype="SVR_STRING&lt;96&gt;"/>
        <attribute name="projectPackage" ddltype="SVR_STRING&lt;32&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityRole" operation="getUnlinkedFunctionSIDs" plainsql="  SELECT ROLENAME, SECURITYIDENTIFIER.SIDNAME, SIDTYPE  INTO :sidName, :sidName, :sidType FROM SECURITYROLEGROUP, SECURITYGROUPSID, SECURITYIDENTIFIER  WHERE SECURITYROLEGROUP.GROUPNAME= SECURITYGROUPSID.GROUPNAME  AND SECURITYIDENTIFIER.SIDNAME= SECURITYGROUPSID.SIDNAME  AND SIDTYPE= 'FUNCTION' AND ( ( NOT EXISTS (  SELECT SIDNAME FROM SECURITYFIDSID  WHERE SECURITYFIDSID.SIDNAME = SECURITYIDENTIFIER.SIDNAME ) )  OR EXISTS (SELECT SFS.SIDNAME FROM SECURITYFIDSID SFS  WHERE SFS.SIDNAME = SECURITYIDENTIFIER.SIDNAME  AND NOT EXISTS (  SELECT FI.FIDNAME  FROM FUNCTIONIDENTIFIER FI  WHERE FI.FIDNAME = SFS.FIDNAME ) ) )  ">
      <returntype name="curam.util.internal.security.struct.ExtendedSidDetails">
        <attribute name="roleName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="sidName" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="sidType" ddltype="SVR_STRING&lt;16&gt;"/>
        <attribute name="codePackage" ddltype="SVR_STRING&lt;96&gt;"/>
        <attribute name="projectPackage" ddltype="SVR_STRING&lt;32&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="SecurityRole" operation="getNonUsersRoles" plainsql="SELECT ROLENAME INTO :roleName FROM SECURITYROLE WHERE ROLENAME NOT IN (SELECT ROLENAME FROM USERS);">
      <returntype name="curam.util.internal.security.struct.SecurityRoleDtls">
        <attribute name="roleName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="UserPreferenceInfo" operation="removeUnusedUserPreferences" plainsql="DELETE FROM userpreferenceinfo     WHERE userprefsetid NOT IN (      SELECT DISTINCT userprefsetid FROM users         WHERE userprefsetid &lt;&gt; ''         OR userprefsetid = 'DefaultPreferences');"/>
    <sqlj name="UserPreferenceInfo" operation="getAllUserPreferencesForUser" plainsql="SELECT USERPREFNAME, USERPREFXML INTO :userPrefName, :userPrefXML  FROM USERPREFERENCEINFO   WHERE USERPREFSETID = :userPrefSetId  OR   (USERPREFSETID = 'DefaultPreferences' AND USERPREFNAME NOT IN  (SELECT USERPREFNAME FROM USERPREFERENCEINFO  WHERE USERPREFSETID = :userPrefSetId ))  ORDER BY USERPREFNAME">
      <parameter name="curam.util.internal.userpreference.struct.UserPreferenceInfoReadMulti">
        <attribute name="userPrefSetId" ddltype="SVR_STRING&lt;30&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.userpreference.struct.UserPreferenceXML">
        <attribute name="userPrefName" ddltype="SVR_STRING&lt;150&gt;"/>
        <attribute name="userPrefXML" ddltype="SVR_STRING&lt;4000&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="UserPreferenceInfo" operation="getAllUserPrefNamesForPrefSetID" plainsql="SELECT USERPREFNAME INTO :userPrefName   FROM USERPREFERENCEINFO   WHERE USERPREFSETID = :userPrefSetId   OR   (USERPREFSETID = :defaultUserPrefSetId AND USERPREFNAME NOT IN    (SELECT USERPREFNAME FROM USERPREFERENCEINFO    WHERE USERPREFSETID = :userPrefSetId ))    ORDER BY USERPREFNAME">
      <parameter name="curam.util.internal.userpreference.struct.UserPreferenceSetIds">
        <attribute name="userPrefSetId" ddltype="SVR_STRING&lt;30&gt;"/>
        <attribute name="defaultUserPrefSetId" ddltype="SVR_STRING&lt;30&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.userpreference.struct.UserPrefName">
        <attribute name="userPrefName" ddltype="SVR_STRING&lt;150&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Users" operation="countOccurrencesOfRole" plainsql="select count(*) into :value from Users where  :roleName = Users.roleName;">
      <parameter name="curam.util.internal.security.struct.RoleNameWrapperStruct">
        <attribute name="roleName" ddltype="SVR_STRING&lt;50&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.LongWrapperStruct">
        <attribute name="value" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="Users" operation="readUserAndRoleNames" plainsql="select userName, roleName INTO :userName,:roleName FROM Users;">
      <returntype name="curam.util.internal.security.struct.UserAndRoleName">
        <attribute name="userName" ddltype="SVR_STRING&lt;64&gt;"/>
        <attribute name="roleName" ddltype="SVR_STRING&lt;50&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Users" operation="readCaseInsensitiveUser" plainsql="SELECT userName, roleName  INTO :userName,:roleName  FROM Users WHERE Users.upperUserName=:userName;">
      <parameter name="curam.util.internal.security.struct.UsersKey">
        <attribute name="userName" ddltype="SVR_STRING&lt;64&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.UsersDtls">
        <attribute name="userName" ddltype="SVR_STRING&lt;64&gt;"/>
        <attribute name="password" ddltype="SVR_STRING&lt;60&gt;"/>
        <attribute name="pwdChangeEveryXDay" ddltype="SVR_INT32"/>
        <attribute name="passwordChanged" ddltype="SVR_DATE"/>
        <attribute name="loginFailures" ddltype="SVR_INT32"/>
        <attribute name="roleName" ddltype="SVR_STRING&lt;50&gt;"/>
        <attribute name="applicationCode" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="accountEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="passwordExpiryDate" ddltype="SVR_DATE"/>
        <attribute name="lastSuccessLogin" ddltype="SVR_DATETIME"/>
        <attribute name="loginRestrictions" ddltype="SVR_BOOLEAN"/>
        <attribute name="loginTimeFrom" ddltype="SVR_DATETIME"/>
        <attribute name="loginTimeTo" ddltype="SVR_DATETIME"/>
        <attribute name="loginDaySun" ddltype="SVR_BOOLEAN"/>
        <attribute name="loginDayMon" ddltype="SVR_BOOLEAN"/>
        <attribute name="loginDayTues" ddltype="SVR_BOOLEAN"/>
        <attribute name="loginDayWed" ddltype="SVR_BOOLEAN"/>
        <attribute name="loginDayThurs" ddltype="SVR_BOOLEAN"/>
        <attribute name="loginDayFri" ddltype="SVR_BOOLEAN"/>
        <attribute name="loginDaySat" ddltype="SVR_BOOLEAN"/>
        <attribute name="pwdChangeAfterXLog" ddltype="SVR_INT32"/>
        <attribute name="logsSincePWDChange" ddltype="SVR_INT32"/>
        <attribute name="ctiEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="defaultLocale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="userPrefSetID" ddltype="SVR_STRING&lt;30&gt;"/>
        <attribute name="title" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="firstname" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="surname" ddltype="SVR_STRING&lt;30&gt;"/>
        <attribute name="upperUserName" ddltype="SVR_STRING&lt;64&gt;"/>
        <attribute name="versionNo" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="Users" operation="readUserByLoginID" plainsql="SELECT USERNAME INTO :userName  FROM USERS WHERE USERNAME IN (SELECT USERNAME FROM EXTENDEDUSERSINFO WHERE LOGINID = :loginID);">
      <parameter name="curam.util.internal.security.struct.LoginIDStruct">
        <attribute name="loginID" ddltype="SVR_STRING&lt;320&gt;"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.UserDetails">
        <attribute name="homePageID" ddltype="SVR_STRING&lt;60&gt;"/>
        <attribute name="rights" ddltype="SVR_STRING&lt;100&gt;"/>
        <attribute name="loginTimestamp" ddltype="SVR_DATETIME"/>
        <attribute name="ctiEnabled" ddltype="SVR_BOOLEAN"/>
        <attribute name="defaultLocale" ddltype="SVR_STRING&lt;5&gt;"/>
        <attribute name="applicationName" ddltype="SVR_STRING&lt;60&gt;"/>
        <attribute name="userName" ddltype="SVR_STRING&lt;64&gt;"/>
        <attribute name="firstname" ddltype="SVR_STRING&lt;25&gt;"/>
        <attribute name="surname" ddltype="SVR_STRING&lt;30&gt;"/>
        <attribute name="title" ddltype="SVR_STRING&lt;10&gt;"/>
        <attribute name="context" ddltype="SVR_STRING&lt;10&gt;"/>
      </returntype>
    </sqlj>
    <sqlj name="Users" operation="countUsers" plainsql="SELECT COUNT(Users.userName) INTO :value FROM Users;">
      <returntype name="curam.util.internal.security.struct.LongWrapperStruct">
        <attribute name="value" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
    <sqlj name="Users" operation="countByAccountEnabled" plainsql="select count(Users.userName) into :value from Users where  :accountEnabled = Users.accountEnabled;">
      <parameter name="curam.util.internal.security.struct.UserAccountEnabledDetails">
        <attribute name="accountEnabled" ddltype="SVR_BOOLEAN"/>
      </parameter>
      <returntype name="curam.util.internal.security.struct.LongWrapperStruct">
        <attribute name="value" ddltype="SVR_INT32"/>
      </returntype>
    </sqlj>
  </sqljentries>
</root>
