<?xml version="1.0" encoding="ISO-8859-1"?><entities>
<entity name="AppResource"><![CDATA[Contains application resources.]]>
<attribute fieldname="name" description="The name of the resource. This is independent of the locale and the file name and provides a logical name for a resource that is valid for all locales. For example, if resources representing the organization logo image are uploaded from the files &quot;images/en_US/logo.png&quot; and &quot;images/fr_CA/logo.png&quot; (perhaps because the text of the organization name appears in the logo and is translated to the appropriate language for each locale), then the resource name &quot;logo&quot; can be used for both resources and the &quot;locale&quot; field can indicate which image is appropriate for each locale."/>
<attribute fieldname="contentType" description="The content type (MIME type) for this resource. This identifies how the binary resource content should be interpreted. See the domain definition for more information."/>
<attribute fieldname="contentDisposition" description="The content disposition for this resource. At its most basic, this can be treated as the suggested file name for the resource if it is used as an attachment. This field may be left blank if it is not required, but it is recommended that it be set based on the original file name of the resource. See the domain definition for more information."/>
<attribute fieldname="content" description="The content for this resource. This is binary data. If the resource is a text resource, then the binary data will be interpreted according to the character set encoding defined as a paramter to the value of the &quot;contentType&quot; field, for example, &quot;text/plain; charset=us-ascii&quot;. If no encoding is specifed, UTF-8 encoding will be assumed. See the domain definition for more information."/>
<attribute fieldname="internal" description="Indicates if resource is internal."/>
<attribute fieldname="resourceID" key="true" description="The resource ID."/>
<attribute fieldname="description" description="Description of the resource."/>
<attribute fieldname="category" description="Category of the resource."/>
<attribute fieldname="localeIdentifier" description="The locale of the resource. Only resources with locales for which the application has been configured, or that act as fall-back locales for the application's locales, will be used. If the locale is empty, the resource may be used as a fallback if a resource for a specific locale cannot be found.&#10;&#10;For example, if the resource named &quot;logo&quot; is requested for the &quot;en_US&quot; locale is requested, but no resource with that exact key exists, then the &quot;logo&quot; and &quot;en&quot; should be checked, followed by &quot;logo&quot; and &quot;&quot; (an empty locale) if that cannot be found."/>
</entity>
<entity name="AuditTrail"><![CDATA[@curam.logicalname Audit Trail
@curam.definition  An audit of the read or write of a Curam database table.
@curam.description
<P>Curam supports the ability to record audit information about the invocation of any entity operation (both database reads and writes).  This mechanism is known as 'table-level auditing'.</P>
<P>When an entity operation is audited, certain information is captured about the invocation of the operation, which includes information about the selection criteria used and may also include before and after images of the data.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney opens a client screen which displays information about the {@curam.entity core.Person Person} John Smith (retrieved from the {@curam.entity core.Person Person} table).  Curam audits the Person.read operation and stores:</P>
<UL>
<LI>the date and time of the operation;</LI>
<LI>Ronan Rooney's user name;</LI>
<LI>the fact that the table read was the {@curam.entity core.Person Person} table;</LI>
<LI>the FID of the server method that Ronan Rooney's client screen called;</LI>
<LI>the fact that the transaction type was online;</LI>
<LI>the fact that the operation type was a read; and</LI>
<LI>the concernRoleID of John Smith (which was the selection criteria used to perform the read).</LI>
</UL>
<P>{@curam.entity core.Users User} Ronan Rooney then changes John Smith's date of birth from 1st January 1970 to 31st December 1969, and clicks on a button to store the updated details on the {@curam.entity core.Person Person} table.  Curam audits the Person.modify operation and stores:</P>
<UL>
<LI>the date and time of the operation;</LI>
<LI>Ronan Rooney's user name;</LI>
<LI>the fact that the table modified was the {@curam.entity core.Person Person} table;</LI>
<LI>the FID of the server method that Ronan Rooney's client screen called;</LI>
<LI>the fact that the transaction type was online;</LI>
<LI>the fact that the operation type was a modify; and</LI>
<LI>the concernRoleID of John Smith (which was the selection criteria used to perform the modify).</LI>
</UL>
@curam.technotes
<P>By default the table-level auditing mechanism is disabled.  See:</P>
<UL>
<LI>the Curam Server Modelling Guide for details on how to enable this mechanism in a development model; and</LI>
<LI>the Curam Server Developer's Guide for details on how to override this mechanism in a runtime application.</LI>
</UL>]]>
<attribute fieldname="timeEntered" description="The time at which the database operation was invoked."/>
<attribute fieldname="userId" description="The user who invoked the database operation."/>
<attribute fieldname="tableName" description="The name of the table that is being audited."/>
<attribute fieldname="programName" description="The signature of the database operation which was invoked."/>
<attribute fieldname="tranType" description="The context in which the method was invoked.  This may be one of batch, online, deferred and other."/>
<attribute fieldname="keyInfo" description="An XML representation of the key that was used as part of the update operation."/>
<attribute fieldname="detailInfo" description="An XML representation of the the values of the various fields before/after they were updated as part of a data access.  This may be an empty string."/>
<attribute fieldname="opType" description="The type of database operation (Create, Read, Update or Delete) which caused this audit record to be produced."/>
<attribute fieldname="isCompressed" description="Indicates whether the data in the detailInfo column has been compressed.&#10;"/>
</entity>
<entity name="AuthenticationLog"><![CDATA[@curam.logicalname Authentication Log
@curam.definition  An attempt by a {@curam.entity core.Users User} to log into the application.
@curam.description
<P>Each attempt to log in may be either successful or unsuccessful.</P>
<P>For an unsuccessful log in attempt, information is stored detailing why the attempt was unsuccessful (e.g. 'bad password').</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney starts the C&uacute;ram client, types in his user name and an incorrect password and attempts to log in.  C&uacute;ram records the unsuccessful login attempt and Ronan Rooney's screen displays an appropriate error message.</P>
<P>{@curam.entity core.Users User} Ronan Rooney then re-enters his user name and his correct password and now successfully logs in to the application.  C&uacute;ram records the successful login attempt.</P>
@curam.technotes
<P>The timeEntered column stores the actual date/time of the attempted login, whereas the lastWritten column facilitates export to C&uacute;ram Reporting.</P>
<P>For more information see the C&uacute;ram Server Developer's Guide.</P>]]>
<attribute fieldname="timeEntered" key="true" description="The login timestamp."/>
<attribute fieldname="userName" description="The username associated with the log entry."/>
<attribute fieldname="loginFailures" description="The number of login failures for the user specified."/>
<attribute fieldname="lastLogin" description="The last successful login date for the user."/>
<attribute fieldname="loginStatus" description="The status of the login attempt."/>
<attribute fieldname="logID" key="true" description="The authentication log ID."/>
<attribute fieldname="altLogin" description="Boolean indicator as to whether the userName in the log represents an alternate login ID."/>
</entity>
<entity name="AuthorisationLog"><![CDATA[@curam.logicalname Authorization Log
@curam.definition  An attempt by a {@curam.entity core.Users User} to invoke a function for which he or she is not authorized.
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney navigates to a page which attempts to call the server function Employer.register.  Ronan Rooney is not authorized for this function and so an authorization log row is created and an appropriate error message displayed on Ronan Rooney's screen.</P>
@curam.technotes
<P>Rows are created on this table whenever access is denied to a secured object - note that in the case of field-level security, denial of access to a particular field may not necessarily prevent the {@curam.entity core.Users User} from completing their business processing.</P>
<P>For online functions you should endeavor to design your application so that it is not possible for a {@curam.entity core.Users User} to navigate to a page which accesses functions for which the {@curam.entity core.Users User} is not authorized.</P>
<P>For more information see the C&uacute;ram Server Developer's Guide.</P>]]>
<attribute fieldname="timeEntered" description="The authorization timestamp."/>
<attribute fieldname="userName" description="The username associated with the log entry."/>
<attribute fieldname="logID" key="true" description="The authorization log ID."/>
<attribute fieldname="identifierName" description="The name of Security/Function Identifier for which authorization failed."/>
</entity>
<entity name="AutoRecovery"><![CDATA[@curam.logicalname AutoRecovery
@curam.definition  A record of the autorecovery data for a user.
@curam.description
<P>AutoRecovery stores a record of the current form that is open for a particular user. The autorecovery data is used to restore a user's data after both a browser refresh (f5) and after a session timeout of the application. </P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney logs in to the application and starts to create a new note for James Smith. The session times out where he is logged out of the application. After logging back in, the Create Note modal for James Smith is displayed with the previously entered data.</P>]]>
<attribute fieldname="autoRecoveryID" key="true" description="The unique identifier for the autorecovery record. "/>
<attribute fieldname="foregroundPageData" description="The foreground page data for the autorecovery record."/>
<attribute fieldname="foregroundPage" description="The foreground page for the autorecovery record."/>
<attribute fieldname="username" description="The username for the user."/>
<attribute fieldname="lastUpdatedDateTime" description="The date time of the last autorecovery change."/>
<attribute fieldname="backgroundTD" description="The background tab descriptor for the autorecovery record."/>
<attribute fieldname="sequenceNo" description="The sequence number for this fragment of the autorecovery data. The data can be fragmented across multiple records if it grows too big. It is reassembled according to the sequence number of the fragments. This field is not currently in use but maybe used in the future."/>
</entity>
<entity name="BatchErrorCodes"><![CDATA[@curam.logicalname Batch Error Code
@curam.definition  A translation of a batch error message name to a numeric code.
@curam.description
<P>Exception messages may be thrown from the logic within a batch process.  To allow a third-party scheduler to interpret an error, you can use this table to provide a translation for the batch error message which might allow the scheduler to decide whether to continue processing or halt.</P>
@curam.example
<P>The batch process MyBatchClass.myBatchMethod can throw these exceptions:</P>
<UL>
<LI>ERR_MYBATCH_NO_RECORDS_FOUND (it is safe for the scheduler to process other batch programs); and</LI>
<LI>ERR_MYBATCH_DATABASE_NOT_FOUND (it is pointless for the scheduler to attempt to process other batch programs).</LI>
</UL>
<P>You could provide a translation for each of these exceptions by storing rows on this table as follows:</P>
<UL>
<LI>ERR_MYBATCH_NO_RECORDS_FOUND - code 0; and</LI>
<LI>ERR_MYBATCH_DATABASE_NOT_FOUND - code 1</LI>
</UL>
<P>(assuming that your third-party scheduling tool interprets 0 as 'Ok to continue' and 1 as 'Halt').</P>
@curam.technotes
<P>If not match is found for the batch error, then the value held in the property `curam.batchlauncher.default.error.code` is returned.  If this property is not specified (or its value is invalid), then the value 1 is returned.</P>
<P>For more information see the C&uacute;ram Batch Processing Guide and the documentation for your third-party scheduling tool.</P>]]>
<attribute fieldname="errorCodeID" key="true" description="The ID of the Batch Error Code."/>
<attribute fieldname="errorCode" description="The Batch Error Code."/>
</entity>
<entity name="BatchGroupDesc"><![CDATA[@curam.logicalname Batch Group Description
@curam.definition  A group of batch processes.
@curam.description
<P>If your system contains a large number of batch processes, you may define logical groups of these batch processes to simplify navigation in the administration screens.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney finds that he often requests the invocation of batch process A followed by batch process B.</P>
<P>To simplify navigation in the administration screens, {@curam.entity core.Users User} Ronan Rooney creates a group called 'Ronan's group' which contains the batch processes A and B.  The C&uacute;ram Server creates a row on this table to store the batch process group.</P>
@curam.technotes
<P>You do not have to assign every batch process to a batch process group; it is always possible to view a full list of all batch processes in the administration screens.</P>
<P>Any batch process may belong to more than one batch process group.</P>
<P>For more information see the C&uacute;ram Batch Processing Guide.</P>]]>
<attribute fieldname="groupId" key="true" description="The ID of the Batch Group."/>
<attribute fieldname="groupName" description="The name of the Batch Group."/>
</entity>
<entity name="BatchGroupTranslation"><![CDATA[@curam.logicalname Batch Group Name Translations
@curam.definition  Stores Display Name translation text for batch group name.
@curam.description
<P>Stores Display Name translation text for  batch group name  in various locales.
</P>
@curam.technotes
<P>For more information see the C&uacute;ram Batch Processing Guide.</P>]]>
<attribute fieldname="localeIdentifier" key="true" description="Locale Code."/>
<attribute fieldname="key" key="true" description="Translation Key , the group id."/>
<attribute fieldname="localeText" description="Translation Text the group name description."/>
</entity>
<entity name="BatchGrpGrpAssoc"><![CDATA[@curam.logicalname Batch Group-Group Association
@curam.definition  A batch process group's membership of a parent batch process group.
@curam.technotes
<P>Reserved for future use.</P>]]>
<attribute fieldname="groupId" key="true" description="The ID of a Batch Group."/>
<attribute fieldname="childGroupId" key="true" description="The ID of an associated child Batch Group."/>
</entity>
<entity name="BatchParamDef"><![CDATA[@curam.logicalname Batch Parameter Definition
@curam.definition  A parameter type required by a batch process.
@curam.description
<P>Each batch process ({@curam.entity internal.batch.BatchProcDef Batch Process Definition}) may require a number of parameters at the time it is launched.  The definition of these parameter types is held on this table.</P>
<P>The actual parameter values used for a given invocation of a batch process are stored on {@curam.entity internal.batch.BatchParamValue Batch Parameter Value}.</P>
@curam.example
<P>You design a new batch method called MyBatchClass.myBatchMethod.  This method requires 2 parameters:</P>
<UL>
<LI>a start date; and</LI>
<LI>an end date.</LI>
</UL>
<P>At model generation time, SQL will be created which will insert two rows onto the Batch Parameter Definition table (one for each parameter).</P>
@curam.technotes
<P>For more information see the C&uacute;ram Server Modelling Guide and the C&uacute;ram Batch Processing Guide.</P>]]>
<attribute fieldname="paramName" key="true" description="The name of the parameter."/>
<attribute fieldname="processDefName" key="true" description="The name of the batch process."/>
<attribute fieldname="paramType" description="The parameter type."/>
</entity>
<entity name="BatchParamDesc"><![CDATA[@curam.logicalname Batch Parameter Description
@curam.definition  A description of a parameter to a batch process.
@curam.description
<P>A description can help a batch operator identify and understand the purpose of each parameter to a batch process when viewing detail of a batch process in the administration screens.</P>
<P>The definition of the batch parameter described is stored on {@curam.entity internal.batch.BatchParamDef Batch Parameter Definition}.</P>
@curam.example
<P>You design a new batch method called MyBatchClass.myBatchMethod.  In the administration screens, a batch operator can see that your process requires two parameters:</P>
<UL>
<LI>a start date; and</LI>
<LI>an end date.</LI>
</UL>
@curam.technotes
<P>For more information see the C&uacute;ram Batch Processing Guide.</P>]]>
<attribute fieldname="paramName" key="true" description="The name of a parameter in the batch process."/>
<attribute fieldname="processDefName" key="true" description="The name of the batch process."/>
<attribute fieldname="description" description="A description of the parameter."/>
<attribute fieldname="defaultValue" description="The default value of the parameter."/>
</entity>
<entity name="BatchParamDescTranslation"><![CDATA[@curam.logicalname Batch Parameter Description Translations
@curam.definition  Stores Display Name translation text for parameter long name and description.
@curam.description
<P>Stores Display Name translation text for parameter long name and description in various locales.
</P>
@curam.technotes
<P>For more information see the C&uacute;ram Batch Processing Guide.</P>]]>
<attribute fieldname="localeIdentifier" key="true" description="Locale of the descriptions."/>
<attribute fieldname="processDefName" key="true" description="Process Definition Name."/>
<attribute fieldname="paramName" key="true" description="Param name key."/>
<attribute fieldname="description" description="Parameter description."/>
<attribute fieldname="paramLongName" description="Param long name."/>
</entity>
<entity name="BatchParamValue"><![CDATA[@curam.logicalname Batch Parameter Value
@curam.definition  A value of a batch parameter to be used for a particular invocation of a batch process.
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney requests that the batch process MyBatchClass.myBatchMethod should be executed, with the parameters:</P>
<UL>
<LI>Start Date = 1st January 2000; and</LI>
<LI>End Date = 31st December 2000.</LI>
</UL>
<P>The C&uacute;ram Server stores the request on {@curam.entity internal.batch.BatchProcRequest Batch Process Request} and also stores two rows on this table (one for each parameter value).</P>
<P>At some later stage (perhaps after the online day), a batch operator starts the C&uacute;ram Batch Launcher, which:</P>
<UL>
<LI>invokes the batch process MyBatchClass.myBatchMethod which {@curam.entity core.Users User} Ronan Rooney requested, passing in the start date 1st January 2000 and end date 31st December 2000; and</LI>
<LI>after successful invocation, removes the rows from this table.</LI>
</UL>
@curam.technotes
<P>For more information on the C&uacute;ram Batch Launcher, see the C&uacute;ram Operations Guide and the C&uacute;ram Batch Processing Guide.</P>]]>
<attribute fieldname="paramName" key="true" description="The name of the parameter."/>
<attribute fieldname="processRequestId" key="true" description="The ID of the batch process request."/>
<attribute fieldname="paramValue" description="The value of a parameter for a batch process request."/>
</entity>
<entity name="BatchProcDef"><![CDATA[@curam.logicalname Batch Process Definition
@curam.definition  A batch process which may be started by a batch operator or scheduling tool.
@curam.description
<P>The textual description for the batch process is stored on {@curam.entity internal.batch.BatchProcDesc Batch Process Description}.</P>
@curam.example
<P>You design a new class in the Rose model called 'MyBatchClass' and create a new &lt;&lt;batch&gt;&gt; method called 'myBatchMethod'.</P>
<P>When you build and run your online application and login as an administrator, the System...  Batch window will list your new batch process and enable you to request that the batch process is executed.</P>
@curam.technotes
<P>A C&uacute;ram batch process is referred to by the name of a class and method in the Rose model.  The method must have the stereotype  &lt;&lt;batch&gt;&gt;.</P>
<P>This table is populated automatically from SQL generated at design time from the Rose model.  See the C&uacute;ram Server Modelling Guide and the C&uacute;ram Batch Processing Guide for more information.</P>]]>
<attribute fieldname="processDefName" key="true" description="The name of the batch process."/>
<attribute fieldname="appName" description="The name of the application to execute for the batch process (no longer required)."/>
<attribute fieldname="className" description="The name of the class containing the operation to perform the batch processing requested."/>
<attribute fieldname="opName" description="The name of the operation that will perform the batch processing requested."/>
</entity>
<entity name="BatchProcDesc"><![CDATA[@curam.logicalname Batch Process Description
@curam.definition  A description of a batch process.
@curam.description
<P>A description can help a batch operator identify and understand the purpose of a batch process when viewing a list of batch processes in the administration screens.</P>
<P>The definition of the batch process described is stored on {@curam.entity internal.batch.BatchProcDef Batch Process Definition}.</P>
@curam.example
<P>You design a new class in the Rose model called 'MyBatchClass' and create a new &lt;&lt;batch&gt;&gt; method called 'myBatchMethod'.</P>
<P>When you build and run your online application and login as an administrator, the System...  Batch window will allow you to choose your batch process and assign it a more meaningful description.</P>
@curam.technotes
<P>Each {@curam.entity internal.batch.BatchProcDef Batch Process Definition} must have a corresponding Batch Process Description in order for it to be listed on the System... Batch window.</P>
<P>By default, an initial description is automatically generated at design time.  The initial description will be the method name.</P>
<P>For more information see the C&uacute;ram Batch Processing Guide.</P>]]>
<attribute fieldname="processDefName" key="true" description="The name of the batch process."/>
<attribute fieldname="processLongName" description="The descriptive name of the batch process."/>
<attribute fieldname="description" description="A description of the batch process."/>
<attribute fieldname="batchType" description="The type of the batch process."/>
</entity>
<entity name="BatchProcDescTranslation"><![CDATA[@curam.logicalname Batch Process Definition Display Name Translations
@curam.definition  Stores Display Name translation text for batch process definition and description fields.
@curam.description
<P>Stores Display Name translation text for  batch process definition in various locales.
</P>
@curam.technotes
<P>For more information see the C&uacute;ram Batch Processing Guide.</P>]]>
<attribute fieldname="localeIdentifier" key="true" description="Locale Identifier key."/>
<attribute fieldname="processDefName" key="true" description="Process Definition Name."/>
<attribute fieldname="description" description="Translated Description  text."/>
<attribute fieldname="processLongName" description="Process Long Name Text."/>
</entity>
<entity name="BatchProcGrpAssoc"><![CDATA[@curam.logicalname Batch Process Group Association
@curam.definition  A batch process's membership of a batch process group.
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney finds that he often requests the invocation of batch process A followed by batch process B.</P>
<P>To simplify navigation in the administration screens, {@curam.entity core.Users User} Ronan Rooney creates a batch process group containing the batch processes A and B.  The C&uacute;ram Server creates two rows on this table (one for each batch process which is a member of the batch process group).</P>
@curam.technotes
<P>You do not have to assign every batch process to a batch process group; it is always possible to view a full list of all batch processes in the administration screens.</P>
<P>Any batch process may belong to more than one batch process group.</P>
<P>For more information see the C&uacute;ram Batch Processing Guide.</P>]]>
<attribute fieldname="groupId" key="true" description="The ID of a Batch Group."/>
<attribute fieldname="processDefName" key="true" description="The name of a Batch Process Definition."/>
</entity>
<entity name="BatchProcRequest"><![CDATA[@curam.logicalname Batch Process Request
@curam.definition  A request for a batch process to be executed.
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney requests that the batch process MyBatchClass.myBatchMethod should be executed.  The C&uacute;ram Server stores a row on this table to record the request.</P>
<P>At some later stage (perhaps after the online day), a batch operator starts the C&uacute;ram Batch Launcher, which:</P>
<UL>
<LI>invokes the batch process MyBatchClass.myBatchMethod which {@curam.entity core.Users User} Ronan Rooney requested; and</LI>
<LI>after successful invocation, removes the row from this table.</LI>
</UL>
@curam.technotes
<P>For more information on the C&uacute;ram Batch Launcher, see the C&uacute;ram Operations Guide and the C&uacute;ram Batch Processing Guide.</P>]]>
<attribute fieldname="processRequestId" key="true" description="The ID of the process request."/>
<attribute fieldname="processDefName" description="The name of the batch process."/>
<attribute fieldname="username" description="The name of the requesting user."/>
<attribute fieldname="timeRequested" description="The time of the request."/>
<attribute fieldname="priority" description="The priority of the request."/>
</entity>
<entity name="CTDisplayName"><![CDATA[<p>
    @curam.logicalname CT &nbsp;DisplayName @curam.definition A table to store localizable text for Code Table Header tableName.
    @curam.description
</p>
<p>
    Code Table DisplayName can store can store translated content for {@curam.entity internal.codetable.CodeTableHeader Code Table Header}
    in different locales. The displayName text field can store upto 300 characters. @curam.example
</p>
<p>
    The displayName text field can be used to store any display name text for the users to understand the {@curam.entity
    internal.codetable.CodeTableHeader Code Table Header} better. This&nbsp;documentation can also be used to&nbsp;know if
    there are any implications in changing this code table.
</p>
<p>
    @curam.technotes
</p>
<p>
    For more information see the Curam Server Developer's Guide.
</p>]]>
<attribute fieldname="tableName" key="true" description="TableName&amp;nbsp;for&amp;nbsp;the&amp;nbsp;CodeTableHeader tableName."/>
<attribute fieldname="localeIdentifier" key="true" description="LocaleIdentifier&amp;nbsp;for&amp;nbsp;the&amp;nbsp;tablename displayname."/>
<attribute fieldname="text" description="Text&amp;nbsp;for&amp;nbsp;the&amp;nbsp;actual display name text in different locale."/>
</entity>
<entity name="CacheVersion"><![CDATA[@curam.logicalname Cache Version
@curam.definition  The version of a set of data which is cached across server and client applications.
@curam.description
<P>Curam caches {@curam.entity internal.codetable.CodeTableHeader Code Table} data on both the server and client applications.  The row on this table holds the latest version number of the cached data to ensure that all client and server caches are kept in sync.
</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney uses the administration screens to make changes to a {@curam.entity internal.codetable.CodeTableHeader Code Table}.  He clicks 'Save' and the Curam Server stores his changes on the {@curam.entity internal.codetable.CodeTableItem Code Table Item} table.</P>
<P>{@curam.entity core.Users User} Ronan Rooney then clicks the 'Publish' button and the Curam Server:</P>
<UL>
<LI>retrieves the row on this table for the Code Table cache.  The version number currently on the row is 3;</LI>
<LI>increments the version number on this row to 4 and stores it on the database; and</LI>
<LI>publishes a 'cache update' message (including the version number of 4).</LI>
</UL>
<P>Each running instance of the Curam client application and server application receives the 'cache update' message and clears its cache.  Some of the client application instances receive the message before the servers do; when these clients request the codetable cache from a server, they pass the version number to ensure that they are not supplied with a stale copy of the cache.</P>]]>
<attribute fieldname="cacheName" key="true" description="The name of the cache whose version number is stored in a record."/>
<attribute fieldname="cacheVersionNumber" description="The version number of the named cache."/>
</entity>
<entity name="CodeTableData"><![CDATA[<p>
    @curam.logicalname Code Table&nbsp;Data @curam.definition A table to store comments for Code Table Header.
    @curam.description
</p>
<p>
    Code Table Data can store can store comments for {@curam.entity internal.codetable.CodeTableHeader Code Table Header}
    in different locales. The comments field can store upto 4000 characters. @curam.example
</p>
<p>
    The comments field can be used to store any documentation for the users to understand the {@curam.entity
    internal.codetable.CodeTableHeader Code Table Header} better. This&nbsp;documentation can also be used to&nbsp;know if
    there are any implications in changing this code table.
</p>
<p>
    @curam.technotes
</p>
<p>
    For more information see the Curam Server Developer's Guide.
</p>]]>
<attribute fieldname="tableName" key="true" description="&lt;p&gt;&#10;    The code table name.&#10;&lt;/p&gt;"/>
<attribute fieldname="localeIdentifier" key="true" description="The&amp;nbsp;language/country&amp;nbsp;code&amp;nbsp;for&amp;nbsp;this&amp;nbsp;code&amp;nbsp;table&amp;nbsp;data."/>
<attribute fieldname="comments" description="Comments&amp;nbsp;for&amp;nbsp;the&amp;nbsp;code&amp;nbsp;table."/>
</entity>
<entity name="CodeTableHeader"><![CDATA[@curam.logicalname Code Table Header
@curam.definition  A lookup table which maps codes stored in various database columns to textual descriptions of those codes.
@curam.description
<P>Curam allows a level of indirection when storing commonly-used values on the database.  A short code is stored on the database column, and a code table is used to translate this short code into a textual description appropriate for a user.  Code tables can be customized to allow different localized translations to be available.</P>
<P>Each translation for a Code Table Header is stored as a {@curam.entity internal.codetable.CodeTableItem Code Table Item}.  A Code Table Header may specify one code as the default for the code table.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney (an English-speaker) opens a screen which instructs him to choose a weekday from a list.  The screen presents the list Monday, Tuesday, Wednesday, Thursday and Friday.  Ronan Rooney chooses Wednesday and Curam stores his choice as the code DAY3.</P>
<P>{@curam.entity core.Users User} Pierre (a French-speaker) opens the same screen but is presented with the list `Lundi`, `Mardi`, `Mercredi`, `Jeudi`, and `Vendredi`.  Pierre chooses `Mercredi` (= Wednesday) and Curam stores his choice as the code DAY3.</P>
@curam.technotes
<P>The timeEntered column is used to implement a caching mechanism between the Curam client and server.</P>
<P>For more information see the Curam Server Developer's Guide.</P>]]>
<attribute fieldname="tableName" key="true" description="The name of the code table."/>
<attribute fieldname="timeEntered" description="A timestamp for synchronization purposes. The caching system requires that this field is not null."/>
<attribute fieldname="defaultCode" description="The default code of the code table."/>
<attribute fieldname="parentCodetable" description="The name of the parent codetable in the hierarchy. This value is optional."/>
</entity>
<entity name="CodeTableHierarchy"><![CDATA[@curam.logicalname Code Table Hierarchy
@curam.definition  The definition of a Code Table Hierarchy, specifying the top level Code Table and a description of the hierarchy.
@curam.description
<P> A Code Table Hierarchy is defined by a {@curam.entity internal.codetable.CodeTableHeader Code Table}, which is the top level of a linked hierarchy of Code Tables. The Code Table Hierarchy record itself is purely an administrative facility to allow hierarchies to be grouped in one place.</P>
@curam.example
<P>
<UL>
<LI> Your application requires {@curam.entity core.Users Users} to select a city from a large number of pre-defined cities.  In order to simplify the user experience, you decide that the user should first select their country and this will then filter the city list down to a more manageable size.</LI>
<LI>You define a Code Table Hierarchy for Cities in your application in a file called CT_CitiesHierarchy.ctx.  This hierarchy has a top level Code Table 'Country' which in turn cascades to a 'City' Code Table.  When you build your application, the data manager will create this Code Table hierarchy definition record.</LI>
<LI> {@curam.entity core.Users User} Ronan Rooney is entering a claim.  He reaches the 'Select your City' screen and is presented with a drop-down list of countries, beside which is an unpopulated list of cities.  Ronan selects his country of origin (Ireland) and the drop down list of cities is automatically populated with the cities of Ireland.  Ronan selects Dublin and continues to fill out his claim form.</LI>
</UL>
@curam.technotes
See the Curam Server Developers Guide for further information.]]>
<attribute fieldname="hierarchyName" key="true" description="A display name for the hierarchy."/>
<attribute fieldname="description" description="A description of the hierarchy."/>
<attribute fieldname="codetable" description="The name of the top level codetable in the hierarchy."/>
</entity>
<entity name="CodeTableItem"><![CDATA[@curam.logicalname Code Table Item
@curam.definition  A translation of a code into a language-specific textual description.
@curam.description
<P>Each Code Table Item can specify its relative sort order within all other codes belonging to the same {@curam.entity internal.codetable.CodeTableHeader Code Table Header}.  This sorting controls the order in which the code table's descriptions appear in the Curam client user interface.  If more than one item in a {@curam.entity internal.codetable.CodeTableHeader Code Table Header} shares the same sort order value, this group of items will in alphabetical order.</P>
<P>Each Code Table Item can be enabled or disabled by an administrator.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney opens a screen which instructs him to choose a weekday from a list.  The screen presents the list Monday, Tuesday, Wednesday, Thursday and Friday in their natural ordering (not in alphabetical order).</P>
<P>An administrator adds the 'Euro' currency to a currency code table, and at some later stage disables the old code table values 'Lira', 'Francs' and 'Deutschemarks'.  {@curam.entity core.Users User} Ronan Rooney opens a screen which shows old financial records, which correctly display records in Lira, Francs and Deutschemarks; however, when he adds new financial records Euro is present in the list of available currencies but Lira, Francs and Deutschemarks are not.</P>
@curam.technotes
<P>If you disable a Code Table Item, you should ensure that the decodes for all your supported languages are disabled.</P>
<P>For more information see the Curam Server Developer's Guide.</P>]]>
<attribute fieldname="tableName" key="true" description="The name of the table containing the item."/>
<attribute fieldname="code" key="true" description="The code for the item."/>
<attribute fieldname="description" description="A description of the item."/>
<attribute fieldname="annotation" description="An annotation for the item."/>
<attribute fieldname="isEnabled" description="Boolean to indicate if the code is enabled."/>
<attribute fieldname="sortOrder" description="The presentation order of the code table."/>
<attribute fieldname="localeIdentifier" key="true" description="The locale for this code table item."/>
<attribute fieldname="parentCode" description="The name of the parent code this entry is associated with in the hierarchy. This value is optional."/>
<attribute fieldname="comments" description="A code table item comment."/>
</entity>
<entity name="CodeTableViewCode"><![CDATA[@curam.logicalname Code Table View Code
@curam.definition  Codetable view code represents the value of one code for a codetable view.
@curam.description
<P>Codetable view code represents the value of one code for a codetable view. This code must be one of the codes defined in the codetable containing the view.</P>]]>
<attribute fieldname="tableName" key="true" description="The name of the table containing the view."/>
<attribute fieldname="code" key="true" description="Codetable view code represents the value of one code for a codetable view. "/>
<attribute fieldname="context" key="true" description="Code table view context."/>
</entity>
<entity name="CodeTableView"><![CDATA[@curam.logicalname Code Table View
@curam.definition  A context based view of code table items.
@curam.description
<P> Code table view represents a subset of codes from a code table. Each view is defined by the sepcified context and the codes defined for the view are displayed when the application is run in specified context. An optional default code can be sepecified for a view which has to be one of the codes defined for the view.</P>
<P>For more information see the Curam Server Developer's Guide.</P>]]>
<attribute fieldname="tableName" key="true" description="The name of the table containing the view."/>
<attribute fieldname="context" key="true" description="Code table view context. A context and code table codes are specified for every view in a codetable. The view displays the specified codes when the application is run in the specified context. "/>
<attribute fieldname="defaultCode" description="Code table view default code. An optional default code can be sepecified for a view which has to be one of the codes defined for the view. "/>
</entity>
<entity name="DPErrorInformation"><![CDATA[@curam.logicalname Deferred Process Error Information
@curam.definition  An error which occurred during the invocation of a {@curam.entity internal.deferredprocessing.DPProcess Deferred Process}.
@curam.description
<P>If an error occurs during the invocation of a {@curam.entity internal.deferredprocessing.DPProcess Deferred Process}, then the transaction surrounding this invocation will be rolled back (thus losing any updates to business entities).  Once this rollback has occurred then the deferred processing engine starts another transaction, creates a row on this table to store the details of the error and commits the transaction.</P>
<P>The data on this table is then available to application error processing.</P>
@curam.example
<P>You model a new deferred process.  You also modify some online business logic to call the API to queue requests to invoke your {@curam.entity internal.deferredprocessing.DPProcess Deferred Process}.</P>
<P>{@curam.entity core.Users User} Ronan Rooney accesses an online function which calls your online business logic.  The C&uacute;ram Server starts your deferred process by enqueuing a JMS message.  Control returns to Ronan Rooney.</P>
<P>The queue manager dequeues the JMS message and invokes the deferred processing engine.  The deferred processing engine attempts to invoke your {@curam.entity internal.deferredprocessing.DPProcess Deferred Process} but encounters an error.  The deferred processing engine creates a row on this table to store the error.</P>
<P>Your custom processing reads this row and sends an email to {@curam.entity core.Users User} Ronan Rooney notifying him of the error.</P>
@curam.technotes
<P>For more information see the C&uacute;ram Workflow Management System Developer's Guide.</P>]]>
<attribute fieldname="instDataID" key="true" description="The ID of a record on the WMInstanceData table. WMInstanceData is an application-defined table that is populated with information required by the deferred process."/>
<attribute fieldname="exceptionDesc" description="Holds the details of any exception that occurred during the deferred process."/>
<attribute fieldname="overFlowInd" description="The over flow indicator is set to TRUE when the error information size is more than 2000. The default value is FALSE."/>
<attribute fieldname="processName" description="The name of the process containing this failure."/>
<attribute fieldname="invocationTime" description="Time the deferred process is invoked."/>
<attribute fieldname="resolvedTime" description="Time the deferred process is resolved."/>
<attribute fieldname="status" description="The status of the failed message. It is either resolved or unresolved."/>
</entity>
<entity name="DPErrorInformationOverflow"><![CDATA[@curam.logicalname Deferred Process Error Information Overflow.
@curam.definition  An error which occurred during the invocation of a {@curam.entity internal.deferredprocessing.DPProcess Deferred Process} and the size of exception is more than 2000 characters, which can not fit into Deferred Process Error Information entity then this Deferred Process Error Information Overflow entity is invoked. 
@curam.description
<P>If an error occurs during the invocation of a {@curam.entity internal.deferredprocessing.DPProcess Deferred Process}, and the exception information size is more than 2000 characters, then the overflow exception data is been added to this table.</P>
<P>The data on this table is then available to application error processing.</P>
@curam.example
<P>If the exception size is 2500 characters, then a row will be added to Deferred Process Error Information table, which will have a part of the exception up to 2000 characters and the overflow indicator will be set to TRUE. The overflow exception details (from character 2000 - 2500) will be stored in Deferred Process Error Information overflow table.</P>
@curam.technotes
<P>For more information see the C&uacute;ram Workflow Management System Developer's Guide.</P>
]]>
<attribute fieldname="instDataID" key="true" description="The ID of a record on the WMInstanceData table. WMInstanceData is an application-defined table that is populated with information required by the deferred process.  This column is only updated when the exception size is more than 2000 characters. "/>
<attribute fieldname="exceptionDesc" description="Holds the details of any exception that occurred during the deferred process. This column is only updated when the exception size is more than 2000 characters. "/>
</entity>
<entity name="DPProcessInstance"><![CDATA[@curam.logicalname Deferred Process Instance
@curam.definition  A request to execute a {@curam.entity internal.deferredprocessing.DPProcess Deferred Process}.
@curam.description
<P>A row is created on this table when the JMS request to execute the deferred process is dequeued.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney makes a change to some evidence which affects existing cases for {@curam.entity core.Person Person} John Smith.</P>
<P>The C&uacute;ram Server records the change and requests that a deferred process be executed to reassess John Smith's cases.  Control returns to {@curam.entity core.Users User} Ronan Rooney as soon as the request has been made, rather than waiting for the reassessment to execute.</P>
<P>The queue manager dequeues the deferred processing request and creates a row on this table.</P>
@curam.technotes
<P>The actual technical request for a deferred process is a JMS message; as such, reading rows on this table will show you only past requests which have been successfully completed.</P>
<P>Each row on this table is created in tandem with a row created on {@curam.entity internal.deferredprocessing.DPTicket Deferred Process Ticket}.</P>
<P>For more information see the C&uacute;ram Workflow Management System Developer's Guide.</P>]]>
<attribute fieldname="instanceID" key="true" description="The unique identifier of the process instance which is used as the primary key for the process instance in the database."/>
<attribute fieldname="processName" description="The unique name of the workflow process."/>
<attribute fieldname="instDataID" description="The unique identifier of a ticket instance."/>
<attribute fieldname="startTime" description="The start time of the process."/>
<attribute fieldname="finishTime" description="The finish time of the process."/>
</entity>
<entity name="DPProcess"><![CDATA[@curam.logicalname Deferred Process
@curam.definition  A process which will be executed asynchronously.
@curam.description
<P>Some processes are intensive and may take a long time to complete.  To avoid the end user having to wait for the process to complete, some processes may be 'deferred'.</P>
<P>A deferred process executes asynchronously and is managed by a queue manager.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney makes a change to some evidence which affects existing cases for {@curam.entity core.Person Person} John Smith.</P>
<P>The C&uacute;ram Server records the change and requests that a deferred process be executed to reassess John Smith's cases.  Control returns to {@curam.entity core.Users User} Ronan Rooney as soon as the request has been made, rather than waiting for the reassessment to execute.</P>
@curam.technotes
<P>For more information see the C&uacute;ram Workflow Management System Developer's Guide.</P>]]>
<attribute fieldname="processName" key="true" description="The name of a workflow process."/>
<attribute fieldname="interfaceName" description="The interface name of the BPO method which is called to execute, automatically, the task described by the ticket."/>
<attribute fieldname="methodName" description="The name of the method to be called to execute the task automatically."/>
<attribute fieldname="ticketType" description="The ticket type."/>
<attribute fieldname="subject" description="An limited text field, filled in by a user to describe briefly the task which the ticket is for."/>
</entity>
<entity name="DPTicket"><![CDATA[@curam.logicalname Deferred Process Ticket
@curam.definition  An execution of a requested {@curam.entity internal.deferredprocessing.DPProcessInstance Deferred Process Instance}.
@curam.description
<P>When the queue manager dequeues a request to execute a deferred process, C&uacute;ram creates a row on this table to store details of the execution.        </P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney makes a change to some evidence which affects existing cases for {@curam.entity core.Person Person} John Smith.</P>
<P>The C&uacute;ram Server records the change and requests that a deferred process be executed to reassess John Smith's cases.  Control returns to {@curam.entity core.Users User} Ronan Rooney as soon as the request has been made, rather than waiting for the reassessment to execute.</P>
<P>The queue manager dequeues the deferred processing request and creates a row on this table.</P>
@curam.technotes
<P>Each row on this table is created in tandem with a row created on {@curam.entity internal.deferredprocessing.DPProcessInstance Deferred Process Instance}.</P>
<P>For more information see the C&uacute;ram Workflow Management System Developer's Guide.</P>]]>
<attribute fieldname="ticketID" key="true" description="The unique identifier of the ticket which is used as the primary key for the ticket in the ticket database."/>
<attribute fieldname="subject" description="This gives a short text description about what the ticket is being sent to tell the user to do. Standard text messages should be defined to briefly describe any task objectives for users."/>
<attribute fieldname="instDataID" description="The unique identifier of a ticket instance."/>
<attribute fieldname="processName" description="The unique name of the workflow process."/>
<attribute fieldname="processInstID" description="The unique identifier of a process instance."/>
<attribute fieldname="interfaceName" description="This is the name for the interface of a BPO to be used for the automatic execution of a task."/>
<attribute fieldname="methodName" description="The name of the method belonging to a BPO which is executed to carry out an automatic task."/>
<attribute fieldname="creationTS" description="The date and time at which the ticket was created."/>
<attribute fieldname="closureTS" description="The date and time at which the ticket was closed."/>
<attribute fieldname="status" description="The status of the ticket (open or closed)."/>
<attribute fieldname="resolutionCode" description="Whether the resolution of the ticket was successful or not."/>
<attribute fieldname="ticketType" description="The general ticket type."/>
</entity>
<entity name="EventClass"><![CDATA[@curam.logicalname Event Class
@curam.definition  The classes of business events that can be raised from the Curam application.
@curam.description
<P>This table stores the classes of business events that can be raised from the Curam application.  The combination of {@curam.entity internal.events.EventClass Event Class} and {@curam.entity internal.events.EventType Event Type} will denote the specific event that can be raised.</P>
@curam.example
<P>
    You require an event to be raised when a {@curam.entity core.CaseHeader case} in the Curam application is either opened or closed.  You define a new Event Class called 'CASE' to represent events that can be raised which are associated with Application {@curam.entity core.CaseHeader Cases}.
  </P>]]>
<attribute fieldname="eventClass" key="true" description="The name of the business event class.  For example, an event class of 'Case' describes a set of events related to the status of a 'Case'. The corresponding event types for this event class could be CloseCase, OpenCase, SuspendCase etc."/>
</entity>
<entity name="EventType"><![CDATA[@curam.logicalname Event Type
@curam.definition  The types of events that can be raised from the Curam application.
@curam.description
<P>This table stores the business event types that can be raised from the Curam application.  The combination of {@curam.entity internal.events.EventClass Event Class} and {@curam.entity internal.events.EventType Event Type} will denote the specific event that can be raised.</P>
@curam.example
<P>
    You require a workflow {@curam.entity internal.workflow.ProcessDefinition Process Definition} to be enacted whenever payments increase on a {@curam.entity core.CaseHeader case}.
  </P>
<P>
    You use the Admin application to create an {@curam.entity internal.events.EventClass Event Class} of 'CASE' to represent events associated with {@curam.entity core.CaseHeader cases}.  You then add an {@curam.entity internal.events.EventType Event Type} of 'PAYMENT_INCREASE' to represent the event associated with the payments increase on a {@curam.entity core.CaseHeader case}.
  </P>
<P>
    You use the Admin application to read this table and provide a list of available events which can be raised and configure your workflow to be started whenever the 'payment increase' event occurs.
  </P>]]>
<attribute fieldname="eventType" key="true" description="The type of event associated with an Event Class. (e.g. the event type 'CLOSED' might be associated with the event class 'CASE' to signify the event raised when a Case is closed."/>
<attribute fieldname="eventClass" key="true" description="The name of the business event class.  For example, an event class of 'Case' describes a set of events related to the status of a 'Case'. The corresponding event types for this event class could be CloseCase, OpenCase, SuspendCase etc."/>
</entity>
<entity name="ExtendedUsersInfo"><![CDATA[@curam.logicalname ExtendedUsersInfo.
@curam.definition  The Login ID details of a person employed by the `{@curam.entity core.Organisation organization}` to perform tasks on the system.
@curam.example
<P>Login ID details of Ronan Rooney who is a user.</P>]]>
<attribute fieldname="userName" key="true" description="The security user name."/>
<attribute fieldname="loginID" description="Login ID for this userName."/>
<attribute fieldname="upperLoginID" description="Upper case login ID for this userName; for case-insensitivity."/>
</entity>
<entity name="FieldLevelSecurity"><![CDATA[@curam.logicalname Field Level Security
@curam.definition  The security information for a field returned to the C&uacute;ram client application.
@curam.description
<P>There is a row on this table for each field in each struct which can be returned from the C&uacute;ram server application to the client.  If the sidName is blank, then all users may view the field; otherwise, only users which have been granted the specified SID may view the field (all other users will see a masked out version of the field).</P>
<P>  The related {@curam.entity internal.security.SecurityIdentifier Security Identifier} has a sidType of FIELD.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney open a screen which displays personnel information.  Ronan Rooney can see the person name fields (as their Field Level Security rows do not specify a SID) but the salary field appears masked out (because its Field Level Security row specifies a SID of 'SalaryViewer', and {@curam.entity core.Users User} Ronan Rooney does not belong to a group which has 'SalaryViewer' privileges).</P>
<P>  Ronan Rooney's supervisor (Superuser) opens the same screen and can see all fields (including salary).  This because Superuser is a member of the 'Personnel' group which has been assigned 'SalaryViewer' privileges, as stored in a row on the {@curam.entity internal.security.SecurityGroupSid Security Group Security Identifier} table.</P>
@curam.technotes
<P>The same data can be displayed on many different client screens.  The security for the fields on these different screens is controlled separately for each screen.</P>
<P>For more information see the C&uacute;ram Application Administration Guide.</P>]]>
<attribute fieldname="operationName" key="true" description="The qualified name of an operation. Will also include the code_package option, if one was specified."/>
<attribute fieldname="fieldName" key="true" description="The qualified name of a field returned by an operation. Also referred to as a returned field."/>
<attribute fieldname="sidName" description="SID name."/>
</entity>
<entity name="FunctionIdentifier"><![CDATA[@curam.logicalname Function Identifier
@curam.definition  A identifier for a top-level server function callable by the online application or a batch process.
@curam.description
<P>In order for authorization to be granted to a server function, a Function Identifier must exist for the function.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney attempts to register a {@curam.entity core.Person Person}.  He enters the registration information on a client screen and clicks a button.  The client application attempts to call the Person.register method.  The server application successfully authorizes that Ronan Rooney is permitted to access the Person.register method.  The data to support this authorization is as follows:</P>
<UL>
<LI>{@curam.entity core.Users User} Ronan Rooney has been assigned the {@curam.entity internal.security.SecurityRole Security Role} 'Case worker';</LI>
<LI>The {@curam.entity internal.security.SecurityRole Security Role} 'Case worker' is a member of the {@curam.entity internal.security.SecurityGroup Security Group} 'Front office';</LI>
<LI>The {@curam.entity internal.security.SecurityGroup Security Group} 'Front office' has been granted access to the {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register'; and</LI>
<LI>The {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register' relates to the Function Identifier 'Person.register'.</LI>
</UL>
@curam.technotes
<P>The vast majority of {@curam.entity internal.security.SecurityIdentifier Security Identifier} rows relate to Function Identifier rows (and are named identically to them).</P>
<P>For more information see the C&uacute;ram Application Administration Guide.</P>]]>
<attribute fieldname="fidName" key="true" description="The name of a function identifier."/>
<attribute fieldname="fidEnabled" description="Boolean indicating if the function identifier is enabled."/>
<attribute fieldname="description" description="The description of this function identifier."/>
<attribute fieldname="codePackage" description="The code package of this function identifier, or blank if it is not in a code package."/>
<attribute fieldname="projectPackage" description="The project package of this function identifier."/>
</entity>
<entity name="GroupRange"><![CDATA[<p>
    @curam.logicalname Group Range @curam.definition Group Range configured for a system to generate unique ID across
    system landscape. @curam.description This table is used by the Curam Range Aware Key Server mechanism when creating
    unique identifiers (which are assigned to primary key fields). The approach used by the Range Aware Key Server to
    generate primary keys hinges on ensuring that non-overlapping key ranges are allocated to every system. The Range Aware
    Key Server will then ensure that all of the primary keys on a given system are generated from the range(s) assigned to
    that system. Therefore, the primary keys generated by each system will be unique.
</p>

<p>
    Customers that are not subdivided into agencies will start with group number 3. When all 512 ranges within that group
    have been used up, they will move onto group number 4, etc.Customers that are divided into agencies will need to
    allocate a group per agency. So, one agency will use group 3, another agency will use group 4, etc.So, for example, if
    a customer is using group 3, and they have three different systems that they want to set up&nbsp; - PRD, UAT, and DEV ]]>&#8211;<![CDATA[
    then they would configure these systems as follows:<br />
    &nbsp;PRD: group 3, range 1<br />
    &nbsp;UAT: group 3, range 2<br />
    &nbsp;DEV: group 3, range 3<br />
    It]]>&#8217;<![CDATA[s also worth noting that the customer may need to assign multiple ranges to a system. For example, if at some point
    (far in the future), a particular key set on a system is nearing the end of the range of key blocks that have been
    assigned to the system, it will be necessary to assign it another range.<br />
    So, for example, the system DEV which had already been assigned the range group 65 / range 3 could be assigned another
    range group 65 / range 200 . Then, when a particular key set on the system has run out of key blocks from within group
    65 / range 3, Range Aware Key Server would simply start using key blocks in group 65/ range 200.
</p>
<p>
    For more information see the Curam Server Developer's Guide.
</p>]]>
<attribute fieldname="groupNumber" key="true" description="Group currently assigned to system to generate next unique id block for a key set. It's used to generate a range aware key server block."/>
<attribute fieldname="rangeNumber" key="true" description="Range currently assigned to system to generate next unique id block for a key set. It's used to generate a range aware key server block."/>
<attribute fieldname="insertOrder" description="Maintains the insert order of the group and range values inserted."/>
</entity>
<entity name="GroupRangeValid"><![CDATA[@curam.logicalname Group Range Valid @curam.definition</a> Group Range Valid maintains the last good configuration of Group Range. @curam.description This table maintains the last good configuration of GroupRange entity.]]>
<attribute fieldname="groupNumber" key="true" description="Group currently assigned to system to generate next unique id block for a key set. It's used to generate a range aware key server block."/>
<attribute fieldname="rangeNumber" key="true" description="Range currently assigned to system to generate next unique id block for a key set. It's used to generate a range aware key server block."/>
<attribute fieldname="insertOrder" description="Maintains the insert order of the group and range values inserted."/>
</entity>
<entity name="JMSLiteMessage"><![CDATA[@curam.logicalname JMS Lite Message
@curam.definition  A queued message for testing Curam workflows/deferred processes.
@curam.description
<P>From http://java.sun.com/jms: 'The Java Message Service (JMS) API is a messaging standard that allows application components... to create, send, receive, and read messages. It enables distributed communication that is loosely coupled, reliable, and asynchronous.'</P>
<P>'JMS Lite' is a light-weight implementation of JMS for Curam, specifically for supporting testing of Curam workflows and deferred processes.</P>
<P>JMS Lite uses this database table to provide a simple transactional queue.</P>
@curam.example
<P>
    You define a workflow ({@curam.entity internal.workflow.ProcessDefinition Process Definition}) to allow correspondence to be sent to customers whenever their payment details change.  
      </P>
<P>The payment business processing is a batch program that raises a 'payment increase' event whenever payments increase on a {@curam.entity core.CaseHeader case}.</P>
<P>You configure your workflow to start whenever the 'payment increase' event occurs.</P>
<P>{@curam.entity core.Person Person} John Smith's payment details change due to an increase in rates.  When your batch program runs it detects John Smith's rate increase and raises a 'payment increase' event.  This event causes the Curam infrastructure to place a process enactment message on the JMS Lite 'queue' (i.e. create a row on this table) to enact the process.  The batch process is configured to convert any JMS Lite messages into 'real' JMS messages in the application server when the batch application processing has successfully completed.</P>
<P>The converted JMS message is delivered to the Workflow Engine in the application server, which enacts the workflow process.</P>
@curam.technotes
<P>The JMS Lite implementation will be used automatically if your process runs outside an application server, e.g:</P>
<UL>
<LI>when you launch your server in the development environment, JMSLite will automatically detect the presence of the JMSLiteMessage row and will forward the message to the appropriate handler (e.g. to enact your workflow); or</LI>
<LI>when you run production batch programs that interact with workflow or deferred processing;</LI>
</UL>
<P>otherwise the JMS implementation provided by your application server will be used.</P>
<P>If your batch program creates rows on this table, you can configure your batch program to automatically convert these rows to JMS messages in your application server (thereby deleting them).</P>
<P>See the Workflow Guide for further information.</P>]]>
<attribute fieldname="dbToJmsIndicator" key="true" description="This table can contain two types of JMS message: either DBtoJMS or JMSLite. This flag indicates that a message on the table belongs to DBtoJMS rather than JMSLite."/>
<attribute fieldname="liteMessageID" key="true" description="Key for the JMSLite record."/>
<attribute fieldname="liteMessageType" description="he JMS message Type (in JMS 1.02b - StreamMessage, MapMessage, TextMessage, ObjectMessage or BytesMessage). Note: This is not the same thing as the 'JMSType' header field on the message, which is arbitrary and is set by the application"/>
<attribute fieldname="jmsDestination" description="The destination to which the JMS message is being sent."/>
<attribute fieldname="jmsDeliveryMode" description="The delivery mode of the JMS message (in JMS 1.02b - Persistent, Non-Persistent)."/>
<attribute fieldname="jmsExpiration" description="The expiration time of the JMS message."/>
<attribute fieldname="jmsPriority" description="The priority level of the JMS message."/>
<attribute fieldname="jmsMessageID" description="The JMS Message ID."/>
<attribute fieldname="jmsTimestamp" description="The time at which the JMS message was sent."/>
<attribute fieldname="jmsCorrelationID" description="A JMS Message ID indicating that this message is a reply to another message (the other message's JMS Message ID is the correlation ID)."/>
<attribute fieldname="jmsReplyTo" description="The Destination to which replies to this message should be sent."/>
<attribute fieldname="jmsType" description="A message type identifier, supplied by the client when the JMS message was sent."/>
<attribute fieldname="jmsRedelivered" description="An indication of whether the JMS message is being redelivered."/>
<attribute fieldname="properties" description="The properties associated with the JMS message."/>
<attribute fieldname="body" description="The body of the JMS message."/>
</entity>
<entity name="KeyServer"><![CDATA[@curam.logicalname Key Server
@curam.definition  A key-set available for assigning unique identifiers.
@curam.description
<P>This table is used by the Curam Key Server mechanism when creating unique identifiers (which are assigned to primary key fields).</P>
<P>The nextUniqueIdBlock holds a number which allows the key server to generate up to 256 distinct keys; once these keys are used up, the nextUniqueIdBlock for the key-set is incremented (so that the key-set will never be used again).</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney registers a {@curam.entity core.Person Person}.  The Curam server application requests a key for the new {@curam.entity core.Person Person} record from the key server.  To produce this key, the key server increments the nextUniqueIdBlock for the requested key set and creates a new key from the block's range.</P>
<P>{@curam.entity core.Users User} Ronan Rooney registers another {@curam.entity core.Person Person}.  The Curam server application again requests a key for the new {@curam.entity core.Person Person} record from the key server; however, to produce this key, the key server does not need to increment the nextUniqueIdBlock for the requested key set, and creates a new key from the block's range without needing to access the Key Server table.</P>
<P>Eventually all keys from the block's range will be exhausted and a subsequent call to the key server will cause the key set's row on the Key Server table to be modified.</P>
@curam.technotes
<P>This table is always modified within a transaction which is separate from the main transaction which controls the changes to business tables.  This provides for a low level of locking on the Key Server table but at the expense of allowing 'holes' in the key range should the key assigned be unused (e.g. if the business transaction fails and is rolled back).</P>
<P>For more information see the Curam Server Developer's Guide.</P>]]>
<attribute fieldname="keySetCode" key="true" description="Unique ID key set code."/>
<attribute fieldname="nextUniqueIdBlock" description="Unique ID Key Set next high key in key set."/>
<attribute fieldname="humanReadable" description="Unique ID key set human readable flag."/>
<attribute fieldname="lastUpdated" description="Unique ID key set last updated date and time."/>
<attribute fieldname="annotation" description="KeyControl annotation."/>
<attribute fieldname="strategy" description="Represents strategy used to generate next unique id block for a given key set."/>
</entity>
<entity name="KeySetRange"><![CDATA[<p>
    @curam.logicalname Key&nbsp;Set Range @curam.definition Group Range currently assigned to a key set to generate unique
    ID across system landscape. @curam.description This table is used by the Curam Range Aware Key Server mechanism when
    creating unique identifiers (which are assigned to primary key fields). Range Aware Key Server uses this table to
    generate high key block within the key block range for the currently set group and range. @curam.technotes<br />
    <p>
    This table is populated for a key set at the first call to get a range Aware key for the key set. System populates it's
    group and range information for a keyset with the first group and range configured in GroupRange entity. Once
    nextUniqueIDBlock goes out of range for the currently assigned group and range. System reads the next configured group
    range information from&nbsp;GroupRange and updates  it&nbsp;accordingly.
  </p>
  <br />
</p>]]>
<attribute fieldname="keySetCode" key="true" description="Unique&amp;nbsp;ID&amp;nbsp;key&amp;nbsp;set&amp;nbsp;code."/>
<attribute fieldname="groupNumber" description="Group&amp;nbsp;currently&amp;nbsp;used&amp;nbsp;to&amp;nbsp;generate&amp;nbsp;next&amp;nbsp;unique&amp;nbsp;id&amp;nbsp;block&amp;nbsp;for&amp;nbsp;a&amp;nbsp;key&amp;nbsp;set.&amp;nbsp;It's&#10;used to generate a range aware key server&amp;nbsp; block."/>
<attribute fieldname="rangeNumber" description="Range&#10;currently&amp;nbsp;used&amp;nbsp;to&amp;nbsp;generate&amp;nbsp;next&amp;nbsp;unique&amp;nbsp;id&amp;nbsp;block&amp;nbsp;for&amp;nbsp;a&amp;nbsp;key&amp;nbsp;set.&amp;nbsp;It's&#10;used to generate a range aware key server&amp;nbsp; block."/>
<attribute fieldname="notificationBlock" description="notification block."/>
</entity>
<entity name="ModuleClassName"><![CDATA[@curam.logicalname Module Class Name
@curam.definition  A Guice module used to configure dependency injection bindings information for the application.
@curam.description
<P>This is a technical table; it does not hold any business data.</P>
<P>This entity cannot be written to by the application.  The rows on this entity are populated solely from data manager (DMX) files.</P> 
@curam.example
<P>You code a Guice module, named com.yourorg.YourModule.</P>
<P>To include your module in Guice's configuration, you must add the module class name to your custom data manager file for this table.  At Guice initialization time, your module will be loaded and its bindings configuration information added to Guice.</P>
@curam.technotes
<P>This table holds the class names of the Guice modules which be loaded to configure Guice's behavior.  Each class listed must:</P>
<UL>
<LI>exist on the classpath; and</LI>
<LI>implement the com.google.inject.Module interface.</LI>
</UL> 
<P>For more information on Guice, see http://code.google.com/p/google-guice/ .</P> 
]]>
<attribute fieldname="moduleClassName" key="true" description="The name of a Guice module which contributes bindings information to the application."/>
</entity>
<entity name="OpAuditTrail"><![CDATA[@curam.logicalname Operation Audit Trail
@curam.definition  A successful invocation of a top-level function.
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney registers a {@curam.entity core.Person Person}.  An row is created on this table to record the fact that Ronan Rooney successfully invoked the Person.register function.</P>
<P>An operator starts the `Generate Financials` batch process.  An row is created on this table to record the fact that the batch operator successfully invoked the batch process.</P>
@curam.technotes
<P>By default the option to record Operation Audit Trail information is switched off.  You can enable this option on a function-by-function basis by either <UL>
<LI>enabling the option on the relevant method in the Rose model; or </LI>
<LI>setting a property in your runtime application.  See the the Curam Server Modelling Guide for details.</LI>
</UL>
</P>
<P>For more information see the Curam Server Developer's Guide.</P>]]>
<attribute fieldname="timeEntered" description="The time at which the method was invoked."/>
<attribute fieldname="userId" description="The user who invoked the method."/>
<attribute fieldname="programName" description="The signature of the method which was invoked."/>
<attribute fieldname="tranType" description="The context in which the method was invoked.  This may be one of batch, online, deferred and other."/>
</entity>
<entity name="PropDescription"><![CDATA[@curam.logicalname Property Description
@curam.definition  A localized display name for a {@curam.entity internal.properties.Properties Property}.
@curam.description
<P>{@curam.entity internal.properties.Properties Properties} can be listed in the administration client and so must be displayed in the preferred language of the {@curam.entity core.Users User}.  You should provide translations for each {@curam.entity internal.properties.Properties Property} for each language that you support.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney (an English speaker) uses the administration client to display a list of {@curam.entity internal.properties.Properties Properties}.  The descriptions for the properties are displayed in English.</P>
<P>{@curam.entity core.Users User} Pierre (a French-speaker) opens the same screen but is presented with the properties described in French.</P>
@curam.technotes
<P>Rows in this table are initially created at design time from your `Application.prx` file.</P>
<P>For more information see the C&uacute;ram Server Developer's Guide.</P>]]>
<attribute fieldname="propertyID" key="true" description="Unique identifier for a property."/>
<attribute fieldname="localeIdentifier" key="true" description="Localized code that refers to the displayName and description."/>
<attribute fieldname="displayName" description="Value displayed to the Client."/>
<attribute fieldname="description" description="Description of the property."/>
</entity>
<entity name="Properties"><![CDATA[@curam.logicalname Property
@curam.definition  A system configuration for a running C&uacute;ram server application.
@curam.description
<P>The C&uacute;ram server application can be configured in many ways by changing various settings.  Many of these configuration settings can be changed dynamically while the application is running.  This table holds all the configuration settings and their values.</P>
@curam.example
<P>You deploy some custom functionality in your production application.  After running for some days your users complain of a bug in your new functionality.  To obtain more information about this bug you require more verbose logging.</P>
<P>To increase the verbosity of the logging, you:</P>
<UL>
<LI>open the administration client and navigate to 'Property Administration';</LI>
<LI>identify the setting for tracing and change the value to a more verbose setting;</LI>
<LI>click 'Ok'; and</LI>
<LI>click 'Publish'.</LI>
</UL>
<P>The C&uacute;ram Server immediately starts writing more verbose logs.  No server downtime is required.</P>
@curam.technotes
<P>Rows in this table are initially created at design time from your `Application.prx` file.</P>
<P>For more information see the C&uacute;ram Server Developer's Guide.</P>]]>
<attribute fieldname="propertyID" key="true" description="Unique identifier for a property."/>
<attribute fieldname="category" description="Logical grouping of the various properties e.g. Infrastructure - Diagnostic/Trace parameters."/>
<attribute fieldname="name" description="Property Name."/>
<attribute fieldname="value" description="Property Value."/>
<attribute fieldname="type" description="String, Boolean or Numeric."/>
<attribute fieldname="defaultValue" description="Used as a reset option for a property."/>
<attribute fieldname="dynamic" description="Whether a Property change has immediate effect or will require cycling servers."/>
</entity>
<entity name="RuleSetInformation"><![CDATA[@curam.logicalname Rule Set Information
@curam.definition  A set of rules for determining the eligibility of a {@curam.entity core.CaseHeader case}.
@curam.description
<P>The rows on this table are read and written by the Rules Editor when you define your eligibility rules for a {@curam.entity core.Product Product}.</P>
<P>The rows on this table are read by the Rules Engine when determining the eligibility of a {@curam.entity core.CaseHeader case} for the {@curam.entity core.Product Product}.</P>
@curam.example
<P>You create a new custom {@curam.entity core.Product Product} and define eligibility rules for {@curam.entity core.Product Product} using the Rules Editor.  The Rules Editor creates a row on this table to store your rules.</P>
<P>{@curam.entity core.Users User} Ronan Rooney creates a {@curam.entity core.ProductDelivery Product Delivery} case for your custom {@curam.entity core.Product Product} and records evidence for the case using online functionality.  He submits the case for approval and his supervisor {@curam.entity core.Users User} approves the case.  The case is queued for deferred eligibility determination.</P>
<P>The queue manager dequeues the request to determine eligibility for the case and invokes the Rules Engine.  The Rules Engine reads the row on this table to identify the rules which should be applied to the {@curam.entity core.ProductDelivery Product Delivery} case, retrieves evidence about the case (via Rules Loaders) and determines that the case is eligible and calculates payment rates for the case.</P>
@curam.technotes
<P>The set of rules is encoded in XML and may be quite large.</P>
<P>Rule sets may change over time to accommodate changes in legislation; however, older versions of rule sets may need to remain in order to determine eligibility for old cases.  The management of which rule set applies to a {@curam.entity core.CaseHeader case} is held on {@curam.entity core.ProductRulesLink Product Rules Link}.</P>
<P>By default, C&uacute;ram uses Rule Sets only in the determination of case eligibility; however, the possibility exists for you to re-use the Rules Engine to perform rule-based processing for other purposes.</P>
<P>For more information, see:</P>
<UL>
<LI>C&uacute;ram Rules Editor Guide; and</LI>
<LI>C&uacute;ram Rules Codification Guide.</LI>
</UL>]]>
<attribute fieldname="ruleSetID" key="true" description="Rule set ID is a string uniquely identifying a rule set. For example PRODUCT_10."/>
<attribute fieldname="definition" description="Rule set definition is a rule set XML definitions serialized into a string form."/>
<attribute fieldname="name" description="Rule set name is a name of the rule set. It stored in the rule set definition as well, but it is used as a separate field here efficiency reasons."/>
<attribute fieldname="type" description="Rule set type."/>
</entity>
<entity name="RuleSetLink"><![CDATA[@curam.logicalname Rule Set Link
@curam.definition  A parent-child relationship between a {@curam.entity internal.rules.RuleSetInformation Rule Set Information} record and a sub-{@curam.entity internal.rules.RuleSetInformation Rule Set Information} record.
@curam.description
<P>The Rules Editor allows you to decompose a Rule Set into a hierarchy of sub-Rule Sets to aid re-usability and maintenance.  This table is used by the Rules Editor when automatically validating Rule Sets which have been decomposed in this way.</P>
@curam.example
<P>You create a new custom {@curam.entity core.Product Product} and define eligibility rules for {@curam.entity core.Product Product} using the Rules Editor.  The Rule Set is large and contains some repeated rules.  You:</P>
<UL>
<LI>place these repeated rules in their own sub-Rule Set; and</LI>
<LI>break up the remainder of the Rule Set into separate areas (each in their own sub-Rule Set).</LI>
</UL>
<P>The Rules Editor creates rows on this table to increase the speed at which it can validate your sub-Rule Sets.</P>
@curam.technotes
<P>Note that the Rules Engine does NOT use this table - the XML for the parent Rule Set contains elements which allow the Rules Engine to identify and retrieve sub-Rule Sets.</P>
<P>For more information, see the C&uacute;ram Rules Editor Guide.</P>]]>
<attribute fieldname="masterRuleSetID" key="true" description="Master rule set ID."/>
<attribute fieldname="subRuleSetID" key="true" description="Sub rule set ID."/>
</entity>
<entity name="SecurityFidSid"><![CDATA[@curam.logicalname Security Function Identifier/Security Identifier
@curam.definition  A link between a {@curam.entity internal.security.FunctionIdentifier Function Identifier} and a {@curam.entity internal.security.SecurityIdentifier Security Identifier}.
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney attempts to register a {@curam.entity core.Person Person}.  He enters the registration information on a client screen and clicks a button.  The client application attempts to call the Person.register method.  The server application successfully authorizes that Ronan Rooney is permitted to access the Person.register method.  The data to support this authorization is as follows:</P>
<UL>
<LI>{@curam.entity core.Users User} Ronan Rooney has been assigned the {@curam.entity internal.security.SecurityRole Security Role} 'Case worker';</LI>
<LI>The {@curam.entity internal.security.SecurityRole Security Role} 'Case worker' is a member of the {@curam.entity internal.security.SecurityGroup Security Group} 'Front office';</LI>
<LI>The {@curam.entity internal.security.SecurityGroup Security Group} 'Front office' has been granted access to the {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register'; and</LI>
<LI>The {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register' relates to the {@curam.entity internal.security.FunctionIdentifier Function Identifier} 'Person.register'.  This relationship is stored as a Security Function Identifier/Security Identifier which links this {@curam.entity internal.security.SecurityIdentifier Security Identifier} and {@curam.entity internal.security.FunctionIdentifier Function Identifier}.</LI>
</UL>
@curam.technotes
<UL>
<LI> Each {@curam.entity internal.security.FunctionIdentifier Function Identifier} will have exactly one Security Function Identifier/Security Identifier; and
        </LI>
<LI>Each {@curam.entity internal.security.SecurityIdentifier Security Identifier} may have at most one Security Function Identifier/Security Identifier
        </LI>
</UL>
<P>...thus each {@curam.entity internal.security.FunctionIdentifier Function Identifier} will have exactly one {@curam.entity internal.security.SecurityIdentifier Security Identifier} and each {@curam.entity internal.security.SecurityIdentifier Security Identifier} may have at most one {@curam.entity internal.security.FunctionIdentifier Function Identifier}.</P>
<P>For more information see the C&uacute;ram Application Administration Guide.</P>]]>
<attribute fieldname="sidName" key="true" description="The security identifier name."/>
<attribute fieldname="fidName" key="true" description="The function identifier name."/>
</entity>
<entity name="SecurityGroup"><![CDATA[@curam.logicalname Security Group
@curam.definition  A grouping of security privileges.
@curam.description
<P>A Security Group allows an administrator to group the large number of C&uacute;ram {@curam.entity internal.security.SecurityIdentifier Security Identifiers} into a smaller number of manageable groups.  Any {@curam.entity core.Users Users} who have a {@curam.entity internal.security.SecurityRole Security Role} which is a member of the Security Group will have access to all the objects represented by the {@curam.entity internal.security.SecurityIdentifier Security Identifiers} belonging to the Security Group.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney attempts to register a {@curam.entity core.Person Person}.  He enters the registration information on a client screen and clicks a button.  The client application attempts to call the Person.register method.  The server application successfully authorizes that Ronan Rooney is permitted to access the Person.register method.  The data to support this authorization is as follows:</P>
<UL>
<LI>{@curam.entity core.Users User} Ronan Rooney has been assigned the {@curam.entity internal.security.SecurityRole Security Role} 'Case worker';</LI>
<LI>The {@curam.entity internal.security.SecurityRole Security Role} 'Case worker' is a member of the Security Group 'Front office';</LI>
<LI>The Security Group 'Front office' has been granted access to the {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register'; and</LI>
<LI>The {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register' relates to the {@curam.entity internal.security.FunctionIdentifier Function Identifier} 'Person.register'.</LI>
</UL>
@curam.technotes
<P>For more information see the C&uacute;ram Application Administration Guide.</P>]]>
<attribute fieldname="groupName" key="true" description="The name of a security group."/>
<attribute fieldname="description" description="The description of a security group."/>
</entity>
<entity name="SecurityGroupSid"><![CDATA[@curam.logicalname Security Group Security Identifier
@curam.definition  A link between a {@curam.entity internal.security.SecurityGroup Security Group} and a {@curam.entity internal.security.SecurityIdentifier Security Identifier}.
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney attempts to register a {@curam.entity core.Person Person}.  He enters the registration information on a client screen and clicks a button.  The client application attempts to call the Person.register method.  The server application successfully authorizes that Ronan Rooney is permitted to access the Person.register method.  The data to support this authorization is as follows:</P>
<UL>
<LI>{@curam.entity core.Users User} Ronan Rooney has been assigned the {@curam.entity internal.security.SecurityRole Security Role} 'Case worker';</LI>
<LI>The {@curam.entity internal.security.SecurityRole Security Role} 'Case worker' is a member of the {@curam.entity internal.security.SecurityGroup Security Group} 'Front office';</LI>
<LI>The {@curam.entity internal.security.SecurityGroup Security Group} 'Front office' has been granted access to the {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register'.  This relationship is stored as a Security Group Security Identifier which links this {@curam.entity internal.security.SecurityGroup Security Group} and {@curam.entity internal.security.SecurityIdentifier Security Identifier}; and</LI>
<LI>The {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register' relates to the {@curam.entity internal.security.FunctionIdentifier Function Identifier} 'Person.register'.</LI>
</UL>
@curam.technotes
<P>For more information see the C&uacute;ram Application Administration Guide.</P>]]>
<attribute fieldname="groupName" key="true" description="The name of a security group."/>
<attribute fieldname="sidName" key="true" description="The name of a security identifier."/>
</entity>
<entity name="SecurityIdentifier"><![CDATA[@curam.logicalname Security Identifier
@curam.definition  An object to which access can be granted.
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney attempts to register a {@curam.entity core.Person Person}.  He enters the registration information on a client screen and clicks a button.  The client application attempts to call the Person.register method.  The server application successfully authorizes that Ronan Rooney is permitted to access the Person.register method.  The data to support this authorization is as follows:</P>
<UL>
<LI>{@curam.entity core.Users User} Ronan Rooney has been assigned the {@curam.entity internal.security.SecurityRole Security Role} 'Case worker';</LI>
<LI>The {@curam.entity internal.security.SecurityRole Security Role} 'Case worker' is a member of the {@curam.entity internal.security.SecurityGroup Security Group} 'Front office';</LI>
<LI>The {@curam.entity internal.security.SecurityGroup Security Group} 'Front office' has been granted access to the Security Identifier 'Person.register'; and</LI>
<LI>The Security Identifier 'Person.register' relates to the {@curam.entity internal.security.FunctionIdentifier Function Identifier} 'Person.register'.</LI>
</UL>
@curam.technotes
<P>The vast majority of Security Identifier rows have a sidType of FUNCTION and thus relate to {@curam.entity internal.security.FunctionIdentifier Function Identifier} rows (and are named identically to them).</P>
<P>Security Identifier rows which have other sidType values do not related to {@curam.entity internal.security.FunctionIdentifier Function Identifier} rows and may instead related to FIELDs or PRODUCT rows.</P>
<P>For more information see the C&uacute;ram Application Administration Guide.</P>]]>
<attribute fieldname="sidName" key="true" description="The name of a security identifier."/>
<attribute fieldname="sidType" description="The type of a security identifier. For example FUNCTION, PRODUCT, etc."/>
<attribute fieldname="description" description="The description of a security identifier."/>
</entity>
<entity name="SecurityRoleGroup"><![CDATA[@curam.logicalname Security Role Group
@curam.definition  A link between a {@curam.entity internal.security.SecurityRole Security Role} and a {@curam.entity internal.security.SecurityGroup Security Group}.
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney attempts to register a {@curam.entity core.Person Person}.  He enters the registration information on a client screen and clicks a button.  The client application attempts to call the Person.register method.  The server application successfully authorizes that Ronan Rooney is permitted to access the Person.register method.  The data to support this authorization is as follows:</P>
<UL>
<LI>{@curam.entity core.Users User} Ronan Rooney has been assigned the {@curam.entity internal.security.SecurityRole Security Role} 'Case worker';</LI>
<LI>The {@curam.entity internal.security.SecurityRole Security Role} 'Case worker' is a member of the {@curam.entity internal.security.SecurityGroup Security Group} 'Front office'.  This relationship is stored as a Security Role Group which links this {@curam.entity internal.security.SecurityRole Security Role} and {@curam.entity internal.security.SecurityGroup Security Group};</LI>
<LI>The {@curam.entity internal.security.SecurityGroup Security Group} 'Front office' has been granted access to the {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register'; and</LI>
<LI>The {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register' relates to the {@curam.entity internal.security.FunctionIdentifier Function Identifier} 'Person.register'.</LI>
</UL>
@curam.technotes
<P>For more information see the C&uacute;ram Application Administration Guide.</P>]]>
<attribute fieldname="roleName" key="true" description="The name of a security role."/>
<attribute fieldname="groupName" key="true" description="The name of a security group."/>
</entity>
<entity name="SecurityRole"><![CDATA[@curam.logicalname Security Role
@curam.definition  A role that a {@curam.entity core.Users User} plays in the `{@curam.entity core.Organisation Organization}`.
@curam.description
<P>Each {@curam.entity core.Users User} is assigned to only one Security Role.  Each Security Role may be a member of a number of {@curam.entity internal.security.SecurityGroup Security Groups}, which specify which functions (and other {@curam.entity internal.security.SecurityIdentifier Security Identifiers}) a {@curam.entity core.Users User} has access to.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney attempts to register a {@curam.entity core.Person Person}.  He enters the registration information on a client screen and clicks a button.  The client application attempts to call the Person.register method.  The server application successfully authorizes that Ronan Rooney is permitted to access the Person.register method.  The data to support this authorization is as follows:</P>
<UL>
<LI>{@curam.entity core.Users User} Ronan Rooney has been assigned the Security Role 'Case worker';</LI>
<LI>The Security Role 'Case worker' is a member of the {@curam.entity internal.security.SecurityGroup Security Group} 'Front office';</LI>
<LI>The {@curam.entity internal.security.SecurityGroup Security Group} 'Front office' has been granted access to the {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register'; and</LI>
<LI>The {@curam.entity internal.security.SecurityIdentifier Security Identifier} 'Person.register' relates to the {@curam.entity internal.security.FunctionIdentifier Function Identifier} 'Person.register'.</LI>
</UL>
@curam.technotes
<P>For more information see the C&uacute;ram Application Administration Guide.</P>]]>
<attribute fieldname="roleName" key="true" description="The name of the security role."/>
</entity>
<entity name="TabSession"><![CDATA[@curam.logicalname Tab Session
@curam.definition  A record of the tab session data for a user.
@curam.description
<P>Tab Session stores a record of the current tabs open for a particular user. This data is used to restore a users session after both a browser refresh (f5) and after logging out of the application. The data may be fragmented across multiple records if it grows too big. It will be reassembled according to the sequence number of the fragments.</P>
@curam.example
<P>{@curam.entity core.Users User} Ronan Rooney logs in to the application and opens a number of tabs, including the Person tabs for James Smith and Linda Smith. He the logs out of the application and subsequently logs in from a different machine. After login, the previously displayed tabs for James Smith and Linda Smith are still open in his view.</P>
@curam.technotes
<P>For more information on tab session management see the C&uacute;ram Web Client Reference Manual.</P>]]>
<attribute fieldname="userName" key="true" description="The username identifying the owner of the recorded tab session."/>
<attribute fieldname="data" description="A fragment of the compressed tab session data. The data is fragmented into smaller fields and assembled according to the sequence number."/>
<attribute fieldname="sequenceNo" key="true" description="The sequence number for this fragment of the tab session data."/>
</entity>
<entity name="UserPreferenceInfo"><![CDATA[@curam.logicalname User Preference Information
@curam.definition  A name/value pair (wrapped in an XML string) defining a setting that a user can customize to their taste.
@curam.description
<P> A {@curam.entity core.Users User} can set many personal preferences in an application.  Individual users' preferences are stored in User Preference Information records.  The default set of preferences used when a user has not specified any preferences is also stored in User Preference Information records.  When a user sets a personal preference, a User Preference Information record is created.  This record contains the name of the preference in question and the value the user has chosen.  The record forms part of a preference set, which is simply the set of preferences that the user has changed from the default.</P>
@curam.example
<P>
<UL>
<LI> Your application is deployed with a default time zone preference of 'GMT'.  There is a User Preference Information record for this default preference.  It has a Preference Set ID of 'DefaultPreference'.</LI>
<LI> {@curam.entity core.Users User} Ronan Rooney logs in to your application. The system checks Ronan's {@curam.entity core.Users User} record and finds he has not set any personal preferences yet.  The system retrieves the default time zone preference and uses the value obtained (GMT) for Ronan's session.</LI>
<LI> Ronan opens the user preference editor, selects the 'Time Zone' preference and changes it to GMT+1.  The system finds that this is the first personal preference that Ronan has set, so it creates a Preference Set ID for Ronan's {@curam.entity core.Users User} record.  It then creates a new User Preference Information record referencing that Preference Set ID and containing Ronan's preferred time zone.</LI> 
<LI>Ronan then opens the user preference editor, selects the Modal Dialogs preference and changes it to 'off'.  The system finds that Ronan has set preferences before, so it creates a new User Preference Information record referencing the same Preference Set ID as before and containing Ronan's preferred modal setting.</LI>
</UL>
@curam.technotes
See the C&uacute;ram Server Developers Guide for further information.]]>
<attribute fieldname="userPrefSetId" key="true" description="The user preference set id."/>
<attribute fieldname="userPrefXML" description="The user preference xml."/>
<attribute fieldname="userPrefName" key="true" description="The user preference name."/>
</entity>
<entity name="Users"><![CDATA[@curam.logicalname User
@curam.definition  A person employed by the `{@curam.entity core.Organisation organization}` to perform tasks on the system.
@curam.example
<P>Ronan Rooney is a user.</P>
@curam.technotes
<P>By default, C&uacute;ram installs with a number of default users.  You should ensure that you change the default passwords for all these users to secure your production system.</P>]]>
<attribute fieldname="userName" key="true" description="The security user name."/>
<attribute fieldname="password" description="The password."/>
<attribute fieldname="pwdChangeEveryXDay" description="The number of days to password expiry."/>
<attribute fieldname="passwordChanged" description="The date of last password change."/>
<attribute fieldname="loginFailures" description="The number of login failures since last successful login."/>
<attribute fieldname="roleName" description="The security role name. Nulls are allowed on this field to accommodate creation of users where role name is unknown."/>
<attribute fieldname="applicationCode" description="The code of the application this user can open."/>
<attribute fieldname="accountEnabled" description="Boolean to indicate if the account is enabled."/>
<attribute fieldname="passwordExpiryDate" description="The password expiry date."/>
<attribute fieldname="lastSuccessLogin" description="The last successful login date."/>
<attribute fieldname="loginRestrictions" description="Boolean to indicate if the login restrictions are in use."/>
<attribute fieldname="loginTimeFrom" description="The time a user can login from."/>
<attribute fieldname="loginTimeTo" description="The time a user can login to."/>
<attribute fieldname="loginDaySun" description="Boolean to indicate if the user can login on a Sunday."/>
<attribute fieldname="loginDayMon" description="Boolean to indicate if the user can login on a Monday."/>
<attribute fieldname="loginDayTues" description="Boolean to indicate if the user can login on a Tuesday."/>
<attribute fieldname="loginDayWed" description="Boolean to indicate if the user can login on a Wednesday."/>
<attribute fieldname="loginDayThurs" description="Boolean to indicate if the user can login on a Thursday."/>
<attribute fieldname="loginDayFri" description="Boolean to indicate if the user can login on a Friday."/>
<attribute fieldname="loginDaySat" description="Boolean to indicate if the user can login on a Saturday."/>
<attribute fieldname="pwdChangeAfterXLog" description="The number of login attempts that are allowed before the password must be changed (0 indicates no check)."/>
<attribute fieldname="logsSincePWDChange" description="The number of logins since the password was changed."/>
<attribute fieldname="ctiEnabled" description="Curam Telephony Integration (CTI) functionality has been removed and therefore this attribute is no longer used in the SPM application.&#10;Boolean to indicate if the CTI applet should be enabled for this user."/>
<attribute fieldname="defaultLocale" description="The default locale associated with the user."/>
<attribute fieldname="userPrefSetID" description="The preference set to be used by the user."/>
<attribute fieldname="title" description="A form of nomenclature identifying the user's status. Codetable is 'PersonTitle'. The value of this attribute comes from a codetable (PersonTitle) in the application."/>
<attribute fieldname="firstname" description="The first or christian name of the User."/>
<attribute fieldname="surname" description="The common name, or the hereditary name, of a user."/>
<attribute fieldname="upperUserName" description="The security user name in upper case."/>
</entity>
<entity name="ValidationStatus"><![CDATA[@curam.logicalname Customizable Validation Status
@curam.definition  Records customizable validation names and their associated status.
@curam.description
<P>This is a technical table.</P>
<P>This entity cannot be written to by the application.  The rows on this entity are populated solely from data manager (DMX) files.</P> 
@curam.example
<P>In order to disable a customizable validation, specify the fully scoped validation name in a custom data manager file for this table with an enabled flag of false. Fully scoped valiation names are of form <I>packagename.CustomizableValidatorInterfaceName.validationMethod</I></P>
<P>Note that by default, Customizable Validations that are <B>not</B> listed in this table are enabled.</P>
<BR/>
<P><B>Example:</B>If <I>curam.example.PersonCustomizableValidator</I> is an customizable validator interface with a validation method <I>validateFirstName()</I>, then adding <I>curam.example.PersonCustomizableValidator.validateFirstName</I> with an ENABLED flag of false will disable the validateFirstName validation. </P>
@curam.technotes
<P>This table holds a list of Customizable Validaiton Names together with their enabled/disabled status</P>
]]>
<attribute fieldname="validationId" key="true" description="The primary key of the entity."/>
<attribute fieldname="validationName" description="The fully scoped validation name."/>
<attribute fieldname="enabled" description="True (1) if the validation is enabled. False (0) if it is disabled."/>
<attribute fieldname="recordStatus" description="Status used to indicate whether or not record is active. If active, set to RST1. If inactive (logically deleted), set to RST2. Will also be used in future to support transports."/>
</entity>
<entity name="XMLArchiveDoc"><![CDATA[@curam.logicalname XML Archive Document
@curam.definition  An archived XML document that can be retrieved for re-printing.
@curam.description
<P>Most organizations have a requirement that (for legal reasons) correspondence from the organization must be reproducible in the original format with the original content intact.</P>
<P>If the XML document used to create the correspondence were always created on-the-fly, then any changes to the client data on the database would prevent the original correspondence from being reproduced at a later time. To prevent this, a row is created on this table to hold the XML document containing the data as it existed at the time the correspondence was created.  This row can be retrieved at a later time to recreate the exact contents of the document.</P>
<P>A row on this table only contains the data that is inserted into a template. The XSL stylesheet/template converts this into a proper document by inserting the data into the correct location within a template that contains boilerplate text. The document can then be re-printed.</P>
@curam.example
<P>You implement some new functionality that requires a new XSL template for printing correspondence to a {@curam.entity core.Person Person}.  {@curam.entity core.Users User} Ronan Rooney creates a new XSL template for this type of correspondence and uploads it.</P>
<P>{@curam.entity core.Users User} Ronan Rooney then uses your new functionality to format and print a letter to {@curam.entity core.Person Person} John Smith.  The C&uacute;ram Server retrieves data about John Smith (including his name, address and date of birth) and passes it to the XML infrastructure.</P>
<P>The XML infrastructure formats John Smith's data into a printable document using the appropriate XSL template.  The XML infrastructure then creates a row on this table to store John Smith's data and a reference to the version of the XSL template which was used to format it.  The XML infrastructure then prints this document and {@curam.entity core.Users User} Ronan Rooney puts the printed document into an envelope and mails it to John Smith.</P>
<P>{@curam.entity core.Users User} Ronan Rooney then notices a typographical error in the XSL template.  He fixes this error, creating a new {@curam.entity internal.xml.XSLTemplateInst XSL Template Instance} with the version number 2.</P>
<P>{@curam.entity core.Person Person} John Smith receives the letter and notifies the organization that his date of birth (as held by the organization) is incorrect.  He subsequently moves house and takes legal action against the organization.  To support the organization's defense, {@curam.entity core.Users User} Ronan Rooney re-prints the letter that was sent to John Smith.  The XML infrastructure retrieves the data for the letter from this table and from it identifies the version of the template which was originally used to print the letter (version 1, containing the typographical error).  The XML infrastructure retrieves version 1 of the template from this table and formats the letter exactly as it was sent to John Smith (including his original address before he moved house and the incorrect date of birth).</P>
@curam.technotes
<P>The archiving of the data used to create a document is implementation-specific - archiving does not occur automatically.</P>
<P>For more information see the C&uacute;ram XML Infrastructure Guide.</P>]]>
<attribute fieldname="documentID" key="true" description="The unique ID of this archived XML document."/>
<attribute fieldname="templateID" description="The unique ID of the XSL template used to format/print this document."/>
<attribute fieldname="localeIdentifier" description="The language/country code."/>
<attribute fieldname="templateVersion" description="The version number of the template used to print this document."/>
<attribute fieldname="documentName" description="A name or short description for this document."/>
<attribute fieldname="document" description="The content of the XML document."/>
</entity>
<entity name="XSLTemplateInst"><![CDATA[@curam.logicalname XSL Template Instance
@curam.definition  A version of an {@curam.entity internal.xml.XSLTemplate XSL Template} that can be used to format an XML document.
@curam.description
<P>Most organizations have a requirement that (for legal reasons) correspondence from the organization must be reproducible in the original format with the original content intact.</P>
<P>Each XSL stylesheet/template may undergo a number of changes, e.g. to correct errors or conform to new requirements.  However, an old version of a stylesheet/template cannot be changed directly (as this would prevent the correct re-printing of documents formatted using that template) - instead a new version is created.</P>
@curam.example
<P>You implement some new functionality that requires a new XSL template for printing correspondence to a {@curam.entity core.Person Person}.  {@curam.entity core.Users User} Ronan Rooney creates a new XSL template for this type of correspondence and uploads it.  A row is created on this table (with a version number of 1) to store the XSL template.</P>
<P>{@curam.entity core.Users User} Ronan Rooney then uses your new functionality to format and print a letter to {@curam.entity core.Person Person} John Smith.  The C&uacute;ram Server retrieves data about John Smith and passes it to the XML infrastructure.</P>
<P>The XML infrastructure identifies the version number of the latest template instance (in this case, 1).  The XML infrastructure retrieves the corresponding row from this table and uses it to format John Smith's data into a printable document.  The XML infrastructure then prints this document and {@curam.entity core.Users User} Ronan Rooney puts the printed document into an envelope and mails it to John Smith.</P>
<P>{@curam.entity core.Users User} Ronan Rooney then notices a typographical error in the XSL template.  He:</P>
<UL>
<LI>'checks out' the template; the XML infrastructure retrieves the row from this table and downloads the corresponding document to Ronan Rooney's machine;</LI>
<LI>edits the XSL template to correct the typographical error; and</LI>
<LI>'checks in' his changes to the XSL template; the XML infrastructure creates a new row on this table with the version number 2.</LI>
</UL>
<P>{@curam.entity core.Users User} Ronan Rooney uses your new functionality to format and print a letter to {@curam.entity core.Person Person} Mary Smith.  The XML infrastructure uses the latest version of the XSL template to format and print the letter (version 2, containing the correction to the typographical error).</P>
<P>{@curam.entity core.Person Person} John Smith takes legal action against the organization.  To support the organization's defense, {@curam.entity core.Users User} Ronan Rooney re-prints the letter that was sent to John Smith.  The XML infrastructure retrieves the data for the letter from {@curam.entity internal.xml.XMLArchiveDoc XML Archive Document} and from it identifies the version of the template which was originally used to print the letter (version 1, containing the typographical error).  The XML infrastructure retrieves version 1 of the template from this table and formats the letter exactly as it was sent to John Smith.</P>
@curam.technotes
<P>For more information see the C&uacute;ram XML Infrastructure Guide.</P>]]>
<attribute fieldname="templateID" key="true" description="The unique ID of this template. Combined with the templateVersion to give a unique key."/>
<attribute fieldname="localeIdentifier" key="true" description="The language/country code."/>
<attribute fieldname="templateVersion" key="true" description="The version number of this template. Combined with the templateID to give a unique key."/>
<attribute fieldname="document" description="The content of this XSL template."/>
<attribute fieldname="ciComment" description="A comment when checking in or checking out templates."/>
<attribute fieldname="timeEntered" description="The time that the template was created."/>
<attribute fieldname="createdBy" description="The user that created the template."/>
</entity>
<entity name="XSLTemplate"><![CDATA[@curam.logicalname XSL Template
@curam.definition  A family of versions of a stored XSL stylesheet/template.
@curam.description
<P>Most organizations have a requirement that (for legal reasons) correspondence from the organization must be reproducible in the original format with the original content intact.</P>
<P>Each XSL stylesheet/template may undergo a number of changes, e.g. to correct errors or conform to new requirements.  However, an old version of a stylesheet/template cannot be changed directly (as this would prevent the correct re-printing of documents formatted using that template) - instead a new version is created.</P>
<P>A row on this table holds the version number of the most recent version of the template and its editorial status.</P>
@curam.example
<P>You implement some new functionality that requires a new XSL template for printing correspondence to a {@curam.entity core.Person Person}.  {@curam.entity core.Users User} Ronan Rooney creates a new XSL template for this type of correspondence and uploads it.  A row is created on this table with a version number of 1.</P>
<P>{@curam.entity core.Users User} Ronan Rooney then uses your new functionality to format and print a letter to {@curam.entity core.Person Person} John Smith.  The C&uacute;ram Server retrieves data about John Smith and passes it to the XML infrastructure, together with the 'ID code' for the row on this table.</P>
<P>The XML infrastructure retrieves the row from this table and from it identifies the version number of the latest template instance (in this case, 1).  The XML infrastructure retrieves the corresponding {@curam.entity internal.xml.XSLTemplateInst XSL Template Instance} row and uses it to format John Smith's data into a printable document.  The XML infrastructure then prints this document and {@curam.entity core.Users User} Ronan Rooney puts the printed document into an envelope and mails it to John Smith.</P>
<P>{@curam.entity core.Users User} Ronan Rooney then notices a typographical error in the XSL template.  He:</P>
<UL>
<LI>'checks out' the template; the XML infrastructure updates the row on this table to show that the template is checked out;</LI>
<LI>edits the XSL template to correct the typographical error; and</LI>
<LI>'checks in' his changes to the XSL template; the XML infrastructure creates a new row on {@curam.entity internal.xml.XSLTemplateInst XSL Template Instance} with the version number 2, and updates the row on XSL Template to show that the template is no longer checked out and that the latest version is 2.</LI>
</UL>
<P>{@curam.entity core.Users User} Ronan Rooney uses your new functionality to format and print a letter to {@curam.entity core.Person Person} Mary Smith.  The XML infrastructure uses the latest version of the XSL template to format and print the letter (version 2, containing the correction to the typographical error).</P>
@curam.technotes
<P>The version of a template that is edited is not always the latest one. Any previous version can be edited and (when it is checked-in it) will become the new 'latest version'.</P>
<P>New documents are always formatted using the latest version of the corresponding template.</P>
<P>Each row on this table stores an 'ID code' to permit the row to be identified by application logic and retrieved.</P>
<P>For more information see the C&uacute;ram XML Infrastructure Guide.</P>]]>
<attribute fieldname="templateID" key="true" description="The unique ID of an XSL template document."/>
<attribute fieldname="localeIdentifier" key="true" description="The language/country code."/>
<attribute fieldname="templateName" description="A name or short description of an XML document."/>
<attribute fieldname="latestVersion" description="The version number (unsigned int) of an XSL template document."/>
<attribute fieldname="checkedOut" description="True if the template is checked out, false otherwise."/>
<attribute fieldname="checkedOutBy" description="The name of the user the template is checked out to."/>
<attribute fieldname="checkedOutVersion" description="The version number (unsigned int) of the checked out XSL template document."/>
<attribute fieldname="checkedOutTime" description="The time at which the template was checked out."/>
<attribute fieldname="coComment" description="A comment when checking in or checking out templates."/>
<attribute fieldname="templateFile" description="The name of a template file that is the source or destination of a template."/>
<attribute fieldname="templateType" description="The type code for this template."/>
<attribute fieldname="templateIDCode" description="The ID code for this template. This allows templates to be associated one-to-one with a code table for easy selection and server-side code maintenance."/>
<attribute fieldname="editable" description="True if the template is editable, false otherwise."/>
<attribute fieldname="relatesTo" description="A code specifying a type of relationship between this template and another type of entity (e.g., a claim or a case, etc.)."/>
</entity>
</entities>