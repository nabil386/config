<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
Copyright 2006-2018 Curam Software Ltd.
All rights reserved.

This software is the confidential and proprietary information of Curam
Software, Ltd. ("Confidential Information"). You shall not disclose
such Confidential Information and shall use it only in accordance with the
terms of the license agreement you entered into with Curam Software.
-->
<!--
Builds the main classes for a component and sets up the component
configuration and additional targets supporting other features like testing,
Checkstyle reports, etc.

NOTE: THE BASEDIR WHEN THIS SCRIPT RUNS IS THE PROJECT FOLDER, NOT THE FOLDER
CONTAINING THIS SCRIPT.
-->
<project name="build.component">
  <!--
  Set up the core properties for the build environment. Load the properties
  that define the common project structure. Until the environment properties
  are loaded, the location of the JDE, etc. have not been determined. See the
  "build-environment.xml" script for details on what will be defined.
  -->
  <import file="build-environment.xml" />
  <import file="build-structure.xml" />

  <!--
  Sets up properties used to access third-party JARs or other external
  resources. Paths are relative to the specific component's project directory,
  not to the top-level "components" directory. Loads the project-specific
  configuration information that depends on the other common properties.

  NOTE: THESE PROPERTIES FILES ARE RELATIVE TO THE COMPONENT PROJECT FOLDER,
  NOT RELATIVE TO THE LOCATION OF THIS SCRIPT FILE. USUALLY, MULTIPLE COMPONENT
  PROJECTS HAVE A COMMON PARENT FOLDER THAT DEFINES THE JAR FILES AND CLASSES
  FOLDERS FOR THAT GROUP OF PROJECTS. THE "build-config.properties" FILE IS
  LOCATED WITHIN THE COMPONENT PROJECT FOLDER ITSELF.
  -->
  <property file="../jar-files.properties" />
  <property file="../class-folders.properties" />
  <property file="${dir.cdej}/bin/components/cdej.properties" />
  <property file="build-config.properties" />


  <!--
  Define the Ant Contrib tasks.
  -->
  <taskdef resource="net/sf/antcontrib/antlib.xml"
           classpath="${jar.ant.contrib}"/>

  <!--
  Import other targets.
  -->
  <import file="build-compile.xml"/>
  <import file="build-jar.xml"/>
  <import file="build-test.xml"/>
  <import file="build-javadoc.xml"/>
  <import file="build-site.xml"/>
  <import file="build-eclipse.xml"/>
  <import file="build-checkstyle.xml"/>
  <!-- Comment back in when Findbugs has been upgraded. -->
  <!-- <import file="build-findbugs.xml"/> -->
  <import file="build-javascript.xml"/>



  <!--
  Cleans up all of the build output.
  -->
  <target name="clean" description="Deletes all of the build output.">
    <delete dir="${dir.target}" quiet="true" />
  </target>



  <!--
  Prints out information about the configuration used for this build.
  -->
  <target name="diagnostics">
    <tstamp>
      <format property="diag.time" pattern="dd-MMM-yyyy HH:mm:ss"/>
    </tstamp>
    <echo message="-------------------------------------------------------" />
    <echo message="Component name:              ${ant.project.name}" />
    <echo message="-------------------------------------------------------" />
    <echo message="Start time:                  ${diag.time}"/>
    <echo message="Component base directory:    ${basedir}" />
    <echo message="JDE root directory:          ${dir.jde}" />
    <echo message="CDEJ release directory:      ${dir.cdej}" />
    <echo message="SDEJ release directory:      ${dir.sdej}" />
    <echo message="Ant directory:               ${ant.home}" />
    <echo message="Java directory:              ${java.home}" />
    <echo message="Java version:                ${ant.java.version}" />
    <echo message="J2EE JAR file:               ${jar.j2ee}" />
    <echo message="Compile classpath:           ${cp.compile}" />
    <echo message="Compile boot classpath:      ${cp.boot.compile}" />
    <echo message="Compile test classpath:      ${cp.compile.test}" />
    <echo message="Compile test boot classpath: ${cp.boot.compile.test}" />
    <echo message="Run test classpath:          ${cp.run.test}" />
    <echo message="Run test boot classpath:     ${cp.boot.run.test}" />
    <echo message="Test suite:                  ${test.suite}" />
    <echo message="-------------------------------------------------------" />
  </target>

</project>
