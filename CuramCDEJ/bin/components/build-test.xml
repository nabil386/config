<?xml version="1.0" encoding="ISO-8859-1"?>
<!--

Copyright IBM Corporation 2017,2021 All Rights Reserved.

This software is the confidential and proprietary information of Curam
Software, Ltd. ("Confidential Information"). You shall not disclose
such Confidential Information and shall use it only in accordance with the
terms of the license agreement you entered into with Curam Software.
-->
<!--
Builds and executes the unit tests for the component. This depends on targets
and definitions in the "build-component.xml" script which imports this script.
-->
<project name="build.test">

  <import file="../../../../../BuilderScripts/properties.xml"/>
  <!--
  These properties are fixed relative to the base directory of the component,
  as the project structure does not vary.
  -->
  
  <property name="dir.rpt.test" value="${dir.target}/test-report" />

  <!--
  Compile the test classes for this component and copy any properties files or
  other resource files. This depends on the compilation of the deliverable
  classes and those classes will be added automatically to the classpath when
  compiling the test classes as will the JUnit JAR file.
  -->
  <target name="test-compile"
    depends="compile, -mkdirs-test-classes, -compile-test, copy-test-resources"
    description="Compiles the test classes." />

  <target name="-compile-test" if="has.test.java">
    <javac destdir="${dir.cls.test}" includeantruntime="false"
           sourcepath="" srcdir="${dir.src.test}/java" source="1.8" target="1.8"
           fork="true" excludes="${compile.test.excludes}"
           debug="true" debuglevel="lines,vars,source"
           classpath="${jar.jde.commons};${jar.coreinf.ejb.interfaces};${dir.cls.main};${cp.compile.test};${jar.junit};${jar.dom4j};${jar.jaxen};"
           bootclasspath="${cp.boot.compile.test};${sun.boot.class.path}" />
    <copy todir="${dir.cls.test}">
      <fileset dir="${dir.src.test}/java">
        <include name="**/*.properties"/>
      </fileset>
    </copy> 
  </target>

   


  <!--
  This target can be run from Eclipse (hence no "-" at the start), but we
  don't need it on the command line (hence no description).
  -->
  <target name="copy-test-resources" if="has.test.resources">
    <copy todir="${dir.cls.test}">
      <fileset dir="${dir.src.test}/resources">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <target name="-mkdirs-test-classes" if="has.test.content">
    <mkdir dir="${dir.cls.test}" />
  </target>

  <!--
  Run the tests for this component. The test will be compiled if they are not
  already. The deliverable classes and the test classes will automatically be
  added to the classpath when executing the tests.
  -->
  <target name="test"
          depends="test-compile,-set-test-jvmargs-default, -run-tests, -test-report, -fail-tests"
          description="Runs the tests and produces a test report."/>

  <target name="-set-test-jvmargs-default" unless="test.jvm.args.override">
	<property name="test.jvm.args.override" value="-Dfake.property=1"/> 
  </target>	
	
	
  <target name="-run-tests" if="has.test.java">
    <mkdir dir="${dir.rpt.test}" /> 
  	<echo message="test.jvm.args.override ${test.jvm.args.override}"/>
  	<!--
    Need to fork and set the current directory to this script's base directory,
    otherwise the Java current directory for the tests may not be the expected
    component directory when this script is invoked from another location.
    -->
    <junit failureproperty="tests.failed" fork="true" dir="${basedir}">
      <classpath>
        <pathelement location="${jar.jde.commons}" />
        <pathelement location="${jar.coreinf.ejb.interfaces}" />
        <pathelement location="${jar.junit}" />
        <pathelement location="${jar.ant}" />
        <pathelement location="${jar.ant.junit}" />
        <pathelement location="${jar.ant.launcher}" />
        <pathelement path="${dir.cls.main};${dir.cls.test}" />
        <pathelement path="${cp.run.test}" />
        <pathelement path="${jar.dom4j}"/>
        <pathelement path="${jar.jaxen}"/>
        <pathelement path="${jar.jsoup}" />
      </classpath>
      <jvmarg value="-Xbootclasspath/p:${cp.boot.run.test}" />
      <jvmarg value="${test.jvm.args.override}" />
      <jvmarg value="-javaagent:${jar.jmockit}" />
      <test name="${test.suite}" todir="${dir.rpt.test}">
        <!--
        TODO: Should make these formatters conditional on whether or not we
        are running on a builder machine, as it it better to have information
        in the log on a builder than have an inaccessible report file.
        -->
        <formatter type="brief" usefile="false" />
        <formatter type="xml" />
      </test>
    </junit>
  </target>

  <target name="-test-report">
    <mkdir dir="${dir.rpt.test}/html" />
    <junitreport tofile="${dir.rpt.test}/report.xml">
      <fileset dir="${dir.rpt.test}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${dir.rpt.test}/html"/>
    </junitreport>

    <!-- Extract some values from the XML report. -->
    <xslt in="${dir.rpt.test}/report.xml"
          out="${dir.rpt.test}/report.properties"
          style="${dir.bld.scripts}/test-summary.xsl" />
  </target>

  <target name="-fail-tests" unless="no.test.failure.on.error">
    <fail message="Tests failed. See test report." if="tests.failed" />
  </target>

</project>
