<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
Licensed Materials - Property of IBM

PID 5725-H26

Copyright IBM Corporation 2015,2020. All rights reserved.

US Government Users Restricted Rights - Use, duplication or disclosure
restricted by GSA ADP Schedule Contract with IBM Corp.
-->
<xsl:stylesheet version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:template match="PAGE" mode="file-edit-control">
    <chunk type="accessor" name="{@PAGE_ID}">
      <xsl:apply-templates select="." mode="file-edit-accessor"/>
    </chunk>
  </xsl:template>
    
  <xsl:template match="PAGE" mode="file-edit-accessor">
    <xsl:variable name="edit-widget" select="DISPLAY/descendant::WIDGET[@TYPE = 'FILE_EDIT']"/>
    <xsl:variable name="doc-bean" select="$edit-widget/WIDGET_PARAMETER[@NAME='DOCUMENT']"/>
    <xsl:variable name="content-bean" select="$doc-bean/@SOURCE_BEAN"/>
    <xsl:variable name="content-field" select="$doc-bean/@SOURCE_FIELD"/>
    <xsl:variable name="target-bean" select="$doc-bean/@TARGET_BEAN"/>
    <xsl:variable name="target-field" select="$doc-bean/@TARGET_FIELD"/>
    <xsl:variable name="details-bean" select="$edit-widget/WIDGET_PARAMETER[@NAME = 'DETAILS']/@SOURCE_BEAN"/>
    <xsl:variable name="details-field" select="$edit-widget/WIDGET_PARAMETER[@NAME = 'DETAILS']/@SOURCE_FIELD"/>
    <xsl:variable name="same-bean" select="$details-bean = $content-bean"/>
  <xsl:text>
  /**
   * Generated by Curam CDEJ Code Generator
   */
package </xsl:text><xsl:value-of select="$package-prefix"/><xsl:text>.accessors;

import curam.omega3.taglib.message.Omega3Messages;
import curam.omega3.texthelper.TextHelper;
import curam.omega3.user.UserPreferencesFactory;
import curam.util.client.ClientException;
import curam.util.common.JDEException;
import curam.util.common.message.generated.RuntimeMessages;
import curam.util.client.domain.convert.SvrBlobConverter;
import java.util.Date;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import curam.util.client.jsp.FileEditUtil;
</xsl:text>
<xsl:apply-templates select="DISPLAY/SERVER_INTERFACE|ACTION/SERVER_INTERFACE" mode="file-edit-imports"/>
<xsl:text>
public class </xsl:text><xsl:value-of select="@PAGE_ID"/><xsl:text>DocAccessor {
  private static final boolean sameBean</xsl:text>
    <xsl:if test="$same-bean"><xsl:text> = true;</xsl:text></xsl:if>
	<xsl:text>&#xa;</xsl:text>
  <xsl:apply-templates select="DISPLAY/SERVER_INTERFACE[@NAME=$content-bean]" mode="file-edit-fields">
      <xsl:with-param name="role" select="'Contents'"/>
      <xsl:with-param name="field-name" select="$content-field"/>
    </xsl:apply-templates>
    <xsl:apply-templates select="DISPLAY/SERVER_INTERFACE[@NAME=$details-bean]" mode="file-edit-fields">
      <xsl:with-param name="role" select="'Details'"/>
      <xsl:with-param name="field-name" select="$details-field"/>
    </xsl:apply-templates>
    <xsl:apply-templates select="ACTION/SERVER_INTERFACE[@NAME=$target-bean]" mode="file-edit-fields">
      <xsl:with-param name="role" select="'Target'"/>
      <xsl:with-param name="field-name" select="$target-field"/>
    </xsl:apply-templates>
<xsl:text>
  public synchronized static long initSrc(final HttpServletRequest req, final ServletContext application,
              final String token) throws JDEException {
    TextHelper contentsBean = </xsl:text><xsl:apply-templates select="DISPLAY/SERVER_INTERFACE[@NAME=$content-bean]" mode="file-edit-beans"/>
  <xsl:text>    TextHelper detailsBean = </xsl:text>
  <xsl:choose>
  <xsl:when test="not($same-bean)">
      <xsl:apply-templates select="DISPLAY/SERVER_INTERFACE[@NAME=$details-bean]" mode="file-edit-beans"/>
  </xsl:when>
     <xsl:otherwise><xsl:text>null;&#xa;</xsl:text></xsl:otherwise>
  </xsl:choose> 
  <xsl:text>
     Map&lt;String,String&gt; paramContents = new HashMap&lt;String, String&gt;();  
     Map&lt;String,String&gt; paramDetails = new HashMap&lt;String, String&gt;();&#xa;</xsl:text>
    <xsl:apply-templates select="DISPLAY/BEAN_SET_FIELD[@TARGET_BEAN=$content-bean]" mode="file-edit-params">
      <xsl:with-param name="role" select="'Contents'"/>
    </xsl:apply-templates>
    <xsl:apply-templates select="DISPLAY/BEAN_SET_FIELD[@TARGET_BEAN=$details-bean]" mode="file-edit-params">
      <xsl:with-param name="role" select="'Details'"/>
    </xsl:apply-templates>
	<xsl:text>
    setInputParams(contentsBean, paramContents, req);
    if (sameBean) {
      setInputParams(contentsBean, paramDetails, req);
    } else {
      setInputParams(detailsBean, paramDetails, req);
    }
    try {
    	contentsBean.callServer();
    } catch (final JDEException e) {
      Omega3Messages.addMessages(e, UserPreferencesFactory
        .getUserPreferences(req.getSession()).getLocale(),
        Omega3Messages.DISPLAY_PHASE, req.getSession());
      throw e;
    }
    if (!sameBean) {
	    try {
	      detailsBean.callServer();
	      } catch (final JDEException e) {
	      Omega3Messages.addMessages(e, UserPreferencesFactory
	        .getUserPreferences(req.getSession()).getLocale(),
	        Omega3Messages.DISPLAY_PHASE, req.getSession());
	      throw e;
	    }
    }
	if (application.getAttribute("fedDataMap") == null) {
      System.out.println("No datamap in the application, establishing");
      application.setAttribute("fedDataMap", new HashMap&lt;String, Object&gt;());
    }
	final Map&lt;String,Object&gt; dataMap =
          (Map&lt;String,Object&gt;) application.getAttribute("fedDataMap");
	//setup content field
  dataMap.put("</xsl:text>
  <xsl:value-of select="@PAGE_ID"/>
  <xsl:text>_ct_" + token, contentsBean.getRawProperty(
                                 contentsBean.getPropertyIndex(fieldContents)));
  //setup details field
  FileEditUtil.processTemplate(dataMap, "</xsl:text>
    <xsl:value-of select="@PAGE_ID"/>
    <xsl:text>_dt_" + token, &#xa;</xsl:text>
    <xsl:choose>
    <xsl:when test="not($same-bean)">
      <xsl:text>  detailsBean.getRawProperty(
	                detailsBean.getPropertyIndex(fieldDetails))</xsl:text>     
    </xsl:when>
    <xsl:otherwise>
	  <xsl:text>  contentsBean.getRawProperty(
	               contentsBean.getPropertyIndex(fieldDetails))</xsl:text>
	  </xsl:otherwise>
    </xsl:choose>
    <xsl:text>);
    contentsBean = null;
    detailsBean = null;
    return new Date().getTime();
  }
  synchronized public static boolean initTarget(final HttpServletRequest req,
                                                        final String contents) throws JDEException {
    TextHelper targetBean = </xsl:text>
	<xsl:apply-templates select="ACTION/SERVER_INTERFACE[@NAME=$target-bean]" mode="file-edit-beans"/>
	<xsl:text>Map&lt;String,String&gt; paramTarget = new HashMap&lt;String, String&gt;();&#xa;</xsl:text>
    <xsl:apply-templates select="DISPLAY/HIDDEN_FIELD[@TARGET_BEAN=$target-bean]" mode="file-edit-params">
      <xsl:with-param name="role" select="'Target'"/>
    </xsl:apply-templates>
    <xsl:text>&#xa;
    setInputParams(targetBean, paramTarget, req);
    //set document contents from external value
	  targetBean.setFormattedProperty(targetBean.getPropertyIndex(fieldTarget), 
                                                                      contents);
    try {
    targetBean.callServer();
    } catch (final JDEException e) {
      Omega3Messages.addMessages(e, UserPreferencesFactory
        .getUserPreferences(req.getSession()).getLocale(),
        Omega3Messages.DISPLAY_PHASE, req.getSession());
      throw e;
    }
    targetBean = null;
    return true;
  }
  private static void setInputParams(final TextHelper bean,
              final Map&lt;String, String&gt; paramMap,
              final HttpServletRequest req)
			    throws ClientException {
    final Iterator&lt;String&gt; params = paramMap.keySet().iterator();
    while (params.hasNext()) {
      final String pName = params.next();
      final String pVal = req.getParameter(pName);
      if (pVal == null) { // no required parameter in the request!
         throw new ClientException(
                 RuntimeMessages.ERR_REQUEST_PARAMETER_BAD_NAME, pName);
      }
      bean.setFieldValue(paramMap.get(pName), pVal);
    }
  }
}</xsl:text>
</xsl:template>

  <xsl:template match="SERVER_INTERFACE" mode="file-edit-imports">
    <xsl:value-of select="concat('import ', $package-prefix, '.interfaces.',
                                 @CLASS, 'Pkg.', @CLASS, '_', @OPERATION,
                                 '_TH;&#xa;')" />
  </xsl:template>
  
  <xsl:template match="SERVER_INTERFACE" mode="file-edit-beans">
    <xsl:text> new </xsl:text>
    <xsl:value-of select="concat(@CLASS, '_', @OPERATION,'_TH')"/>
    <xsl:text>();&#xa;</xsl:text>
  </xsl:template>

  <xsl:template match="SERVER_INTERFACE" mode="file-edit-fields">
    <xsl:param name="role"/>
    <xsl:param name="field-name"/>
    <xsl:text>  private static String field</xsl:text>
    <xsl:value-of select="$role"/>
    <xsl:text>="</xsl:text>
    <xsl:value-of select="$field-name"/>
    <xsl:text>";&#xa;</xsl:text>
  </xsl:template>
  
    <xsl:template match="BEAN_SET_FIELD|HIDDEN_FIELD" mode="file-edit-params">
    <xsl:param name="role"/>
    <xsl:text>    param</xsl:text>
    <xsl:value-of select="$role"/>
    <xsl:text>.put("</xsl:text>
    <xsl:value-of select="@PARAMETER_NAME"/>
    <xsl:text>","</xsl:text>
    <xsl:value-of select="@TARGET_FIELD"/>
    <xsl:text>");&#xa;</xsl:text>
  </xsl:template>
  
 </xsl:stylesheet>